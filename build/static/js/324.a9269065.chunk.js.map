{"version":3,"file":"static/js/324.a9269065.chunk.js","mappings":"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","sources":["pages/Hotel/BookingTable.tsx","components/data.tsx","components/style.tsx","pages/Hotel/MyHotelDetails.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Chip,\r\n  FormControl,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Typography\r\n} from \"@mui/material\";\r\nimport color from \"../../components/color\";\r\nimport { editHotel, getHotel } from \"../../services/services\";\r\n\r\ninterface Booking {\r\n  id: string;\r\n  avatar?: string;\r\n  geustName?: string;\r\n  checkInDate: string;\r\n  checkInTime: string;\r\n  checkOutDate: string;\r\n  checkOutTime: string;\r\n  status: string;\r\n  statusColor: string;\r\n}\r\n\r\nconst BookingTable = ({ bookings = [], hotelId }: any) => {\r\n  const [availability, setAvailability] = useState<string | null>(null);\r\n\r\n  // Fetch hotel availability on mount\r\n  useEffect(() => {\r\n    if (hotelId) {\r\n      getHotel(hotelId).then((res) => {\r\n        setAvailability(res?.data?.data?.roomAvailable || \"Unavailable\");\r\n      }).catch(() => {\r\n        setAvailability(\"Unavailable\");\r\n      });\r\n    }\r\n  }, [hotelId]);\r\n\r\n  const toggleAvailability = () => {\r\n    if (!hotelId) return;\r\n\r\n    const newStatus = availability === \"Available\" ? \"Unavailable\" : \"Available\";\r\n    setAvailability(newStatus);\r\n\r\n    editHotel(hotelId, { roomAvailable: newStatus })\r\n      .then(() => console.log(\"Availability updated\"))\r\n      .catch((err) => {\r\n        console.error(\"Error updating availability:\", err);\r\n        // Revert on error\r\n        setAvailability(availability === \"Available\" ? \"Unavailable\" : \"Available\");\r\n      });\r\n  };\r\n\r\n  if (availability === null) {\r\n    return <Typography p={2}>Loading availability...</Typography>;\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ padding: 2, background: color.thirdColor, boxShadow: \"0px 0px 14px rgba(0, 0, 0, 0.14)\", borderRadius: \"12px\" }}>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\r\n        <div>\r\n          <Typography variant=\"h6\" fontWeight=\"bold\">New bookings</Typography>\r\n          <Typography variant=\"body2\" color=\"gray\">\r\n            {bookings.length > 0\r\n              ? \"Recent guest reservations list\"\r\n              : \"No bookings found\"}\r\n          </Typography>\r\n        </div>\r\n        <FormControl sx={{ width: \"fit-content\", color: color.firstColor }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color={availability === \"Available\" ? \"success\" : \"error\"}\r\n            onClick={toggleAvailability}\r\n            disabled={!hotelId}\r\n          >\r\n            {availability}\r\n          </Button>\r\n        </FormControl>\r\n      </Box>\r\n\r\n      {bookings.length > 0 ? (\r\n        <TableContainer component={Paper} sx={{ marginTop: 2, boxShadow: \"none\" }}>\r\n          <Table style={{ background: color.thirdColor }}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {[\"Booking ID\", \"Guest name\", \"Checked In Date\", \"Checked In Time\",\r\n                  \"Checked Out Date\", \"Checked Out Time\", \"Status\", \"\"].map((header) => (\r\n                    <TableCell\r\n                      key={header}\r\n                      sx={{ fontWeight: \"bold\", color: \"gray\", fontSize: \"14px\", whiteSpace: \"nowrap\" }}\r\n                    >\r\n                      {header}\r\n                    </TableCell>\r\n                  ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {bookings.map((booking: any) => (\r\n                <TableRow style={{ border: \"solid 0px\", boxShadow: \"none\" }} key={booking.id}>\r\n                  <TableCell>{booking.id}</TableCell>\r\n                  <TableCell>\r\n                    <Box display=\"flex\" alignItems=\"center\" gap={1}>\r\n                      <Avatar src={booking.avatar} alt={booking.geustName} />\r\n                      <Typography>{booking.geustName}</Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>{booking.checkInDate}</TableCell>\r\n                  <TableCell>{booking.checkInTime}</TableCell>\r\n                  <TableCell>{booking.checkOutDate}</TableCell>\r\n                  <TableCell>{booking.checkOutTime}</TableCell>\r\n                  <TableCell>\r\n                    <Chip\r\n                      label={booking.status}\r\n                      sx={{\r\n                        backgroundColor: booking.statusColor,\r\n                        color: \"#000\",\r\n                        fontWeight: \"bold\"\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      ) : (\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          minHeight=\"200px\"\r\n          sx={{ background: color.thirdColor }}\r\n        >\r\n          <Typography variant=\"body1\" color=\"textSecondary\">\r\n            No bookings available for this hotel\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BookingTable;","import AcUnitIcon from \"@mui/icons-material/AcUnit\";\r\nimport AirportShuttleIcon from \"@mui/icons-material/AirportShuttle\";\r\nimport BeachAccessIcon from \"@mui/icons-material/BeachAccess\";\r\nimport BusinessCenterIcon from \"@mui/icons-material/BusinessCenter\";\r\nimport CasinoIcon from \"@mui/icons-material/Casino\";\r\nimport ChildCareIcon from \"@mui/icons-material/ChildCare\";\r\nimport DirectionsCarIcon from \"@mui/icons-material/DirectionsCar\";\r\nimport FireExtinguisherIcon from \"@mui/icons-material/FireExtinguisher\";\r\nimport FitnessCenterIcon from \"@mui/icons-material/FitnessCenter\";\r\nimport FreeBreakfastIcon from \"@mui/icons-material/FreeBreakfast\";\r\nimport KingBedIcon from \"@mui/icons-material/KingBed\";\r\nimport LocalBarIcon from \"@mui/icons-material/LocalBar\";\r\nimport LocalDiningIcon from \"@mui/icons-material/LocalDining\";\r\nimport LocalLaundryServiceIcon from \"@mui/icons-material/LocalLaundryService\";\r\nimport LocalParkingIcon from \"@mui/icons-material/LocalParking\";\r\nimport NightlifeIcon from \"@mui/icons-material/Nightlife\";\r\nimport OutdoorGrillIcon from \"@mui/icons-material/OutdoorGrill\";\r\nimport PetsIcon from \"@mui/icons-material/Pets\";\r\nimport PoolIcon from \"@mui/icons-material/Pool\";\r\nimport RoomServiceIcon from \"@mui/icons-material/RoomService\";\r\nimport SpaIcon from \"@mui/icons-material/Spa\";\r\nimport SportsTennisIcon from \"@mui/icons-material/SportsTennis\";\r\nimport TvIcon from \"@mui/icons-material/Tv\";\r\nimport WifiIcon from \"@mui/icons-material/Wifi\";\r\n\r\nexport const amenityIcons: { [key: string]: JSX.Element } = {\r\n  \"Swimming Pool\": <PoolIcon fontSize=\"small\" />,\r\n  Gym: <FitnessCenterIcon fontSize=\"small\" />,\r\n  \"Free WiFi\": <WifiIcon fontSize=\"small\" />,\r\n  \"Private Beach\": <BeachAccessIcon fontSize=\"small\" />,\r\n  Breakfast: <FreeBreakfastIcon fontSize=\"small\" />,\r\n  Parking: <LocalParkingIcon fontSize=\"small\" />,\r\n  Spa: <SpaIcon fontSize=\"small\" />,\r\n  Restaurant: <LocalDiningIcon fontSize=\"small\" />,\r\n  \"Airport Shuttle\": <AirportShuttleIcon fontSize=\"small\" />,\r\n  \"Business Center\": <BusinessCenterIcon fontSize=\"small\" />,\r\n  \"Pet Friendly\": <PetsIcon fontSize=\"small\" />,\r\n  Bar: <LocalBarIcon fontSize=\"small\" />,\r\n  \"Room Service\": <RoomServiceIcon fontSize=\"small\" />,\r\n  TV: <TvIcon fontSize=\"small\" />,\r\n  \"Air Conditioning\": <AcUnitIcon fontSize=\"small\" />,\r\n  \"Laundry Service\": <LocalLaundryServiceIcon fontSize=\"small\" />,\r\n  \"Child Care\": <ChildCareIcon fontSize=\"small\" />,\r\n  \"King Bed\": <KingBedIcon fontSize=\"small\" />,\r\n  Casino: <CasinoIcon fontSize=\"small\" />,\r\n  \"Car Rental\": <DirectionsCarIcon fontSize=\"small\" />,\r\n  \"Night Club\": <NightlifeIcon fontSize=\"small\" />,\r\n  \"Tennis Court\": <SportsTennisIcon fontSize=\"small\" />,\r\n  \"BBQ Facilities\": <OutdoorGrillIcon fontSize=\"small\" />,\r\n  \"Fire Safety\": <FireExtinguisherIcon fontSize=\"small\" />,\r\n};\r\n\r\n\r\nexport const amenitiesOptions = [\r\n  \"Swimming Pool\",\r\n  \"Gym\",\r\n  \"Free WiFi\",\r\n  \"Private Beach\",\r\n  \"Breakfast\",\r\n  \"Parking\",\r\n  \"Spa\",\r\n  \"Restaurant\",\r\n  \"Airport Shuttle\",\r\n  \"Business Center\",\r\n  \"Pet Friendly\",\r\n  \"Bar\",\r\n  \"Room Service\",\r\n  \"TV\",\r\n  \"Air Conditioning\",\r\n  \"Laundry Service\",\r\n  \"Child Care\",\r\n  \"King Bed\",\r\n  \"Casino\",\r\n  \"Car Rental\",\r\n  \"Night Club\",\r\n  \"Tennis Court\",\r\n  \"BBQ Facilities\",\r\n  \"Fire Safety\",\r\n];\r\n\r\n\r\nexport const roomTypes = [\r\n  { value: \"Single Room\", label: \"Single Room\", details: \"A basic room with a single bed, ideal for solo travelers.\" },\r\n  { value: \"Double Room\", label: \"Double Room\", details: \"Comes with a double bed or two single beds, suitable for two people.\" },\r\n  { value: \"Deluxe Room\", label: \"Deluxe Room\", details: \"A more spacious version of a standard room with better furnishings.\" },\r\n  { value: \"Executive Room\", label: \"Executive Room\", details: \"Designed for business travelers with a work desk and extra amenities.\" },\r\n  { value: \"Club Room\", label: \"Club Room\", details: \"Offers premium benefits like lounge access and complimentary breakfast.\" },\r\n  { value: \"Suite Room\", label: \"Suite Room\", details: \"A larger space with a separate living area, ideal for families or business executives.\" },\r\n  { value: \"Presidential Suite\", label: \"Presidential Suite\", details: \"A luxurious option with multiple rooms and high-end services.\" },\r\n  { value: \"Royal Suite\", label: \"Royal Suite\", details: \"Inspired by Indian royalty with grand interiors and luxury amenities.\" },\r\n  { value: \"Heritage Room\", label: \"Heritage Room\", details: \"Traditional decor and antique furnishings, found in heritage hotels.\" },\r\n  { value: \"Cottage/Villa\", label: \"Cottage/Villa\", details: \"Standalone accommodations, often found in resorts with private gardens or pools.\" },\r\n  { value: \"Treehouse Room\", label: \"Treehouse Room\", details: \"Unique elevated rooms, mostly available in nature retreats.\" },\r\n  { value: \"Houseboat Room\", label: \"Houseboat Room\", details: \"Found in Kerala and Kashmir, offering a floating hotel experience.\" },\r\n  { value: \"Studio Apartment\", label: \"Studio Apartment\", details: \"A self-contained unit with a kitchenette, preferred for long stays.\" },\r\n  { value: \"Serviced Apartment\", label: \"Serviced Apartment\", details: \"A fully furnished apartment with hotel-like services.\" },\r\n];","/* eslint-disable jsx-a11y/img-redundant-alt */\r\nimport { ArrowBackIos, ArrowForwardIos, Close, ExpandLess, ExpandMore, FiberManualRecord } from \"@mui/icons-material\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControlLabel,\r\n  Grid,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Modal,\r\n  Radio,\r\n  RadioProps,\r\n  styled,\r\n  TextField,\r\n  Typography,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport color from \"./color\";\r\nimport { useState } from \"react\";\r\n\r\nexport const BoxStyle = {\r\n  p: 2,\r\n  px: 4,\r\n  boxShadow: \"0px 0px 20px rgba(0, 0, 0, 0.18)\",\r\n  borderRadius: \"12px\",\r\n  my: 4,\r\n};\r\n\r\nexport function BpRadio(props: RadioProps) {\r\n  return (\r\n    <Radio\r\n      style={{ padding: \"6px\" }}\r\n      disableRipple\r\n      color=\"default\"\r\n      checkedIcon={<BpCheckedIcon />}\r\n      icon={<BpIcon />}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport const BpIcon = styled(\"span\")(({ theme }) => ({\r\n  borderRadius: \"50%\",\r\n  width: 18,\r\n  height: 18,\r\n  boxShadow:\r\n    \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\r\n  backgroundColor: \"#f5f8fa\",\r\n  backgroundImage:\r\n    \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\r\n  \".Mui-focusVisible &\": {\r\n    outline: \"2px auto rgba(41, 91, 122, 0.6)\",\r\n    outlineOffset: 2,\r\n  },\r\n  \"input:hover ~ &\": {\r\n    backgroundColor: \"#ebf1f5\",\r\n    ...theme.applyStyles(\"dark\", {\r\n      backgroundColor: \"#30404d\",\r\n    }),\r\n  },\r\n  \"input:disabled ~ &\": {\r\n    boxShadow: \"none\",\r\n    background: \"rgba(206,217,224,.5)\",\r\n    ...theme.applyStyles(\"dark\", {\r\n      background: \"rgba(57,75,89,.5)\",\r\n    }),\r\n  },\r\n  ...theme.applyStyles(\"dark\", {\r\n    boxShadow: \"0 0 0 1px rgb(16 22 26 / 40%)\",\r\n    backgroundColor: \"#394b59\",\r\n    backgroundImage:\r\n      \"linear-gradient(180deg,hsla(0,0%,100%,.05),hsla(0,0%,100%,0))\",\r\n  }),\r\n}));\r\n\r\nexport const BpCheckedIcon = styled(BpIcon)({\r\n  backgroundColor: color.secondColor,\r\n  backgroundImage:\r\n    \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\r\n  \"&::before\": {\r\n    display: \"block\",\r\n    width: 18,\r\n    height: 18,\r\n    backgroundImage: \"radial-gradient(#fff,#fff 28%,transparent 32%)\",\r\n    content: '\"\"',\r\n  },\r\n  \"input:hover ~ &\": {\r\n    backgroundColor: color.secondColor,\r\n  },\r\n});\r\n\r\nexport const StyledLabel = styled(FormControlLabel)(\r\n  ({ theme, checked }: { theme?: any; checked?: boolean }) => ({\r\n    color: checked ? color.thirdColor : color.firstColor,\r\n    background: checked\r\n      ? color.firstColor\r\n      : \"transparent\",\r\n    borderRadius: \" 2px 8px 8px 2px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    transition: \"0.3s\",\r\n    paddingLeft: checked ? \"30px\" : \"auto\",\r\n    marginLeft: checked ? \"-40px\" : \"-10px\",\r\n    paddingRight: \"10px\",\r\n    fontSize: checked ? \"1rem\" : \"0.95rem\",\r\n  })\r\n);\r\n\r\nexport const CustomRadio = styled(Radio)({\r\n  color: color.firstColor,\r\n  \"&.Mui-checked\": {\r\n    color: color.thirdColor,\r\n  },\r\n});\r\n\r\nexport const CustomPrevArrow = (props: any) => {\r\n  const { onClick } = props;\r\n  return (\r\n    <IconButton\r\n      onClick={onClick}\r\n      sx={{\r\n        position: \"absolute\",\r\n        left: \"0px\",\r\n        top: \"50%\",\r\n        transform: \"translateY(-50%)\",\r\n        background: color.background,\r\n        color: \"white\",\r\n        zIndex: 2,\r\n        \"&:hover\": { background: color.firstColor },\r\n      }}\r\n    >\r\n      <ArrowBackIos />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport const CustomNextArrow = (props: any) => {\r\n  const { onClick } = props;\r\n  return (\r\n    <IconButton\r\n      onClick={onClick}\r\n      sx={{\r\n        position: \"absolute\",\r\n        right: \"0px\",\r\n        top: \"50%\",\r\n        transform: \"translateY(-50%)\",\r\n        background: color.background,\r\n        color: \"white\",\r\n        zIndex: 2,\r\n        \"&:hover\": { background: color.firstColor },\r\n      }}\r\n    >\r\n      <ArrowForwardIos />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport const CustomTextField = styled(TextField)({\r\n  marginBottom: \"10px\",\r\n  \"& .MuiOutlinedInput-root\": {\r\n    \"& fieldset\": {\r\n      border: \"none\",\r\n      borderRadius: \"52px\",\r\n      boxShadow: \"4px 4px 10px rgba(104, 39, 184, 0.17)\",\r\n      color: color.firstColor,\r\n    },\r\n    \"&:hover fieldset\": {\r\n      border: \"solid 1px\",\r\n    },\r\n    \"&.Mui-focused fieldset\": {\r\n      border: \"solid 1px\",\r\n    },\r\n  },\r\n  \"& .MuiInputBase-input\": {\r\n    color: color.firstColor,\r\n  },\r\n  \"& .MuiInputLabel-root\": {\r\n    color: color.firstColor,\r\n  },\r\n  \"& .MuiInputLabel-root.Mui-focused\": {\r\n    color: color.firstColor,\r\n  },\r\n});\r\n\r\nexport const LoginTextField = styled(TextField)({\r\n  marginBottom: \"20px\",\r\n  \"& .MuiOutlinedInput-root\": {\r\n    \"& fieldset\": {\r\n      border: \"solid 1px white\",\r\n      boxShadow: \"-4px -4px 10px rgba(255, 255, 255, 0.36) inset\",\r\n      color: \"white\",\r\n      borderRadius: \"12px\",\r\n    },\r\n    \"&:hover fieldset\": {\r\n      border: \"solid 1px\",\r\n    },\r\n    \"&.Mui-focused fieldset\": {\r\n      border: \"solid 1px\",\r\n    },\r\n  },\r\n  \"& .MuiInputBase-input\": {\r\n    color: \"white\",\r\n  },\r\n  \"& .MuiInputLabel-root\": {\r\n    color: \"white\",\r\n  },\r\n  \"& .MuiInputLabel-root.Mui-focused\": {\r\n    color: \"white\",\r\n  },\r\n});\r\n\r\nexport const useScreenSize = () => {\r\n  const theme = useTheme();\r\n  const isBelow400px = useMediaQuery(theme.breakpoints.down(400));\r\n  return { isBelow400px };\r\n};\r\n\r\nexport const inputSx = {\r\n  border: \"none\",\r\n  borderRadius: \"52px\",\r\n  boxShadow: \"4px 4px 10px rgba(104, 39, 184, 0.17)\",\r\n  color: color.firstColor,\r\n  padding: \"0px\",\r\n  marginTop: \"0px\",\r\n  width: \"100%\",\r\n  boxSizing: \"border-box\",\r\n  \"& .MuiOutlinedInput-root\": {\r\n    padding: \"0px\",\r\n    borderBottom: \"4px solid\",\r\n    borderColor: color.firstColor,\r\n    \"& fieldset\": {\r\n      border: \"none\",\r\n    },\r\n    \"&:hover fieldset\": {\r\n      border: \"none\",\r\n    },\r\n    \"&.Mui-focused fieldset\": {\r\n      border: \"none\",\r\n    },\r\n    \"& .MuiInputLabel-root\": {\r\n      color: color.firstColor,\r\n    },\r\n  },\r\n};\r\n\r\n\r\ninterface ImageGridProps {\r\n  propertyImages: string[];\r\n}\r\n\r\nexport const ImageGrid: React.FC<ImageGridProps> = ({ propertyImages }) => {\r\n  const maxImages = Math.min(propertyImages.length, 7);\r\n  const displayImages = propertyImages.slice(0, maxImages);\r\n  const hasMore = propertyImages.length > 7;\r\n  const [open, setOpen] = useState(false);\r\n  const isMobile = useMediaQuery(\"(max-width: 900px)\");\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: { xs: \"block\", md: \"grid\" },\r\n        gap: { xs: 0, md: 1 },\r\n        width: \"100%\",\r\n        height: \"300px\",\r\n        gridTemplateColumns:\r\n          displayImages.length > 5 ? \"40% 20% 20% 20%\" : \"60% 20% 20%\",\r\n        gridTemplateRows: \"auto\",\r\n        \"& img\": {\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          objectFit: \"cover\",\r\n          borderRadius: \"8px\",\r\n        },\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <Box\r\n        onClick={() => setOpen(true)}\r\n        sx={{\r\n          gridColumn: { xs: \"auto\", md: \"span 1\" },\r\n          gridRow: { xs: \"auto\", md: \"span 2\" },\r\n          height: \"300px\",\r\n          width: { xs: \"100%\", md: \"auto\" },\r\n          display: { xs: \"block\", md: \"grid\" },\r\n        }}\r\n      >\r\n        <img style={{height:'300px'}} src={displayImages[0]} alt=\"Main\" />\r\n      </Box>\r\n\r\n      {!isMobile &&\r\n        displayImages.slice(1).map((src, index) => {\r\n          if (index % 2 === 0) {\r\n            return (\r\n              <Box\r\n                onClick={() => setOpen(true)}\r\n                key={index}\r\n                display=\"grid\"\r\n                sx={{\r\n                  gridTemplateRows: \"146px 146px\",\r\n                  height: \"300px\",\r\n                  gap: \"8px\",\r\n                }}\r\n              >\r\n                <img\r\n                  src={src}\r\n                  alt={`Image ${index + 2}`}\r\n                  style={{ height: \"100%\", width: \"100%\", objectFit: \"cover\" }}\r\n                />\r\n\r\n                {displayImages[index + 2] && (\r\n                  <img\r\n                    src={displayImages[index + 2]}\r\n                    alt={`Image ${index + 3}`}\r\n                    style={{\r\n                      height: \"100%\",\r\n                      width: \"100%\",\r\n                      objectFit: \"cover\",\r\n                    }}\r\n                  />\r\n                )}\r\n              </Box>\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n\r\n      {hasMore && (\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            bottom: 10,\r\n            right: 10,\r\n            background: color.background,\r\n            color: \"white\",\r\n            borderRadius: \"8px\",\r\n            p: 1,\r\n            textAlign: \"center\",\r\n            cursor: \"pointer\",\r\n            boxShadow:\r\n              \"-4px -4px 10px rgba(32, 32, 32, 0.28) inset, 0px 0px 10px rgba(32, 32, 32, 0.28)\",\r\n          }}\r\n        >\r\n          <Typography variant=\"body2\">\r\n            + {isMobile ? propertyImages.length - 1 : propertyImages.length - 7} More\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: \"80%\",\r\n            height: \"80%\",\r\n            bgcolor: \"white\",\r\n            boxShadow: 24,\r\n            p: 2,\r\n            overflowY: \"auto\",\r\n            borderRadius: \"8px\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" textAlign=\"center\" mb={2}>\r\n            All Images\r\n          </Typography>\r\n\r\n          <Close\r\n            onClick={() => setOpen(false)}\r\n            sx={{\r\n              position: \"absolute\",\r\n              top: 10,\r\n              right: 10,\r\n            }}\r\n          ></Close>\r\n          <Box\r\n            display=\"grid\"\r\n            gap={2}\r\n            sx={{\r\n              gridTemplateColumns: \"repeat(auto-fill, minmax(150px, 1fr))\",\r\n            }}\r\n          >\r\n            {propertyImages.map((img, index) => (\r\n              <img\r\n                key={index}\r\n                src={img}\r\n                alt={`Image ${index + 1}`}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"150px\",\r\n                  objectFit: \"cover\",\r\n                  borderRadius: \"8px\",\r\n                }}\r\n              />\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </Box>\r\n  );\r\n};\r\n\r\n\r\n\r\n  \r\nexport const RoomAmenities = ({\r\n  room,\r\n}: {\r\n  room: { propertyName: string; amenities: string[] };\r\n}) => {\r\n  const [showAll, setShowAll] = useState(false);\r\n  const displayedAmenities = showAll\r\n    ? room.amenities\r\n    : room.amenities.slice(0, 6);\r\n  const halfIndex = Math.ceil(displayedAmenities.length / 2);\r\n  const firstColumn = displayedAmenities.slice(0, halfIndex);\r\n  const secondColumn = displayedAmenities.slice(halfIndex);\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ mt: { xs: 1, md: 0 } }}>\r\n        <Grid container spacing={{ xs: 1, md: 0 }}>\r\n          {[firstColumn, secondColumn].map((column, colIndex) => (\r\n            <Grid item xs={6} md={12} key={colIndex}>\r\n              <List disablePadding>\r\n                {column.map((amenity, index) => {\r\n                  const isLastItem =\r\n                    colIndex === 1 &&\r\n                    index === column.length - 1 &&\r\n                    room.amenities.length > 6;\r\n\r\n                  return (\r\n                    <ListItem\r\n                      key={index}\r\n                      sx={{\r\n                        py: 0.2,\r\n                        px: { xs: 0, md: 2 },\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        flexWrap: \"wrap\",\r\n                      }}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"flex-start\",\r\n                        }}\r\n                      >\r\n                        <ListItemIcon sx={{ minWidth: \"20px\", mt: 0.5 }}>\r\n                          <FiberManualRecord sx={{ fontSize: \"8px\" }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                          style={{ margin: 0 }}\r\n                          primary={amenity}\r\n                          primaryTypographyProps={{\r\n                            style: { fontSize: \"12px\" },\r\n                          }}\r\n                        />\r\n                      </div>\r\n\r\n                      {isLastItem && (\r\n                        <>\r\n                          <Button\r\n                            onClick={() => setShowAll(!showAll)}\r\n                            sx={{\r\n                              textTransform: \"none\",\r\n                              fontSize: \"14px\",\r\n                              ml: \"auto\",\r\n                              p: 0,\r\n                              color: color.firstColor,\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {showAll ? \"Show Less\" : \"... Show All\"}\r\n                          </Button>\r\n                          {showAll ? <ExpandLess /> : <ExpandMore />}\r\n                        </>\r\n                      )}\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getRatingText = (rating: number) => {\r\n  if (rating >= 4.5) return \"Excellent\";\r\n  if (rating >= 3.5) return \"Good\";\r\n  if (rating >= 2.5) return \"Average\";\r\n  if (rating >= 1.5) return \"Poor\";\r\n  return \"Very Poor\";\r\n};\r\n\r\nexport const getRatingColor = (rating: number) => {\r\n  if (rating >= 4.5) return \"#46b648\";\r\n  if (rating >= 3.5) return \"#b4d137\"; \r\n  if (rating >= 2.5) return \"#fed018\"; \r\n  if (rating >= 1.5) return \"#f7921e\"; \r\n  return \"#e91d26\"; \r\n};","/* eslint-disable jsx-a11y/img-redundant-alt */\r\nimport {\r\n  AddCircleOutline,\r\n  CheckCircle,\r\n  Edit,\r\n  Star\r\n} from \"@mui/icons-material\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardMedia,\r\n  Chip,\r\n  Grid,\r\n  List,\r\n  styled,\r\n  Tab,\r\n  Tabs,\r\n  ToggleButton,\r\n  Typography,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport color from \"../../components/color\";\r\nimport CustomButton from \"../../components/CustomButton\";\r\nimport { amenityIcons } from \"../../components/data\";\r\nimport { BoxStyle, ImageGrid, RoomAmenities } from \"../../components/style\";\r\nimport theme from \"../../theme\";\r\nimport { getAllBookingsofMyHotel, getMyAllHotelswithBelongsTo } from \"../../services/services\";\r\nimport BookingTable from \"./BookingTable\";\r\n\r\nconst hotelData = {\r\n  propertyName: \"Hotel Metropol by Maier Private hotels\",\r\n  address: \"Plot no 10, 11, Mancheswar, Bhubaneswar, Odisha 751001, India\",\r\n  description:\r\n    \"A good description should be a narrative. It should tell the story of your property. It should focus on the emotions that the property and its amenities evoke. This is where you can describe the style of the property, the history of those who have operated there, and the importance of its place in the neighborhood.\",\r\n  rating: 4.7,\r\n  reviews: 134,\r\n  amenities: [\r\n    \"Gym\",\r\n    \"Swimming Pool\",\r\n    \"Free WiFi\",\r\n    \"Private Beach\",\r\n    \"Breakfast\",\r\n  ],\r\n  propertyImages: [\r\n    \"/assets/hotel 1.jpg\",\r\n    \"/assets/hotel 2.jpg\",\r\n    \"/assets/room-image 1.jpg\",\r\n    \"/assets/room-image 2.jpg\",\r\n    \"/assets/room-image 3.jpg\",\r\n    \"/assets/room-image 3.jpg\",\r\n    \"/assets/room-image 3.jpg\",\r\n    \"/assets/room-image 3.jpg\",\r\n  ],\r\n  rooms: [\r\n    {\r\n      id: 1,\r\n      propertyName: \"Deluxe Double Room\",\r\n      size: \"225 sqft (21 sq.m) | Double Bed\",\r\n      price: {\r\n        \"3 hrs\": 1543,\r\n        \"6 hrs\": 1943,\r\n        \"12 hrs\": 2743,\r\n      },\r\n      amenities: [\r\n        \"Iron/Ironing Board\",\r\n        \"Bathroom \",\r\n        \"24-hour Housekeeping\",\r\n        \"24-hour In-room Dining\",\r\n        \"Laundry Service\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n      ],\r\n      image: \"/assets/room-image 1.jpg\",\r\n    },\r\n    {\r\n      id: 2,\r\n      propertyName: \"Superior Double Room\",\r\n      size: \"250 sqft (23 sq.m) | Queen Bed\",\r\n      price: {\r\n        \"3 hrs\": 1743,\r\n        \"6 hrs\": 2143,\r\n        \"12 hrs\": 2943,\r\n      },\r\n      amenities: [\r\n        \"Iron/Ironing Board\",\r\n        \"Bathroom\",\r\n        \"24-hour Housekeeping\",\r\n        \"Laundry Service\",\r\n        \"Air Conditioning\",\r\n      ],\r\n      image: \"/assets/room-image 1.jpg\",\r\n    },\r\n    {\r\n      id: 3,\r\n      propertyName: \"Superior Double Room\",\r\n      size: \"250 sqft (23 sq.m) | Queen Bed\",\r\n      price: {\r\n        \"3 hrs\": 1743,\r\n        \"6 hrs\": 2143,\r\n        \"12 hrs\": 2943,\r\n      },\r\n      amenities: [\r\n        \"Iron/Ironing Board\",\r\n        \"Bathroom\",\r\n        \"24-hour Housekeeping\",\r\n        \"Laundry Service\",\r\n        \"Air Conditioning\",\r\n      ],\r\n      image: \"/assets/room-image 1.jpg\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst MyHotelDetails = () => {\r\n  const [selectedRoom, setSelectedRoom] = useState(hotelData.rooms[0]);\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  const { id } = useParams();\r\n\r\n  const [booking, setBooking] = useState<any[]>([])\r\n\r\n  useEffect(() => {\r\n    const today = new Date();\r\n    const next10Days = new Date();\r\n    next10Days.setDate(today.getDate() + 10);\r\n\r\n    getAllBookingsofMyHotel({\r\n      data: { filter: \"\" },\r\n      page: 0,\r\n      pageSize: 50,\r\n      order: [[\"createdAt\", \"ASC\"]],\r\n    }).then((res) => {\r\n      const allBookings = res?.data?.data?.rows || [];\r\n\r\n      // Filter bookings where checkInDate is within the next 10 days\r\n      const filteredBookings = allBookings.filter((booking: any) => {\r\n        const checkInDate = new Date(booking.checkInDate);\r\n        return checkInDate >= today && checkInDate <= next10Days;\r\n      });\r\n\r\n      setBooking(filteredBookings);\r\n    });\r\n  }, []);\r\n\r\n  const [expanded, setExpanded] = useState(false);\r\n  const maxLength = isMobile ? 100 : 350;\r\n\r\n  const [value, setValue] = useState(0);\r\n\r\n  const navigate = useNavigate();\r\n  const [hotelData1, setHotelData1] = useState<any>([]);\r\n\r\n  const [roomData, setRoomData] = useState<any>([]);\r\n  // console.log(id);\r\n\r\n  useEffect(() => {\r\n    getMyAllHotelswithBelongsTo({\r\n      id: id,\r\n      secondTable: 'Room'\r\n    }).then((res) => {\r\n      setHotelData1(res?.data?.data[0]);\r\n      setRoomData(res?.data?.data[0]?.rooms[0]);\r\n      const rooms = res?.data?.data[0]?.rooms;\r\n      if (rooms.length > 0) {\r\n        setSelectedRoom(rooms[0]);\r\n      }\r\n    }).catch((err) => {\r\n      console.log(err);\r\n    })\r\n  }, [])\r\n\r\n  console.log(selectedRoom)\r\n\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        background: color.thirdColor,\r\n        px: 2,\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          px: { xs: 0, md: 2 },\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            ...BoxStyle,\r\n            px: { xs: 2, md: 3 },\r\n            py: 3,\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              position: \"absolute\",\r\n              top: 24,\r\n              right: 24,\r\n              display: { xs: \"none\", md: \"flex\" },\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              gap: \"6px\",\r\n            }}\r\n          >\r\n            <CustomButton\r\n              customStyles={{\r\n                fontSize: \"14px\",\r\n              }}\r\n              variant=\"contained\"\r\n              startIcon={<Edit />}\r\n              onClick={() => {\r\n                navigate(\"/property-registration\", { state: id });\r\n              }}\r\n            >\r\n              Edit Hotel\r\n            </CustomButton>\r\n          </Box>\r\n\r\n          <Typography\r\n            variant=\"h5\"\r\n            sx={{\r\n              fontSize: { xs: \"18px\", md: \"24px\" },\r\n              fontWeight: 600,\r\n              color: color.firstColor,\r\n            }}\r\n          >\r\n            {hotelData1?.propertyName}\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            sx={{\r\n              fontFamily: \"CustomFontSB\",\r\n              fontSize: { xs: \"10px\", md: \"14px\" },\r\n              color: color.paperColor,\r\n              mt: { xs: 1, md: 0 },\r\n            }}\r\n          >\r\n            {hotelData1?.address}\r\n          </Typography>\r\n\r\n          <Box py={2} sx={{ pr: { xs: 0, md: 2 }, mx: -1 }}>\r\n            <ImageGrid propertyImages={hotelData1.propertyImages || []}></ImageGrid>\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              display: { xs: \"flex\", md: \"flex\" },\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"body2\"\r\n              fontWeight={600}\r\n              color={color.thirdColor}\r\n              sx={{\r\n                background: color.background,\r\n                px: 1,\r\n                borderRadius: \"4px\",\r\n                fontSize: \"14px\",\r\n                mb: 2,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                gap: \"6px\",\r\n              }}\r\n            >\r\n              <Star></Star>\r\n              {/* {hotelData1.rating} ({hotelData.reviews} reviews) */}\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Box sx={{ maxWidth: \"100%\" }}>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              sx={{\r\n                fontFamily: \"CustomFontB\",\r\n                fontSize: \"16px\",\r\n                color: color.paperColor,\r\n              }}\r\n            >\r\n              Property Description\r\n            </Typography>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              sx={{\r\n                fontSize: \"14px\",\r\n                mt: 1,\r\n              }}\r\n            >\r\n              {expanded || hotelData1?.propertyDesc?.length <= maxLength\r\n                ? hotelData1?.propertyDesc\r\n                : `${hotelData1?.propertyDesc?.substring(0, maxLength)}...`}\r\n              {hotelData1?.propertyDesc?.length > maxLength && (\r\n                <Button\r\n                  sx={{\r\n                    textTransform: \"none\",\r\n                    fontSize: \"14px\",\r\n                    p: 0,\r\n                    ml: 1,\r\n                    minWidth: 0,\r\n                  }}\r\n                  onClick={() => setExpanded(!expanded)}\r\n                >\r\n                  {expanded ? \"Show less\" : \"More\"}\r\n                </Button>\r\n              )}\r\n            </Typography>\r\n\r\n            <Typography\r\n              sx={{\r\n                fontFamily: \"CustomFontB\",\r\n                fontSize: \"16px\",\r\n                color: color.paperColor,\r\n                mt: 2,\r\n              }}\r\n            >\r\n              Highlights\r\n            </Typography>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                gap: { xs: 2, md: 6 },\r\n                flexWrap: \"wrap\",\r\n                mt: 3,\r\n                p: 2,\r\n                px: 4,\r\n                pt: 3,\r\n                backgroundColor: \"rgba(93, 93, 93, 0.14)\",\r\n                justifyContent: \"space-around\",\r\n                borderRadius: \"12px\",\r\n                width: \"fit-content\",\r\n              }}\r\n            >\r\n              {roomData?.amenities?.slice(0, 5).map((amenity: any, index: any) => (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <Chip\r\n                    key={index}\r\n                    icon={\r\n                      <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                        {React.cloneElement(\r\n                          amenityIcons[amenity] || <AddCircleOutline />,\r\n                          {\r\n                            sx: {\r\n                              fontSize: { xs: 26, md: 34 },\r\n                              color: color.paperColor,\r\n                            },\r\n                          }\r\n                        )}\r\n                      </Box>\r\n                    }\r\n                    size=\"small\"\r\n                    sx={{ bgcolor: \"transparent\" }}\r\n                  />\r\n\r\n                  <Typography\r\n                    sx={{ fontSize: { xs: \"10px\", md: \"14px\" } }}\r\n                    mt={1.5}\r\n                  >\r\n                    {amenity}\r\n                  </Typography>\r\n                </div>\r\n              ))}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box sx={{ ...BoxStyle, px: { xs: 1, md: 4 } }}>\r\n          <Tabs\r\n            variant=\"scrollable\"\r\n            value={value}\r\n            onChange={(event, newValue) => setValue(newValue)}\r\n            sx={{\r\n              \"& .MuiTab-root\": {\r\n                textTransform: \"none\",\r\n                fontWeight: 600,\r\n                color: color.forthColor,\r\n                fontSize: \"1rem\",\r\n                p: 0,\r\n                minWidth: \"10px\",\r\n                mx: 1,\r\n                px: 0.5,\r\n              },\r\n              \"& .Mui-selected\": {\r\n                color: \"#000 !important\",\r\n                fontWeight: \"bold\",\r\n              },\r\n              \"& .MuiTabs-indicator\": {\r\n                backgroundColor: \"#000\",\r\n                height: 3,\r\n                borderRadius: \"4px\",\r\n              },\r\n            }}\r\n          >\r\n            <Tab label=\"Rooms\" />\r\n            <Tab label=\"Service & Amenities\" />\r\n            {/* <Tab label=\"Reviews\" /> */}\r\n            <Tab label=\"Policies\" />\r\n          </Tabs>\r\n\r\n          <TabPanel value={value} index={0}>\r\n            <Grid container spacing={2}>\r\n              {Array.isArray(roomData) && roomData.map((room: any) => (\r\n                <Grid item xs={12} md={6} key={room.id}>\r\n                  <Card\r\n                    onClick={() => setSelectedRoom(room)}\r\n                    sx={{\r\n                      p: 2,\r\n                      display: \"flex\",\r\n                      flexDirection: { xs: \"column\", md: \"column\" },\r\n                      alignItems: \"flex-start\",\r\n                      background: color.thirdColor,\r\n                      borderRadius: \"12px\",\r\n                      boxShadow: \"0px 0px 20px rgba(0, 0, 0, 0.18)\",\r\n                      border: \"solid 2px\",\r\n                      borderColor:\r\n                        selectedRoom.id === room.id\r\n                          ? color.firstColor\r\n                          : \"transparent\",\r\n                      position: \"relative\",\r\n                      overflow: \"visible\",\r\n                    }}\r\n                  >\r\n                    {selectedRoom.id === room.id && (\r\n                      <CheckCircle\r\n                        sx={{\r\n                          position: \"absolute\",\r\n                          top: -10,\r\n                          right: -10,\r\n                          color: color.firstColor,\r\n                          background: color.thirdColor,\r\n                          borderRadius: \"50%\",\r\n                        }}\r\n                      ></CheckCircle>\r\n                    )}\r\n\r\n                    <Box sx={{ width: { xs: \"100%\", md: \"100%\" } }}>\r\n                      <CardMedia\r\n                        component=\"img\"\r\n                        height=\"160\"\r\n                        sx={{\r\n                          borderRadius: \"12px\",\r\n                          width: { xs: \"100%\", md: \"100%\" },\r\n                        }}\r\n                        image={room?.image}\r\n                        alt={room?.roomCategory}\r\n                      />\r\n\r\n                      <Typography\r\n                        variant=\"h6\"\r\n                        mt={1.5}\r\n                        fontWeight={\"bold\"}\r\n                        sx={{\r\n                          background:\r\n                            selectedRoom.id === room.id\r\n                              ? color.firstColor\r\n                              : \"transparent\",\r\n                          ml: -2,\r\n                          pl: 2,\r\n                          borderRadius: \"0px 4px 4px 0px\",\r\n                          color:\r\n                            selectedRoom.id === room.id\r\n                              ? color.thirdColor\r\n                              : color.firstColor,\r\n                          mb: selectedRoom.id === room.id ? 1 : 0,\r\n                          width: { xs: \"fit-content\", md: \"fit-content\" },\r\n                          pr: { xs: 2, md: 2 },\r\n                          mt: { xs: 2, md: 2 },\r\n                          transition: \"all 0.3s\",\r\n                        }}\r\n                      >\r\n                        {room.propertyName}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\">{room.size}</Typography>\r\n                    </Box>\r\n\r\n                    <List\r\n                      sx={{\r\n                        py: 0,\r\n                        mt: 1,\r\n                        width: \"100%\",\r\n                        pb: { xs: 0, md: \"0px\" },\r\n                      }}\r\n                    >\r\n                      <RoomAmenities key={room.id} room={room} />\r\n                    </List>\r\n\r\n                    <Box\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        flexWrap: \"wrap\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"space-around\",\r\n                        gap: \"20px\",\r\n                        position: { xs: \"unset\", md: \"unset\" },\r\n                        bottom: 16,\r\n                        right: 16,\r\n                        // width:'100%',\r\n                        margin: \"auto\",\r\n                        marginTop: \"20px\",\r\n                      }}\r\n                    >\r\n                      {Object.keys(room.price).map((slot) => (\r\n                        <StyledToggleButton\r\n                          key={slot}\r\n                          value={slot}\r\n                          style={{ borderColor: color.forthColor }}\r\n                        >\r\n                          <Typography\r\n                            px={1}\r\n                            py={0.5}\r\n                            sx={{\r\n                              fontSize: { xs: \"8px\", md: \"8px\" },\r\n                              lineHeight: 1.4,\r\n                            }}\r\n                          >\r\n                            <span style={{ fontSize: \"18px\", fontWeight: 600 }}>\r\n                              {slot}\r\n                            </span>\r\n                            <br />₹{\" \"}\r\n                            {room.price[slot as keyof typeof room.price]}\r\n                            <br />\r\n                            Incl. Taxes\r\n                          </Typography>\r\n                        </StyledToggleButton>\r\n                      ))}\r\n                    </Box>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n            <Typography>Services and amenities provided.</Typography>\r\n          </TabPanel>\r\n          <TabPanel value={value} index={2}>\r\n            <Typography>Customer reviews and ratings.</Typography>\r\n          </TabPanel>\r\n          {/* <TabPanel value={value} index={3}>\r\n          <Typography>Hotel policies and guidelines.</Typography>\r\n        </TabPanel> */}\r\n        </Box>\r\n        <Grid container spacing={3} mt={0}>\r\n          <Grid item xs={12} md={12}>\r\n            <BookingTable booking={booking} hotelId={id}></BookingTable>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyHotelDetails;\r\n\r\nconst StyledToggleButton = styled(ToggleButton)(({ theme }) => ({\r\n  borderRadius: \"4px\",\r\n  textTransform: \"none\",\r\n  fontSize: \"12px\",\r\n  padding: \"0px 10px\",\r\n  fontWeight: 600,\r\n  border: \"1px solid rgba(61, 61, 61, 0.4)\",\r\n  \"&.Mui-selected\": {\r\n    background: color.background,\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nconst TabPanel = ({\r\n  children,\r\n  value,\r\n  index,\r\n}: {\r\n  children: React.ReactNode;\r\n  value: number;\r\n  index: number;\r\n}) => {\r\n  return (\r\n    <div hidden={value !== index}>\r\n      {value === index && (\r\n        <Box p={1} mt={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"names":["_ref","bookings","hotelId","availability","setAvailability","useState","useEffect","getHotel","then","res","_res$data","_res$data$data","data","roomAvailable","catch","_jsx","Typography","p","children","_jsxs","Box","sx","padding","background","color","thirdColor","boxShadow","borderRadius","display","justifyContent","alignItems","mb","variant","fontWeight","length","FormControl","width","firstColor","Button","onClick","toggleAvailability","newStatus","editHotel","console","log","err","error","disabled","TableContainer","component","Paper","marginTop","Table","style","TableHead","TableRow","map","header","TableCell","fontSize","whiteSpace","TableBody","booking","border","id","gap","Avatar","src","avatar","alt","geustName","checkInDate","checkInTime","checkOutDate","checkOutTime","Chip","label","status","backgroundColor","statusColor","minHeight","amenityIcons","PoolIcon","Gym","FitnessCenterIcon","WifiIcon","BeachAccessIcon","Breakfast","FreeBreakfastIcon","Parking","LocalParkingIcon","Spa","SpaIcon","Restaurant","LocalDiningIcon","AirportShuttleIcon","BusinessCenterIcon","PetsIcon","Bar","LocalBarIcon","RoomServiceIcon","TV","TvIcon","AcUnitIcon","LocalLaundryServiceIcon","ChildCareIcon","KingBedIcon","Casino","CasinoIcon","DirectionsCarIcon","NightlifeIcon","SportsTennisIcon","OutdoorGrillIcon","FireExtinguisherIcon","amenitiesOptions","roomTypes","value","details","BoxStyle","px","my","BpRadio","props","Radio","disableRipple","checkedIcon","BpCheckedIcon","icon","BpIcon","styled","theme","height","backgroundImage","outline","outlineOffset","applyStyles","secondColor","content","StyledLabel","FormControlLabel","_ref2","checked","transition","paddingLeft","marginLeft","paddingRight","CustomRadio","CustomNextArrow","IconButton","position","right","top","transform","zIndex","ArrowForwardIos","CustomTextField","TextField","marginBottom","LoginTextField","useScreenSize","useTheme","isBelow400px","useMediaQuery","breakpoints","down","inputSx","boxSizing","borderBottom","borderColor","ImageGrid","_ref3","propertyImages","maxImages","Math","min","displayImages","slice","hasMore","open","setOpen","isMobile","xs","md","gridTemplateColumns","gridTemplateRows","objectFit","gridColumn","gridRow","index","bottom","textAlign","cursor","Modal","onClose","left","bgcolor","overflowY","Close","img","RoomAmenities","_ref4","room","showAll","setShowAll","displayedAmenities","amenities","halfIndex","ceil","firstColumn","secondColumn","_Fragment","mt","Grid","container","spacing","column","colIndex","item","List","disablePadding","amenity","isLastItem","ListItem","py","flexWrap","ListItemIcon","minWidth","FiberManualRecord","ListItemText","margin","primary","primaryTypographyProps","textTransform","ml","ExpandLess","ExpandMore","getRatingText","rating","getRatingColor","hotelData","propertyName","size","price","image","MyHotelDetails","_hotelData1$propertyD","_hotelData1$propertyD2","_hotelData1$propertyD3","_roomData$amenities","selectedRoom","setSelectedRoom","useParams","setBooking","today","Date","next10Days","setDate","getDate","getAllBookingsofMyHotel","filter","page","pageSize","order","filteredBookings","rows","expanded","setExpanded","maxLength","setValue","navigate","useNavigate","hotelData1","setHotelData1","roomData","setRoomData","getMyAllHotelswithBelongsTo","secondTable","_res$data2","_res$data3","_res$data3$data$","_res$data4","_res$data4$data$","rooms","CustomButton","customStyles","startIcon","Edit","state","fontFamily","paperColor","address","pr","mx","Star","maxWidth","propertyDesc","substring","pt","flexDirection","React","AddCircleOutline","Tabs","onChange","event","newValue","forthColor","Tab","TabPanel","Array","isArray","Card","overflow","CheckCircle","CardMedia","roomCategory","pl","pb","Object","keys","slot","StyledToggleButton","lineHeight","BookingTable","ToggleButton","hidden"],"sourceRoot":""}