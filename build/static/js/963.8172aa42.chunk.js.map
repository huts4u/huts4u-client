{"version":3,"file":"static/js/963.8172aa42.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/StarRounded.js","components/data.tsx","components/style.tsx","pages/HotelDetails.tsx","pages/Account/LoginOtpModal.tsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"m12 17.27 4.15 2.51c.76.46 1.69-.22 1.49-1.08l-1.1-4.72 3.67-3.18c.67-.58.31-1.68-.57-1.75l-4.83-.41-1.89-4.46c-.34-.81-1.5-.81-1.84 0L9.19 8.63l-4.83.41c-.88.07-1.24 1.17-.57 1.75l3.67 3.18-1.1 4.72c-.2.86.73 1.54 1.49 1.08z\"\n}), 'StarRounded');","import AcUnitIcon from \"@mui/icons-material/AcUnit\";\r\nimport AirportShuttleIcon from \"@mui/icons-material/AirportShuttle\";\r\nimport BeachAccessIcon from \"@mui/icons-material/BeachAccess\";\r\nimport BusinessCenterIcon from \"@mui/icons-material/BusinessCenter\";\r\nimport CasinoIcon from \"@mui/icons-material/Casino\";\r\nimport ChildCareIcon from \"@mui/icons-material/ChildCare\";\r\nimport DirectionsCarIcon from \"@mui/icons-material/DirectionsCar\";\r\nimport FireExtinguisherIcon from \"@mui/icons-material/FireExtinguisher\";\r\nimport FitnessCenterIcon from \"@mui/icons-material/FitnessCenter\";\r\nimport FreeBreakfastIcon from \"@mui/icons-material/FreeBreakfast\";\r\nimport KingBedIcon from \"@mui/icons-material/KingBed\";\r\nimport LocalBarIcon from \"@mui/icons-material/LocalBar\";\r\nimport LocalDiningIcon from \"@mui/icons-material/LocalDining\";\r\nimport LocalLaundryServiceIcon from \"@mui/icons-material/LocalLaundryService\";\r\nimport LocalParkingIcon from \"@mui/icons-material/LocalParking\";\r\nimport NightlifeIcon from \"@mui/icons-material/Nightlife\";\r\nimport OutdoorGrillIcon from \"@mui/icons-material/OutdoorGrill\";\r\nimport PetsIcon from \"@mui/icons-material/Pets\";\r\nimport PoolIcon from \"@mui/icons-material/Pool\";\r\nimport RoomServiceIcon from \"@mui/icons-material/RoomService\";\r\nimport SpaIcon from \"@mui/icons-material/Spa\";\r\nimport SportsTennisIcon from \"@mui/icons-material/SportsTennis\";\r\nimport TvIcon from \"@mui/icons-material/Tv\";\r\nimport WifiIcon from \"@mui/icons-material/Wifi\";\r\n\r\nexport const amenityIcons: { [key: string]: JSX.Element } = {\r\n  \"Swimming Pool\": <PoolIcon fontSize=\"small\" />,\r\n  Gym: <FitnessCenterIcon fontSize=\"small\" />,\r\n  \"Free WiFi\": <WifiIcon fontSize=\"small\" />,\r\n  \"Private Beach\": <BeachAccessIcon fontSize=\"small\" />,\r\n  Breakfast: <FreeBreakfastIcon fontSize=\"small\" />,\r\n  Parking: <LocalParkingIcon fontSize=\"small\" />,\r\n  Spa: <SpaIcon fontSize=\"small\" />,\r\n  Restaurant: <LocalDiningIcon fontSize=\"small\" />,\r\n  \"Airport Shuttle\": <AirportShuttleIcon fontSize=\"small\" />,\r\n  \"Business Center\": <BusinessCenterIcon fontSize=\"small\" />,\r\n  \"Pet Friendly\": <PetsIcon fontSize=\"small\" />,\r\n  Bar: <LocalBarIcon fontSize=\"small\" />,\r\n  \"Room Service\": <RoomServiceIcon fontSize=\"small\" />,\r\n  TV: <TvIcon fontSize=\"small\" />,\r\n  \"Air Conditioning\": <AcUnitIcon fontSize=\"small\" />,\r\n  \"Laundry Service\": <LocalLaundryServiceIcon fontSize=\"small\" />,\r\n  \"Child Care\": <ChildCareIcon fontSize=\"small\" />,\r\n  \"King Bed\": <KingBedIcon fontSize=\"small\" />,\r\n  Casino: <CasinoIcon fontSize=\"small\" />,\r\n  \"Car Rental\": <DirectionsCarIcon fontSize=\"small\" />,\r\n  \"Night Club\": <NightlifeIcon fontSize=\"small\" />,\r\n  \"Tennis Court\": <SportsTennisIcon fontSize=\"small\" />,\r\n  \"BBQ Facilities\": <OutdoorGrillIcon fontSize=\"small\" />,\r\n  \"Fire Safety\": <FireExtinguisherIcon fontSize=\"small\" />,\r\n};\r\n\r\n\r\nexport const amenitiesOptions = [\r\n  \"Swimming Pool\",\r\n  \"Gym\",\r\n  \"Free WiFi\",\r\n  \"Private Beach\",\r\n  \"Breakfast\",\r\n  \"Parking\",\r\n  \"Spa\",\r\n  \"Restaurant\",\r\n  \"Airport Shuttle\",\r\n  \"Business Center\",\r\n  \"Pet Friendly\",\r\n  \"Bar\",\r\n  \"Room Service\",\r\n  \"TV\",\r\n  \"Air Conditioning\",\r\n  \"Laundry Service\",\r\n  \"Child Care\",\r\n  \"King Bed\",\r\n  \"Casino\",\r\n  \"Car Rental\",\r\n  \"Night Club\",\r\n  \"Tennis Court\",\r\n  \"BBQ Facilities\",\r\n  \"Fire Safety\",\r\n];\r\n\r\n\r\nexport const roomTypes = [\r\n  { value: \"Single Room\", label: \"Single Room\", details: \"A basic room with a single bed, ideal for solo travelers.\" },\r\n  { value: \"Double Room\", label: \"Double Room\", details: \"Comes with a double bed or two single beds, suitable for two people.\" },\r\n  { value: \"Deluxe Room\", label: \"Deluxe Room\", details: \"A more spacious version of a standard room with better furnishings.\" },\r\n  { value: \"Executive Room\", label: \"Executive Room\", details: \"Designed for business travelers with a work desk and extra amenities.\" },\r\n  { value: \"Club Room\", label: \"Club Room\", details: \"Offers premium benefits like lounge access and complimentary breakfast.\" },\r\n  { value: \"Suite Room\", label: \"Suite Room\", details: \"A larger space with a separate living area, ideal for families or business executives.\" },\r\n  { value: \"Presidential Suite\", label: \"Presidential Suite\", details: \"A luxurious option with multiple rooms and high-end services.\" },\r\n  { value: \"Royal Suite\", label: \"Royal Suite\", details: \"Inspired by Indian royalty with grand interiors and luxury amenities.\" },\r\n  { value: \"Heritage Room\", label: \"Heritage Room\", details: \"Traditional decor and antique furnishings, found in heritage hotels.\" },\r\n  { value: \"Cottage/Villa\", label: \"Cottage/Villa\", details: \"Standalone accommodations, often found in resorts with private gardens or pools.\" },\r\n  { value: \"Treehouse Room\", label: \"Treehouse Room\", details: \"Unique elevated rooms, mostly available in nature retreats.\" },\r\n  { value: \"Houseboat Room\", label: \"Houseboat Room\", details: \"Found in Kerala and Kashmir, offering a floating hotel experience.\" },\r\n  { value: \"Studio Apartment\", label: \"Studio Apartment\", details: \"A self-contained unit with a kitchenette, preferred for long stays.\" },\r\n  { value: \"Serviced Apartment\", label: \"Serviced Apartment\", details: \"A fully furnished apartment with hotel-like services.\" },\r\n];","/* eslint-disable jsx-a11y/img-redundant-alt */\r\nimport { ArrowBackIos, ArrowForwardIos, Close, ExpandLess, ExpandMore, FiberManualRecord } from \"@mui/icons-material\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControlLabel,\r\n  Grid,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Modal,\r\n  Radio,\r\n  RadioProps,\r\n  styled,\r\n  TextField,\r\n  Typography,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport color from \"./color\";\r\nimport { useState } from \"react\";\r\n\r\nexport const BoxStyle = {\r\n  p: 2,\r\n  px: 4,\r\n  boxShadow: \"0px 0px 20px rgba(0, 0, 0, 0.18)\",\r\n  borderRadius: \"12px\",\r\n  my: 4,\r\n};\r\n\r\nexport function BpRadio(props: RadioProps) {\r\n  return (\r\n    <Radio\r\n      style={{ padding: \"6px\" }}\r\n      disableRipple\r\n      color=\"default\"\r\n      checkedIcon={<BpCheckedIcon />}\r\n      icon={<BpIcon />}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport const BpIcon = styled(\"span\")(({ theme }) => ({\r\n  borderRadius: \"50%\",\r\n  width: 18,\r\n  height: 18,\r\n  boxShadow:\r\n    \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\r\n  backgroundColor: \"#f5f8fa\",\r\n  backgroundImage:\r\n    \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\r\n  \".Mui-focusVisible &\": {\r\n    outline: \"2px auto rgba(41, 91, 122, 0.6)\",\r\n    outlineOffset: 2,\r\n  },\r\n  \"input:hover ~ &\": {\r\n    backgroundColor: \"#ebf1f5\",\r\n    ...theme.applyStyles(\"dark\", {\r\n      backgroundColor: \"#30404d\",\r\n    }),\r\n  },\r\n  \"input:disabled ~ &\": {\r\n    boxShadow: \"none\",\r\n    background: \"rgba(206,217,224,.5)\",\r\n    ...theme.applyStyles(\"dark\", {\r\n      background: \"rgba(57,75,89,.5)\",\r\n    }),\r\n  },\r\n  ...theme.applyStyles(\"dark\", {\r\n    boxShadow: \"0 0 0 1px rgb(16 22 26 / 40%)\",\r\n    backgroundColor: \"#394b59\",\r\n    backgroundImage:\r\n      \"linear-gradient(180deg,hsla(0,0%,100%,.05),hsla(0,0%,100%,0))\",\r\n  }),\r\n}));\r\n\r\nexport const BpCheckedIcon = styled(BpIcon)({\r\n  backgroundColor: color.secondColor,\r\n  backgroundImage:\r\n    \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\r\n  \"&::before\": {\r\n    display: \"block\",\r\n    width: 18,\r\n    height: 18,\r\n    backgroundImage: \"radial-gradient(#fff,#fff 28%,transparent 32%)\",\r\n    content: '\"\"',\r\n  },\r\n  \"input:hover ~ &\": {\r\n    backgroundColor: color.secondColor,\r\n  },\r\n});\r\n\r\nexport const StyledLabel = styled(FormControlLabel)(\r\n  ({ theme, checked }: { theme?: any; checked?: boolean }) => ({\r\n    color: checked ? color.thirdColor : color.firstColor,\r\n    background: checked\r\n      ? color.firstColor\r\n      : \"transparent\",\r\n    borderRadius: \" 2px 8px 8px 2px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    transition: \"0.3s\",\r\n    paddingLeft: checked ? \"30px\" : \"auto\",\r\n    marginLeft: checked ? \"-40px\" : \"-10px\",\r\n    paddingRight: \"10px\",\r\n    fontSize: checked ? \"1rem\" : \"0.95rem\",\r\n  })\r\n);\r\n\r\nexport const CustomRadio = styled(Radio)({\r\n  color: color.firstColor,\r\n  \"&.Mui-checked\": {\r\n    color: color.thirdColor,\r\n  },\r\n});\r\n\r\nexport const CustomPrevArrow = (props: any) => {\r\n  const { onClick } = props;\r\n  return (\r\n    <IconButton\r\n      onClick={onClick}\r\n      sx={{\r\n        position: \"absolute\",\r\n        left: \"0px\",\r\n        top: \"50%\",\r\n        transform: \"translateY(-50%)\",\r\n        background: color.background,\r\n        color: \"white\",\r\n        zIndex: 2,\r\n        \"&:hover\": { background: color.firstColor },\r\n      }}\r\n    >\r\n      <ArrowBackIos />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport const CustomNextArrow = (props: any) => {\r\n  const { onClick } = props;\r\n  return (\r\n    <IconButton\r\n      onClick={onClick}\r\n      sx={{\r\n        position: \"absolute\",\r\n        right: \"0px\",\r\n        top: \"50%\",\r\n        transform: \"translateY(-50%)\",\r\n        background: color.background,\r\n        color: \"white\",\r\n        zIndex: 2,\r\n        \"&:hover\": { background: color.firstColor },\r\n      }}\r\n    >\r\n      <ArrowForwardIos />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport const CustomTextField = styled(TextField)({\r\n  marginBottom: \"10px\",\r\n  \"& .MuiOutlinedInput-root\": {\r\n    \"& fieldset\": {\r\n      border: \"none\",\r\n      borderRadius: \"52px\",\r\n      boxShadow: \"4px 4px 10px rgba(104, 39, 184, 0.17)\",\r\n      color: color.firstColor,\r\n    },\r\n    \"&:hover fieldset\": {\r\n      border: \"solid 1px\",\r\n    },\r\n    \"&.Mui-focused fieldset\": {\r\n      border: \"solid 1px\",\r\n    },\r\n  },\r\n  \"& .MuiInputBase-input\": {\r\n    color: color.firstColor,\r\n  },\r\n  \"& .MuiInputLabel-root\": {\r\n    color: color.firstColor,\r\n  },\r\n  \"& .MuiInputLabel-root.Mui-focused\": {\r\n    color: color.firstColor,\r\n  },\r\n});\r\n\r\nexport const LoginTextField = styled(TextField)({\r\n  marginBottom: \"20px\",\r\n  \"& .MuiOutlinedInput-root\": {\r\n    \"& fieldset\": {\r\n      border: \"solid 1px white\",\r\n      boxShadow: \"-4px -4px 10px rgba(255, 255, 255, 0.36) inset\",\r\n      color: \"white\",\r\n      borderRadius: \"12px\",\r\n    },\r\n    \"&:hover fieldset\": {\r\n      border: \"solid 1px\",\r\n    },\r\n    \"&.Mui-focused fieldset\": {\r\n      border: \"solid 1px\",\r\n    },\r\n  },\r\n  \"& .MuiInputBase-input\": {\r\n    color: \"white\",\r\n  },\r\n  \"& .MuiInputLabel-root\": {\r\n    color: \"white\",\r\n  },\r\n  \"& .MuiInputLabel-root.Mui-focused\": {\r\n    color: \"white\",\r\n  },\r\n});\r\n\r\nexport const useScreenSize = () => {\r\n  const theme = useTheme();\r\n  const isBelow400px = useMediaQuery(theme.breakpoints.down(400));\r\n  return { isBelow400px };\r\n};\r\n\r\nexport const inputSx = {\r\n  border: \"none\",\r\n  borderRadius: \"52px\",\r\n  boxShadow: \"4px 4px 10px rgba(104, 39, 184, 0.17)\",\r\n  color: color.firstColor,\r\n  padding: \"0px\",\r\n  marginTop: \"0px\",\r\n  width: \"100%\",\r\n  boxSizing: \"border-box\",\r\n  \"& .MuiOutlinedInput-root\": {\r\n    padding: \"0px\",\r\n    borderBottom: \"4px solid\",\r\n    borderColor: color.firstColor,\r\n    \"& fieldset\": {\r\n      border: \"none\",\r\n    },\r\n    \"&:hover fieldset\": {\r\n      border: \"none\",\r\n    },\r\n    \"&.Mui-focused fieldset\": {\r\n      border: \"none\",\r\n    },\r\n    \"& .MuiInputLabel-root\": {\r\n      color: color.firstColor,\r\n    },\r\n  },\r\n};\r\n\r\n\r\ninterface ImageGridProps {\r\n  propertyImages: string[];\r\n}\r\n\r\nexport const ImageGrid: React.FC<ImageGridProps> = ({ propertyImages }) => {\r\n  const maxImages = Math.min(propertyImages.length, 7);\r\n  const displayImages = propertyImages.slice(0, maxImages);\r\n  const hasMore = propertyImages.length > 7;\r\n  const [open, setOpen] = useState(false);\r\n  const isMobile = useMediaQuery(\"(max-width: 900px)\");\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: { xs: \"block\", md: \"grid\" },\r\n        gap: { xs: 0, md: 1 },\r\n        width: \"100%\",\r\n        height: \"300px\",\r\n        gridTemplateColumns:\r\n          displayImages.length > 5 ? \"40% 20% 20% 20%\" : \"60% 20% 20%\",\r\n        gridTemplateRows: \"auto\",\r\n        \"& img\": {\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          objectFit: \"cover\",\r\n          borderRadius: \"8px\",\r\n        },\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <Box\r\n        onClick={() => setOpen(true)}\r\n        sx={{\r\n          gridColumn: { xs: \"auto\", md: \"span 1\" },\r\n          gridRow: { xs: \"auto\", md: \"span 2\" },\r\n          height: \"300px\",\r\n          width: { xs: \"100%\", md: \"auto\" },\r\n          display: { xs: \"block\", md: \"grid\" },\r\n        }}\r\n      >\r\n        <img style={{height:'300px'}} src={displayImages[0]} alt=\"Main\" />\r\n      </Box>\r\n\r\n      {!isMobile &&\r\n        displayImages.slice(1).map((src, index) => {\r\n          if (index % 2 === 0) {\r\n            return (\r\n              <Box\r\n                onClick={() => setOpen(true)}\r\n                key={index}\r\n                display=\"grid\"\r\n                sx={{\r\n                  gridTemplateRows: \"146px 146px\",\r\n                  height: \"300px\",\r\n                  gap: \"8px\",\r\n                }}\r\n              >\r\n                <img\r\n                  src={src}\r\n                  alt={`Image ${index + 2}`}\r\n                  style={{ height: \"100%\", width: \"100%\", objectFit: \"cover\" }}\r\n                />\r\n\r\n                {displayImages[index + 2] && (\r\n                  <img\r\n                    src={displayImages[index + 2]}\r\n                    alt={`Image ${index + 3}`}\r\n                    style={{\r\n                      height: \"100%\",\r\n                      width: \"100%\",\r\n                      objectFit: \"cover\",\r\n                    }}\r\n                  />\r\n                )}\r\n              </Box>\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n\r\n      {hasMore && (\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            bottom: 10,\r\n            right: 10,\r\n            background: color.background,\r\n            color: \"white\",\r\n            borderRadius: \"8px\",\r\n            p: 1,\r\n            textAlign: \"center\",\r\n            cursor: \"pointer\",\r\n            boxShadow:\r\n              \"-4px -4px 10px rgba(32, 32, 32, 0.28) inset, 0px 0px 10px rgba(32, 32, 32, 0.28)\",\r\n          }}\r\n        >\r\n          <Typography variant=\"body2\">\r\n            + {isMobile ? propertyImages.length - 1 : propertyImages.length - 7} More\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: \"80%\",\r\n            height: \"80%\",\r\n            bgcolor: \"white\",\r\n            boxShadow: 24,\r\n            p: 2,\r\n            overflowY: \"auto\",\r\n            borderRadius: \"8px\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" textAlign=\"center\" mb={2}>\r\n            All Images\r\n          </Typography>\r\n\r\n          <Close\r\n            onClick={() => setOpen(false)}\r\n            sx={{\r\n              position: \"absolute\",\r\n              top: 10,\r\n              right: 10,\r\n            }}\r\n          ></Close>\r\n          <Box\r\n            display=\"grid\"\r\n            gap={2}\r\n            sx={{\r\n              gridTemplateColumns: \"repeat(auto-fill, minmax(150px, 1fr))\",\r\n            }}\r\n          >\r\n            {propertyImages.map((img, index) => (\r\n              <img\r\n                key={index}\r\n                src={img}\r\n                alt={`Image ${index + 1}`}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"150px\",\r\n                  objectFit: \"cover\",\r\n                  borderRadius: \"8px\",\r\n                }}\r\n              />\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </Box>\r\n  );\r\n};\r\n\r\n\r\n\r\n  \r\nexport const RoomAmenities = ({\r\n  room,\r\n}: {\r\n  room: { propertyName: string; amenities: string[] };\r\n}) => {\r\n  const [showAll, setShowAll] = useState(false);\r\n  const displayedAmenities = showAll\r\n    ? room.amenities\r\n    : room.amenities.slice(0, 6);\r\n  const halfIndex = Math.ceil(displayedAmenities.length / 2);\r\n  const firstColumn = displayedAmenities.slice(0, halfIndex);\r\n  const secondColumn = displayedAmenities.slice(halfIndex);\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ mt: { xs: 1, md: 0 } }}>\r\n        <Grid container spacing={{ xs: 1, md: 0 }}>\r\n          {[firstColumn, secondColumn].map((column, colIndex) => (\r\n            <Grid item xs={6} md={12} key={colIndex}>\r\n              <List disablePadding>\r\n                {column.map((amenity, index) => {\r\n                  const isLastItem =\r\n                    colIndex === 1 &&\r\n                    index === column.length - 1 &&\r\n                    room.amenities.length > 6;\r\n\r\n                  return (\r\n                    <ListItem\r\n                      key={index}\r\n                      sx={{\r\n                        py: 0.2,\r\n                        px: { xs: 0, md: 2 },\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        flexWrap: \"wrap\",\r\n                      }}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"flex-start\",\r\n                        }}\r\n                      >\r\n                        <ListItemIcon sx={{ minWidth: \"20px\", mt: 0.5 }}>\r\n                          <FiberManualRecord sx={{ fontSize: \"8px\" }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                          style={{ margin: 0 }}\r\n                          primary={amenity}\r\n                          primaryTypographyProps={{\r\n                            style: { fontSize: \"12px\" },\r\n                          }}\r\n                        />\r\n                      </div>\r\n\r\n                      {isLastItem && (\r\n                        <>\r\n                          <Button\r\n                            onClick={() => setShowAll(!showAll)}\r\n                            sx={{\r\n                              textTransform: \"none\",\r\n                              fontSize: \"14px\",\r\n                              ml: \"auto\",\r\n                              p: 0,\r\n                              color: color.firstColor,\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {showAll ? \"Show Less\" : \"... Show All\"}\r\n                          </Button>\r\n                          {showAll ? <ExpandLess /> : <ExpandMore />}\r\n                        </>\r\n                      )}\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getRatingText = (rating: number) => {\r\n  if (rating >= 4.5) return \"Excellent\";\r\n  if (rating >= 3.5) return \"Good\";\r\n  if (rating >= 2.5) return \"Average\";\r\n  if (rating >= 1.5) return \"Poor\";\r\n  return \"Very Poor\";\r\n};\r\n\r\nexport const getRatingColor = (rating: number) => {\r\n  if (rating >= 4.5) return \"#46b648\";\r\n  if (rating >= 3.5) return \"#b4d137\"; \r\n  if (rating >= 2.5) return \"#fed018\"; \r\n  if (rating >= 1.5) return \"#f7921e\"; \r\n  return \"#e91d26\"; \r\n};","/* eslint-disable jsx-a11y/img-redundant-alt */\r\nimport {\r\n  AddCircleOutline,\r\n  CheckCircle,\r\n  ExpandLess,\r\n  ExpandMore,\r\n  Star,\r\n  StarRounded,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardMedia,\r\n  Chip,\r\n  Divider,\r\n  FormControl,\r\n  Grid,\r\n  List,\r\n  RadioGroup,\r\n  styled,\r\n  Tab,\r\n  Tabs,\r\n  ToggleButton,\r\n  Typography,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\nimport dayjs from \"dayjs\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport color from \"../components/color\";\r\nimport CustomButton from \"../components/CustomButton\";\r\nimport { amenityIcons } from \"../components/data\";\r\nimport {\r\n  BoxStyle,\r\n  CustomRadio,\r\n  getRatingColor,\r\n  getRatingText,\r\n  ImageGrid,\r\n  RoomAmenities,\r\n  StyledLabel,\r\n} from \"../components/style\";\r\nimport LoginOtpModal from \"./Account/LoginOtpModal\";\r\n\r\nconst hotelData = {\r\n  propertyName: \"Hotel Metropol by Maier Private hotels\",\r\n  address: \"Plot no 10, 11, Mancheswar, Bhubaneswar, Odisha 751001, India\",\r\n  description:\r\n    \"A good description should be a narrative. It should tell the story of your property. It should focus on the emotions that the property and its amenities evoke. This is where you can describe the style of the property, the history of those who have operated there, and the importance of its place in the neighborhood.\",\r\n  rating: 4.7,\r\n  reviews: 134,\r\n  amenities: [\r\n    \"Gym\",\r\n    \"Swimming Pool\",\r\n    \"Free WiFi\",\r\n    \"Private Beach\",\r\n    \"Breakfast\",\r\n  ],\r\n  propertyImages: [\r\n    \"/assets/hotel 1.jpg\",\r\n    \"/assets/hotel 2.jpg\",\r\n    \"/assets/room-image 1.jpg\",\r\n    \"/assets/room-image 2.jpg\",\r\n    \"/assets/room-image 3.jpg\",\r\n    \"/assets/room-image 3.jpg\",\r\n    \"/assets/room-image 3.jpg\",\r\n    \"/assets/room-image 3.jpg\",\r\n  ],\r\n  rooms: [\r\n    {\r\n      id: 1,\r\n      propertyName: \"Deluxe Double Room\",\r\n      size: \"225 sqft (21 sq.m) | Double Bed\",\r\n      price: {\r\n        \"3 hrs\": 1543,\r\n        \"6 hrs\": 1943,\r\n        \"12 hrs\": 2743,\r\n      },\r\n      amenities: [\r\n        \"Iron/Ironing Board\",\r\n        \"Bathroom \",\r\n        \"24-hour Housekeeping\",\r\n        \"24-hour In-room Dining\",\r\n        \"Laundry Service\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n      ],\r\n      image: \"/assets/room-image 1.jpg\",\r\n    },\r\n    {\r\n      id: 2,\r\n      propertyName: \"Superior Double Room\",\r\n      size: \"250 sqft (23 sq.m) | Queen Bed\",\r\n      price: {\r\n        \"3 hrs\": 1743,\r\n        \"6 hrs\": 2143,\r\n        \"12 hrs\": 2943,\r\n      },\r\n      amenities: [\r\n        \"Iron/Ironing Board\",\r\n        \"Bathroom\",\r\n        \"24-hour Housekeeping\",\r\n        \"Laundry Service\",\r\n        \"Air Conditioning\",\r\n      ],\r\n      image: \"/assets/room-image 1.jpg\",\r\n    },\r\n    {\r\n      id: 3,\r\n      propertyName: \"Superior Double Room\",\r\n      size: \"250 sqft (23 sq.m) | Queen Bed\",\r\n      price: {\r\n        \"3 hrs\": 1743,\r\n        \"6 hrs\": 2143,\r\n        \"12 hrs\": 2943,\r\n      },\r\n      amenities: [\r\n        \"Iron/Ironing Board\",\r\n        \"Bathroom\",\r\n        \"24-hour Housekeeping\",\r\n        \"Laundry Service\",\r\n        \"Air Conditioning\",\r\n      ],\r\n      image: \"/assets/room-image 1.jpg\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst HotelDetails = () => {\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n\r\n  const bookingType = queryParams.get(\"bookingType\");\r\n  // const bookingHours = queryParams.get(\"bookingHours\");\r\n  const checkinTime = queryParams.get(\"time\");\r\n  const checkinDate = queryParams.get(\"checkinDate\");\r\n  const checkOutDate = queryParams.get(\"checkOutDate\");\r\n  const rooms = queryParams.get(\"rooms\");\r\n  const adults = queryParams.get(\"adults\");\r\n  const children = queryParams.get(\"children\");\r\n\r\n  const hotel = location.state?.hotelData;\r\n  console.log(hotel);\r\n  const [selectedRoom, setSelectedRoom] = useState(hotel?.rooms[0]);\r\n  const [selectedSlot, setSelectedSlot] = useState<{\r\n    roomId: number | null;\r\n    slot: string | null;\r\n  }>({\r\n    roomId: hotel?.rooms[0].id,\r\n    slot: bookingType === \"hourly\" ? \"rateFor3Hour\" : \"rateFor1Night\",\r\n  });\r\n  const handleSlotSelection = (roomId: number, slot: string) => {\r\n    setSelectedSlot({ roomId, slot });\r\n  };\r\n\r\n  const [showRoomDetails, setShowRoomDetails] = useState(false);\r\n  const [expanded, setExpanded] = useState(false);\r\n  const maxLength = 150;\r\n\r\n  const [isSticky, setIsSticky] = useState(false);\r\n  const [stopPosition, setStopPosition] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const boxA = document.getElementById(\"boxA\");\r\n      const boxB = document.getElementById(\"boxB\");\r\n      const boxC = document.getElementById(\"boxC\");\r\n\r\n      if (!boxA || !boxB || !boxC) return;\r\n\r\n      const boxBRect = boxB.getBoundingClientRect();\r\n      const boxARect = boxA.getBoundingClientRect();\r\n\r\n      if (boxBRect.bottom <= window.innerHeight - 400) {\r\n        setIsSticky(true);\r\n      } else {\r\n        setIsSticky(false);\r\n      }\r\n\r\n      setStopPosition(boxARect.bottom + window.innerHeight);\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    handleScroll(); // Initial call\r\n\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  const [position, setPosition] = useState<\"relative\" | \"unset\">(\"relative\");\r\n  const boxRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        setPosition(entry.isIntersecting ? \"relative\" : \"unset\");\r\n      },\r\n      { threshold: 0.1 }\r\n    );\r\n\r\n    if (boxRef.current) {\r\n      observer.observe(boxRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (boxRef.current) {\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        observer.unobserve(boxRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const [value, setValue] = useState(0);\r\n\r\n  const [showDetails, setShowDetails] = useState(false);\r\n  const isMobile = useMediaQuery(\"(max-width: 900px)\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Box\r\n      id=\"boxA\"\r\n      sx={{\r\n        background: color.thirdColor,\r\n        px: { xs: 2, md: 4 },\r\n        py: 1,\r\n        position: \"relative\",\r\n        // minHeight: \"2000px\",\r\n      }}\r\n    >\r\n      {/* <SearchSection></SearchSection> */}\r\n      <Box\r\n        sx={{\r\n          px: { xs: 0, md: 2 },\r\n        }}\r\n      >\r\n        <Box\r\n          ref={boxRef}\r\n          id=\"boxB\"\r\n          sx={{\r\n            ...BoxStyle,\r\n            px: { xs: 2, md: 3 },\r\n            py: 3,\r\n            position,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              position: \"absolute\",\r\n              top: 24,\r\n              right: 24,\r\n              display: { xs: \"none\", md: \"flex\" },\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              gap: \"6px\",\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"body2\"\r\n              fontWeight={600}\r\n              color={color.firstColor}\r\n              lineHeight={1}\r\n              sx={{\r\n                fontSize: { xs: \"12px\", md: \"14px\" },\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              {getRatingText(hotel?.ratings?.rating)}\r\n              <br />{\" \"}\r\n              <span style={{ fontSize: \"10px\" }}>\r\n                ({hotel?.reviews} 0 reviews)\r\n              </span>\r\n            </Typography>\r\n\r\n            <Typography\r\n              variant=\"body2\"\r\n              fontWeight={600}\r\n              color=\"#fff\"\r\n              sx={{\r\n                background: getRatingColor(hotel?.ratings?.rating),\r\n                px: 1,\r\n                borderRadius: \"4px\",\r\n                fontSize: { xs: \"14px\", md: \"16px\" },\r\n                boxShadow: \"0px -10px 10px rgba(0, 0, 0, 0.12) inset\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                gap: \"4px\",\r\n              }}\r\n            >\r\n              {hotel?.ratings?.rating} <StarRounded></StarRounded>\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Typography\r\n            variant=\"h5\"\r\n            sx={{\r\n              fontSize: { xs: \"18px\", md: \"24px\" },\r\n              fontWeight: 600,\r\n              color: color.firstColor,\r\n            }}\r\n          >\r\n            {hotel.propertyName}\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            sx={{\r\n              fontFamily: \"CustomFontSB\",\r\n              fontSize: { xs: \"10px\", md: \"14px\" },\r\n              color: color.paperColor,\r\n              mt: { xs: 1, md: 0 },\r\n            }}\r\n          >\r\n            {hotel.address}\r\n          </Typography>\r\n\r\n          <Box py={2} sx={{ pr: { xs: 0, md: 2 }, mx: -1 }}>\r\n            <ImageGrid propertyImages={hotel.propertyImages}></ImageGrid>\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              display: { xs: \"flex\", md: \"none\" },\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"body2\"\r\n              fontWeight={600}\r\n              color={color.thirdColor}\r\n              sx={{\r\n                background: color.background,\r\n                px: 1,\r\n                borderRadius: \"4px\",\r\n                fontSize: \"14px\",\r\n                mb: 2,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                gap: \"6px\",\r\n              }}\r\n            >\r\n              <Star></Star> {hotelData.rating} ({hotelData.reviews} reviews)\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Box sx={{ maxWidth: { xs: \"100%\", md: \"calc(100% - 450px)\" } }}>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              sx={{\r\n                fontFamily: \"CustomFontB\",\r\n                fontSize: \"16px\",\r\n                color: color.paperColor,\r\n              }}\r\n            >\r\n              Property Description\r\n            </Typography>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              sx={{\r\n                fontSize: \"14px\",\r\n                mt: 1,\r\n                // textAlign:'justify'\r\n              }}\r\n            >\r\n              {expanded || hotel.propertyDesc.length <= maxLength\r\n                ? hotel.propertyDesc\r\n                : `${hotel.propertyDesc.substring(0, maxLength)}...`}\r\n              {hotel.propertyDesc.length > maxLength && (\r\n                <Button\r\n                  sx={{\r\n                    textTransform: \"none\",\r\n                    fontSize: \"14px\",\r\n                    p: 0,\r\n                    ml: 1,\r\n                    minWidth: 0,\r\n                  }}\r\n                  onClick={() => setExpanded(!expanded)}\r\n                >\r\n                  {expanded ? \"Show less\" : \"More\"}\r\n                </Button>\r\n              )}\r\n            </Typography>\r\n\r\n            <Typography\r\n              sx={{\r\n                fontFamily: \"CustomFontB\",\r\n                fontSize: \"16px\",\r\n                color: color.paperColor,\r\n                mt: 2,\r\n              }}\r\n            >\r\n              Highlights\r\n            </Typography>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                gap: { xs: 2, md: 6 },\r\n                flexWrap: \"wrap\",\r\n                mt: 3,\r\n                p: 2,\r\n                px: 4,\r\n                pt: 3,\r\n                backgroundColor: \"rgba(93, 93, 93, 0.14)\",\r\n                justifyContent: \"space-around\",\r\n                borderRadius: \"12px\",\r\n                width: \"fit-content\",\r\n              }}\r\n            >\r\n              {hotel?.rooms[0]?.amenities\r\n                .slice(0, 5)\r\n                .map((amenity: any, index: any) => (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <Chip\r\n                      key={index}\r\n                      icon={\r\n                        <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                          {React.cloneElement(\r\n                            amenityIcons[amenity] || <AddCircleOutline />,\r\n                            {\r\n                              sx: {\r\n                                fontSize: { xs: 26, md: 34 },\r\n                                color: color.paperColor,\r\n                              },\r\n                            }\r\n                          )}\r\n                        </Box>\r\n                      }\r\n                      size=\"small\"\r\n                      sx={{ bgcolor: \"transparent\" }}\r\n                    />\r\n\r\n                    <Typography\r\n                      sx={{ fontSize: { xs: \"10px\", md: \"14px\" } }}\r\n                      mt={1.5}\r\n                    >\r\n                      {amenity}\r\n                    </Typography>\r\n                  </div>\r\n                ))}\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box\r\n            id=\"boxC\"\r\n            sx={{\r\n              ...BoxStyle,\r\n              minWidth: \"350px\",\r\n              maxWidth: \"350px\",\r\n              maxHeight: \"600px\",\r\n              pb: 3,\r\n              position: isSticky ? \"fixed\" : \"absolute\",\r\n              bottom: isSticky ? \"10px\" : \"-380px\",\r\n              right: isSticky ? \"72px\" : \"24px\",\r\n              zIndex: 100,\r\n              m: 0,\r\n              background: color.thirdColor,\r\n              transition: \"bottom 0.3s ease\",\r\n              overflow: \"hidden\",\r\n              overflowY: \"auto\",\r\n\r\n              ...(isSticky &&\r\n                window.scrollY >= stopPosition && {\r\n                position: \"absolute\",\r\n                bottom: \"85px\",\r\n              }),\r\n\r\n              // Stick to the bottom for screen sizes below 900px\r\n              \"@media (max-width: 900px)\": {\r\n                position: \"fixed\",\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                minWidth: \"unset\",\r\n                maxWidth: \"100%\",\r\n                borderRadius: \"10px 10px 0 0\",\r\n                p: 2,\r\n              },\r\n            }}\r\n          >\r\n            {isMobile && (\r\n              <Box\r\n                onClick={() => setShowDetails(!showDetails)}\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  // width: \"100vw\",\r\n                  p: 1,\r\n                  // mt: -2,\r\n                  m: -2,\r\n                  mb: showDetails ? -4 : 0,\r\n                  background: color.background,\r\n                  color: color.thirdColor,\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    fontWeight: 600,\r\n                    fontSize: \"18px\",\r\n                  }}\r\n                >\r\n                  {showDetails ? \"Hide Details\" : \"Show Details\"}\r\n                </Typography>\r\n                {!showDetails ? <ExpandLess /> : <ExpandMore />}\r\n              </Box>\r\n            )}\r\n\r\n            {(showDetails || !isMobile) && (\r\n              <>\r\n                {!isMobile && (\r\n                  <Box\r\n                    sx={{\r\n                      position: \"absolute\",\r\n                      top: 0,\r\n                      left: 0,\r\n                      width: \"100%\",\r\n                      height: \"50px\",\r\n                      background: color.background,\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      gap: 4,\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      fontWeight={600}\r\n                      color={color.thirdColor}\r\n                      fontSize={\"20px\"}\r\n                    >\r\n                      Get Up to 20% Off{\" \"}\r\n                    </Typography>\r\n\r\n                    <Button\r\n                      sx={{\r\n                        textTransform: \"none\",\r\n                        background: color.background,\r\n                        color: color.thirdColor,\r\n                        border: \"solid 1px\",\r\n                        p: 0,\r\n                        px: 1,\r\n                      }}\r\n                    >\r\n                      Apply Coupon\r\n                    </Button>\r\n                  </Box>\r\n                )}\r\n\r\n                <Typography\r\n                  sx={{\r\n                    fontFamily: \"CustomFontB\",\r\n                    fontSize: \"16px\",\r\n                    color: color.paperColor,\r\n                    mt: \"50px\",\r\n                  }}\r\n                >\r\n                  Your Booking Summary\r\n                </Typography>\r\n\r\n                <Box\r\n                  sx={{\r\n                    mt: 2,\r\n                    border: \"solid 1px\",\r\n                    borderColor: color.forthColor,\r\n                    borderRadius: \"12px\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    textAlign: \"center\",\r\n                    boxShadow: \"0px -10px 20px rgba(0, 0, 0, 0.12) inset\",\r\n                  }}\r\n                >\r\n                  <Box\r\n                    p={2}\r\n                    sx={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <Typography fontSize={\"14px\"} color={color.forthColor}>\r\n                      Check In Date\r\n                    </Typography>\r\n\r\n                    <Typography fontWeight={600}>\r\n                      {checkinDate\r\n                        ? dayjs(checkinDate).format(\"DD MMM YYYY\")\r\n                        : \"\"}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Divider\r\n                    sx={{\r\n                      opacity: 1,\r\n                      borderWidth: \"1.5px\",\r\n                      borderColor: color.forthColor,\r\n                    }}\r\n                    orientation=\"vertical\"\r\n                    flexItem\r\n                  />\r\n                  <Box\r\n                    p={2}\r\n                    sx={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    {bookingType === \"hourly\" ? (\r\n                      <>\r\n                        <Typography fontSize={\"14px\"} color={color.forthColor}>\r\n                          Check In Time\r\n                        </Typography>\r\n\r\n                        <Typography fontWeight={600}>\r\n                          {checkinTime\r\n                            ? dayjs(checkinTime, \"HH:mm\").format(\"hh:mm A\")\r\n                            : \"\"}\r\n                        </Typography>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Typography fontSize={\"14px\"} color={color.forthColor}>\r\n                          Check Out Date\r\n                        </Typography>\r\n\r\n                        <Typography fontWeight={600}>\r\n                          {checkOutDate\r\n                            ? dayjs(checkOutDate).format(\"DD MMM YYYY\")\r\n                            : \"\"}\r\n                        </Typography>\r\n                      </>\r\n                    )}\r\n                  </Box>\r\n                </Box>\r\n\r\n                <Box\r\n                  mt={2}\r\n                  p={2}\r\n                  sx={{\r\n                    border: \"solid 1px\",\r\n                    borderColor: color.forthColor,\r\n                    borderRadius: \"12px\",\r\n                    px: 4,\r\n                    textAlign: \"left\",\r\n                    boxShadow: \"0px -10px 20px rgba(0, 0, 0, 0.12) inset\",\r\n                  }}\r\n                >\r\n                  <Typography fontSize={\"14px\"} color={color.forthColor}>\r\n                    Rooms & Guest Details\r\n                  </Typography>\r\n\r\n                  <Typography fontWeight={600}>\r\n                    {rooms} Room, {adults} Adults, {children} Children\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <Box\r\n                  mt={2}\r\n                  p={2}\r\n                  sx={{\r\n                    border: \"solid 1px\",\r\n                    borderColor: color.forthColor,\r\n                    borderRadius: \"12px\",\r\n                    px: 4,\r\n                    textAlign: \"left\",\r\n                    boxShadow: \"0px -10px 20px rgba(0, 0, 0, 0.12) inset\",\r\n                    pb: 3,\r\n                    fontFamily: \"CustomFontB\",\r\n                  }}\r\n                >\r\n                  <Typography fontSize={\"14px\"} color={color.forthColor} mb={1}>\r\n                    Selected Room Type\r\n                  </Typography>\r\n                  <FormControl component=\"fieldset\">\r\n                    <RadioGroup\r\n                      value={selectedRoom.id}\r\n                      onChange={(e) => {\r\n                        const room = hotel.rooms.find(\r\n                          (r: { id: number }) => r.id === Number(e.target.value)\r\n                        );\r\n                        if (room) setSelectedRoom(room);\r\n                      }}\r\n                    >\r\n                      {selectedRoom && (\r\n                        <StyledLabel\r\n                          key={selectedRoom.id}\r\n                          value={selectedRoom.id}\r\n                          checked\r\n                          control={<CustomRadio />}\r\n                          label={\r\n                            <Typography sx={{ fontWeight: \"bold\" }}>\r\n                              {selectedRoom?.roomCategory}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                      )}\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </Box>\r\n\r\n                {bookingType === \"hourly\" && (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexWrap: \"wrap\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"space-around\",\r\n                      gap: \"6px\",\r\n                      marginTop: \"20px\",\r\n                    }}\r\n                  >\r\n                    {[\"rateFor3Hour\", \"rateFor6Hour\", \"rateFor12Hour\"].map(\r\n                      (slotKey) => {\r\n                        const slotLabel =\r\n                          slotKey.replace(\"rateFor\", \"\").replace(\"Hour\", \"\") +\r\n                          \"hrs\";\r\n                        const price =\r\n                          selectedRoom[slotKey as keyof typeof selectedRoom];\r\n\r\n                        return (\r\n                          <StyledToggleButton\r\n                            key={slotKey}\r\n                            value={slotLabel}\r\n                            selected={\r\n                              selectedSlot.roomId === selectedRoom.id &&\r\n                              selectedSlot.slot === slotKey\r\n                            }\r\n                            onClick={() =>\r\n                              handleSlotSelection(selectedRoom.id, slotKey)\r\n                            }\r\n                            style={{ borderColor: color.forthColor }}\r\n                          >\r\n                            <Typography\r\n                              px={1}\r\n                              py={0.5}\r\n                              style={{\r\n                                fontSize: \"14px\",\r\n                                fontWeight: 600,\r\n                                lineHeight: 1,\r\n                              }}\r\n                            >\r\n                              ₹ {price}\r\n                              <br />\r\n                              <span style={{ fontSize: \"10px\" }}>\r\n                                {slotLabel}\r\n                              </span>\r\n                            </Typography>\r\n                          </StyledToggleButton>\r\n                        );\r\n                      }\r\n                    )}\r\n                  </div>\r\n                )}\r\n\r\n                <Divider\r\n                  sx={{ mt: 3, mb: 1, borderColor: color.forthColor }}\r\n                ></Divider>\r\n              </>\r\n            )}\r\n\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                gap: \"6px\",\r\n                mt: 0,\r\n                px: { xs: 1, md: 3 },\r\n              }}\r\n            >\r\n              <div>\r\n                <Typography fontSize={\"14px\"} color={color.forthColor} mt={1}>\r\n                  Total Price:\r\n                </Typography>\r\n                <Typography\r\n                  fontSize={\"24px\"}\r\n                  color={color.firstColor}\r\n                  fontWeight={\"bold\"}\r\n                >\r\n                  ₹\r\n                  {selectedSlot.roomId && selectedSlot.slot\r\n                    ? selectedRoom?.[selectedSlot.slot] ?? 0\r\n                    : 0}\r\n                </Typography>\r\n                <Typography fontSize={\"14px\"} color={color.forthColor}>\r\n                  + ₹ {Number(selectedRoom?.taxRate) + Number(selectedRoom?.extrafees)} taxes & fees\r\n                </Typography>\r\n              </div>\r\n\r\n              <CustomButton\r\n                customStyles={{\r\n                  height: \"fit-content\",\r\n                  fontSize: \"14px\",\r\n                  marginTop: \"4px\",\r\n                }}\r\n                // onClick={() => navigate(\"/booking-summary\")}\r\n                onClick={() => {\r\n                  const basePrice = selectedSlot.roomId && selectedSlot.slot\r\n                    ? selectedRoom?.[selectedSlot.slot] ?? 0\r\n                    : 0;\r\n                  const taxesAndFees = Number(selectedRoom?.taxRate) + Number(selectedRoom?.extrafees);\r\n                  const totalPrice = Number(basePrice) + taxesAndFees;\r\n                  const queryString = new URLSearchParams(\r\n                    queryParams\r\n                  ).toString();\r\n                  navigate(\r\n                    `/booking-summary/${hotel.id}${queryString ? `?${queryString}` : \"\"\r\n                    }`,\r\n                    {\r\n                      state: {\r\n                        hotelData: hotel, selectedRoom: selectedRoom, selectedSlot: selectedSlot, pricingDetails: {\r\n                          basePrice: basePrice,\r\n                          tax: selectedRoom?.taxRate,\r\n                          extraFees: selectedRoom?.extrafees,\r\n                          totalPrice: totalPrice\r\n                        }\r\n                      },\r\n                    }\r\n                  );\r\n                }}\r\n                variant=\"contained\"\r\n              >\r\n                Book Now\r\n              </CustomButton>\r\n\r\n              <LoginOtpModal />\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            ...BoxStyle,\r\n            px: { xs: 1, md: 4 },\r\n            pb: 3,\r\n\r\n            //  minHeight:'1000px'\r\n          }}\r\n        >\r\n          <Tabs\r\n            variant=\"scrollable\"\r\n            value={value}\r\n            onChange={(event, newValue) => setValue(newValue)}\r\n            sx={{\r\n              \"& .MuiTab-root\": {\r\n                textTransform: \"none\",\r\n                fontWeight: 600,\r\n                color: color.forthColor,\r\n                fontSize: \"1rem\",\r\n                p: 0,\r\n                minWidth: \"10px\",\r\n                mx: 1,\r\n                px: 0.5,\r\n              },\r\n              \"& .Mui-selected\": {\r\n                color: \"#000 !important\",\r\n                fontWeight: \"bold\",\r\n              },\r\n              \"& .MuiTabs-indicator\": {\r\n                backgroundColor: \"#000\",\r\n                height: 3,\r\n                borderRadius: \"4px\",\r\n              },\r\n            }}\r\n          >\r\n            <Tab label=\"Rooms\" />\r\n            <Tab label=\"Service & Amenities\" />\r\n            {/* <Tab label=\"Reviews\" /> */}\r\n            <Tab label=\"Policies\" />\r\n          </Tabs>\r\n\r\n          <TabPanel value={value} index={0}>\r\n            <Grid container spacing={2}>\r\n              {hotel.rooms.map((room: any) => (\r\n                <Grid item xs={12} md={7} key={room.id}>\r\n                  <Card\r\n                    onClick={() => setSelectedRoom(room)}\r\n                    sx={{\r\n                      p: 2,\r\n                      display: \"flex\",\r\n                      flexDirection: { xs: \"column\", md: \"row\" },\r\n                      alignItems: \"flex-start\",\r\n                      background: color.thirdColor,\r\n                      borderRadius: \"12px\",\r\n                      boxShadow: \"0px 0px 20px rgba(0, 0, 0, 0.18)\",\r\n                      border: \"solid 2px\",\r\n                      borderColor:\r\n                        selectedRoom.id === room.id\r\n                          ? color.firstColor\r\n                          : \"transparent\",\r\n                      position: \"relative\",\r\n                      overflow: \"visible\",\r\n                    }}\r\n                  >\r\n                    {selectedRoom.id === room.id && (\r\n                      <CheckCircle\r\n                        sx={{\r\n                          position: \"absolute\",\r\n                          top: -10,\r\n                          right: -10,\r\n                          color: color.firstColor,\r\n                          background: color.thirdColor,\r\n                          borderRadius: \"50%\",\r\n                        }}\r\n                      ></CheckCircle>\r\n                    )}\r\n\r\n                    <Box sx={{ width: { xs: \"100%\", md: \"fit-content\" } }}>\r\n                      <CardMedia\r\n                        component=\"img\"\r\n                        height=\"160\"\r\n                        sx={{\r\n                          borderRadius: \"12px\",\r\n                          width: { xs: \"100%\", md: \"250px\" },\r\n                        }}\r\n                        image={room.roomImages}\r\n                        alt={room.roomCategory}\r\n                      />\r\n\r\n                      <Typography\r\n                        variant=\"h6\"\r\n                        mt={1.5}\r\n                        fontWeight={\"bold\"}\r\n                        sx={{\r\n                          background:\r\n                            selectedRoom.id === room.id\r\n                              ? color.firstColor\r\n                              : \"transparent\",\r\n                          ml: -2,\r\n                          pl: 2,\r\n                          borderRadius: \"0px 4px 4px 0px\",\r\n                          color:\r\n                            selectedRoom.id === room.id\r\n                              ? color.thirdColor\r\n                              : color.firstColor,\r\n                          mb: selectedRoom.id === room.id ? 1 : 0,\r\n                          width: { xs: \"fit-content\", md: \"100%\" },\r\n                          pr: { xs: 2, md: 0 },\r\n                          mt: { xs: 2, md: 1 },\r\n                          transition: \"all 0.3s\",\r\n                        }}\r\n                      >\r\n                        {room.roomCategory}\r\n                      </Typography>\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"flex-start\",\r\n                          // flexDirection: showRoomDetails ? \"column\" : \"row\",\r\n                          flexWrap: \"wrap\",\r\n                          justifyContent: \"flex-start\",\r\n                          gap: \"4px\",\r\n                        }}\r\n                      >\r\n                        <Typography variant=\"body2\">\r\n                          Room Size : {room.roomSize} sqft\r\n                        </Typography>\r\n\r\n                        {showRoomDetails && (\r\n                          <>\r\n                            <Typography variant=\"body2\">\r\n                              Standard Room Occupancy :{\" \"}\r\n                              {room.standardRoomOccupancy} head(s)\r\n                            </Typography>\r\n                            <Typography variant=\"body2\">\r\n                              No. Of Free Children Allowed :{\" \"}\r\n                              {room.numberOfFreeChildren}\r\n                            </Typography>\r\n\r\n                            <Typography variant=\"body2\">\r\n                              Max Room Occupancy : {room.maxRoomOccupancy}{\" \"}\r\n                              head(s)\r\n                            </Typography>\r\n\r\n                            <Typography variant=\"body2\">\r\n                              Price per Additional Adult : ₹\r\n                              {room.additionalGuestRate}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\">\r\n                              Price per Additional Child : ₹\r\n                              {room.additionalChildRate}\r\n                            </Typography>\r\n                          </>\r\n                        )}\r\n                        <Button\r\n                          sx={{\r\n                            textTransform: \"none\",\r\n                            fontSize: \"12px\",\r\n                            p: 0,\r\n                            minWidth: 0,\r\n                            ml: 0.2,\r\n                            color: color.firstColor,\r\n                          }}\r\n                          onClick={() => setShowRoomDetails(!showRoomDetails)}\r\n                        >\r\n                          {showRoomDetails ? \"Show less\" : \"...More\"}\r\n                        </Button>\r\n                      </div>\r\n                    </Box>\r\n\r\n                    <List\r\n                      sx={{\r\n                        py: 0,\r\n                        mt: 1,\r\n                        width: \"100%\",\r\n                        pb: { xs: 0, md: \"80px\" },\r\n                      }}\r\n                    >\r\n                      <RoomAmenities key={room.id} room={room} />\r\n                    </List>\r\n\r\n                    <Box\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        flexWrap: \"wrap\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"space-around\",\r\n                        gap: \"6px\",\r\n                        position: { xs: \"unset\", md: \"absolute\" },\r\n                        bottom: 16,\r\n                        right: 16,\r\n                        // width:'100%'\r\n                        margin: \"auto\",\r\n                        marginTop: \"20px\",\r\n                      }}\r\n                    >\r\n                      {bookingType === \"hourly\"\r\n                        ? [\"rateFor3Hour\", \"rateFor6Hour\", \"rateFor12Hour\"].map(\r\n                          (slotKey) => {\r\n                            const slotLabel =\r\n                              slotKey\r\n                                .replace(\"rateFor\", \"\")\r\n                                .replace(\"Hour\", \"\") + \"hrs\";\r\n                            const price = room[slotKey as keyof typeof room];\r\n\r\n                            return (\r\n                              <StyledToggleButton\r\n                                key={slotKey}\r\n                                value={slotLabel}\r\n                                selected={\r\n                                  selectedSlot.roomId === room.id &&\r\n                                  selectedSlot.slot === slotKey\r\n                                }\r\n                                onClick={() =>\r\n                                  handleSlotSelection(room.id, slotKey)\r\n                                }\r\n                                style={{ borderColor: color.forthColor }}\r\n                              >\r\n                                <Typography\r\n                                  px={1}\r\n                                  py={0.5}\r\n                                  sx={{\r\n                                    fontSize: { xs: \"8px\", md: \"12px\" },\r\n                                    lineHeight: 1.4,\r\n                                  }}\r\n                                >\r\n                                  <span\r\n                                    style={{\r\n                                      fontSize: \"18px\",\r\n                                      fontWeight: 600,\r\n                                    }}\r\n                                  >\r\n                                    {slotLabel}\r\n                                  </span>\r\n                                  <br />₹ {price}\r\n                                  <br />\r\n                                  Incl. Taxes\r\n                                </Typography>\r\n                              </StyledToggleButton>\r\n                            );\r\n                          }\r\n                        )\r\n                        : [\"rateFor1Night\"].map((slotKey) => {\r\n                          const slotLabel =\r\n                            slotKey.replace(\"rateFor1Night\", \"Per Night\") +\r\n                            \"\";\r\n                          const price = room[slotKey as keyof typeof room];\r\n\r\n                          return (\r\n                            <StyledToggleButton\r\n                              key={slotKey}\r\n                              value={slotLabel}\r\n                              selected={\r\n                                selectedSlot.roomId === room.id &&\r\n                                selectedSlot.slot === slotKey\r\n                              }\r\n                              onClick={() =>\r\n                                handleSlotSelection(room.id, slotKey)\r\n                              }\r\n                              style={{ borderColor: color.forthColor }}\r\n                            >\r\n                              <Typography\r\n                                px={1}\r\n                                py={0.5}\r\n                                sx={{\r\n                                  fontSize: { xs: \"8px\", md: \"12px\" },\r\n                                  lineHeight: 1.4,\r\n                                }}\r\n                              >\r\n                                <span\r\n                                  style={{\r\n                                    fontSize: \"18px\",\r\n                                    fontWeight: 600,\r\n                                  }}\r\n                                >\r\n                                  {slotLabel}\r\n                                </span>\r\n                                <br />₹ {price}\r\n                                <br />\r\n                                Incl. Taxes\r\n                              </Typography>\r\n                            </StyledToggleButton>\r\n                          );\r\n                        })}\r\n                    </Box>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n            <Box>\r\n              {hotel.extraService && (\r\n                <>\r\n                  <Typography\r\n                    sx={{\r\n                      fontFamily: \"CustomFontB\",\r\n                      fontSize: \"16px\",\r\n                      color: color.paperColor,\r\n                    }}\r\n                  >\r\n                    Extra Services\r\n                  </Typography>\r\n                  <Typography mb={2}>{hotel.extraService}</Typography>\r\n                </>\r\n              )}\r\n\r\n              <Typography\r\n                sx={{\r\n                  fontFamily: \"CustomFontB\",\r\n                  fontSize: \"16px\",\r\n                  color: color.paperColor,\r\n                }}\r\n              >\r\n                Amenities\r\n              </Typography>\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  gap: 2,\r\n                  mt: 2,\r\n                  p: 2,\r\n                  px: 4,\r\n                  pt: 3,\r\n                  backgroundColor: \"rgba(93, 93, 93, 0.14)\",\r\n                  justifyContent: \"space-around\",\r\n                  borderRadius: \"12px\",\r\n                  width: \"fit-content\",\r\n                }}\r\n              >\r\n                {Array.from(\r\n                  new Set<string>(\r\n                    hotel?.rooms?.flatMap((room: any) => room.amenities) || []\r\n                  )\r\n                )\r\n                  .slice(0, 5)\r\n                  .map((amenity: string, index: number) => (\r\n                    <div\r\n                      key={index}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <Chip\r\n                        icon={\r\n                          <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                            {React.cloneElement(\r\n                              amenityIcons[amenity] || <AddCircleOutline />,\r\n                              {\r\n                                sx: {\r\n                                  fontSize: { xs: 26, md: 30 },\r\n                                  color: color.paperColor,\r\n                                },\r\n                              }\r\n                            )}\r\n                          </Box>\r\n                        }\r\n                        size=\"small\"\r\n                        sx={{ bgcolor: \"transparent\" }}\r\n                      />\r\n                      <Typography sx={{ fontSize: { xs: \"10px\", md: \"14px\" } }}>\r\n                        {amenity}\r\n                      </Typography>\r\n                    </div>\r\n                  ))}\r\n              </Box>\r\n            </Box>\r\n          </TabPanel>\r\n          <TabPanel value={value} index={2}>\r\n            <Typography mb={2}>{hotel.propertyPolicy}</Typography>\r\n          </TabPanel>\r\n          {/* <TabPanel value={value} index={3}>\r\n        <Typography>Hotel policies and guidelines.</Typography>\r\n      </TabPanel> */}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HotelDetails;\r\n\r\nconst StyledToggleButton = styled(ToggleButton)(({ theme }) => ({\r\n  borderRadius: \"4px\",\r\n  textTransform: \"none\",\r\n  fontSize: \"12px\",\r\n  padding: \"0px 10px\",\r\n  fontWeight: 600,\r\n  border: \"1px solid rgba(61, 61, 61, 0.4)\",\r\n  \"&.Mui-selected\": {\r\n    background: color.background,\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nconst TabPanel = ({\r\n  children,\r\n  value,\r\n  index,\r\n}: {\r\n  children: React.ReactNode;\r\n  value: number;\r\n  index: number;\r\n}) => {\r\n  return (\r\n    <div hidden={value !== index}>\r\n      {value === index && (\r\n        <Box p={1} mt={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n};","import { Edit } from \"@mui/icons-material\";\r\nimport { Box, Button, Grid, Modal, TextField, Typography } from \"@mui/material\";\r\nimport { useRef, useState } from \"react\";\r\nimport \"react-phone-input-2/lib/material.css\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport color from \"../../components/color\";\r\nimport { verifyOTP } from \"../../services/services\";\r\nimport \"./Login.css\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  setCurrentAccessToken,\r\n  setCurrentUser,\r\n} from \"../../services/axiosClient\";\r\n\r\nconst LoginOtpModal = () => {\r\n  const [step, setStep] = useState(1);\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [countryCode, setCountryCode] = useState(\"in\");\r\n  const [sessionId, setSessionId] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const location = useLocation();\r\n  const state = location.state;\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const phone = queryParams.get(\"phone\");\r\n  const name = queryParams.get(\"name\");\r\n  const session = queryParams.get(\"token\");\r\n  const email = queryParams.get(\"email\");\r\n\r\n  const [otp, setOtp] = useState(Array(4).fill(\"\"));\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const otpRefs = Array.from({ length: 4 }, () =>\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    useRef<HTMLInputElement>(null)\r\n  );\r\n\r\n  const isModalOpen =\r\n    new URLSearchParams(location.search).get(\"login\") === \"true\";\r\n\r\n  const handleClose = () => {\r\n    const searchParams = new URLSearchParams(location.search);\r\n\r\n    searchParams.delete(\"login\");\r\n    searchParams.delete(\"phone\");\r\n    searchParams.delete(\"name\");\r\n    searchParams.delete(\"email\");\r\n    searchParams.delete(\"token\");\r\n\r\n    navigate(`${location.pathname}?${searchParams.toString()}`, {\r\n      replace: true,\r\n      state: { ...location.state },\r\n    });\r\n  };\r\n\r\n  // const phoneFormik = useFormik({\r\n  //   initialValues: { phone: \"\" },\r\n  //   validationSchema: Yup.object({\r\n  //     phone: Yup.string()\r\n  //       .required(\"Phone number is required\")\r\n  //       .matches(/^\\d+$/, \"Only numbers allowed\"),\r\n  //   }),\r\n  //   onSubmit: (values) => {\r\n\r\n  //   },\r\n  // });\r\n\r\n  const handleOtpChange = (index: number, value: string) => {\r\n    if (!/^\\d*$/.test(value)) return;\r\n    const newOtp = [...otp];\r\n    newOtp[index] = value;\r\n    setOtp(newOtp);\r\n\r\n    if (value && index < 3) {\r\n      otpRefs[index + 1].current?.focus();\r\n    }\r\n  };\r\n\r\n  const handleOtpSubmit = () => {\r\n    if (otp.join(\"\").length === 4) {\r\n      const payLoad = {\r\n        otp: otp.join(\"\"),\r\n        sessionId: session,\r\n        phone: phone,\r\n        name: name,\r\n        email: email,\r\n      };\r\n      verifyOTP(payLoad)\r\n        .then((res) => {\r\n          setCurrentAccessToken(res?.data?.data?.token);\r\n          setCurrentUser(res?.data?.data?.user);\r\n          toast(res?.data?.msg);\r\n          handleClose();\r\n\r\n          // ✅ Trigger payment if the callback exists\r\n          if (location.state?.onPaymentSuccess) {\r\n            location.state.onPaymentSuccess(); // 🔥 Call handlePayment from the previous page\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          toast(err);\r\n        });\r\n    } else {\r\n      alert(\"Enter complete OTP\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal open={isModalOpen} onClose={handleClose}>\r\n      <Box sx={modalStyle}>\r\n        {/* {step === 1 ? (\r\n          <form\r\n            onSubmit={phoneFormik.handleSubmit}\r\n            style={{ height: \"100%\", borderRadius: \"12px\" }}\r\n          >\r\n            <div\r\n              className=\"subscribe\"\r\n              style={{\r\n                background: color.background,\r\n                color: \"white\",\r\n                position: \"relative\",\r\n                boxShadow: \"-4px -4px 10px rgba(255, 255, 255, 0.36) inset\",\r\n                borderRadius: \"12px\",\r\n                overflow: \"hidden\",\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  background: \"url('/assets/footer.webp')\",\r\n                  backgroundSize: { xs: \"70%\", md: \"70%\" },\r\n                  backgroundRepeat: \"no-repeat\",\r\n                  backgroundPosition: \"bottom left\",\r\n                  position: \"absolute\",\r\n                  top: 0,\r\n                  left: 0,\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                }}\r\n              ></Box>\r\n\r\n              <Typography variant=\"h6\">Enter Phone Number</Typography>\r\n              <Typography\r\n                mb={4}\r\n                variant=\"body2\"\r\n                sx={{ fontSize: \"12px\", textAlign: \"left\", maxWidth: \"80%\" }}\r\n              >\r\n                Login to create a booking!\r\n              </Typography>\r\n              <PhoneInput\r\n                country={\"in\"}\r\n                value={phoneFormik.values.phone}\r\n                onChange={(value, country) => {\r\n                  const countryData = country as CountryData;\r\n                  setCountryCode(countryData.countryCode);\r\n                  phoneFormik.setFieldValue(\r\n                    \"phone\",\r\n                    value.replace(/[^0-9]/g, \"\")\r\n                  );\r\n                }}\r\n                inputStyle={{\r\n                  width: \"100%\",\r\n                  fontFamily: \"CustomFontM\",\r\n                  color: \"black\",\r\n                  background: color.thirdColor,\r\n                }}\r\n                containerStyle={{ position: \"relative\" }}\r\n              />\r\n              {phoneFormik.touched.phone && phoneFormik.errors.phone && (\r\n                <Typography sx={{ color: \"white\", fontSize: \"14px\" }}>\r\n                  *{phoneFormik.errors.phone}\r\n                </Typography>\r\n              )}\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                sx={{\r\n                  background: color.thirdColor,\r\n\r\n                  color: color.firstColor,\r\n                  fontSize: \"14px\",\r\n                  fontWeight: \"bold\",\r\n                  textTransform: \"none\",\r\n                  m: \"auto\",\r\n                  mt: 4,\r\n                  width: \"100%\",\r\n                  display: \"block\",\r\n                  position: \"absolute\",\r\n                  bottom: 0,\r\n                  left: 0,\r\n                  borderRadius: 0,\r\n                  py: 2,\r\n                  boxShadow: \"0px -6px 50px rgba(7, 7, 7, 0.11)\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                Send OTP\r\n              </Button>\r\n\r\n              {/* <div className=\"submit-btn\">SUBMIT</div> */}\r\n        {/* </div> */}\r\n        {/* </form> */}\r\n        {/* ) : (  */}\r\n        <>\r\n          <div\r\n            className=\"subscribe\"\r\n            style={{\r\n              background: color.background,\r\n              color: \"white\",\r\n              position: \"relative\",\r\n              boxShadow: \"-4px -4px 10px rgba(255, 255, 255, 0.36) inset\",\r\n              borderRadius: \"12px\",\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                background: \"url('/assets/footer.webp')\",\r\n                backgroundSize: { xs: \"70%\", md: \"70%\" },\r\n                backgroundRepeat: \"no-repeat\",\r\n                backgroundPosition: \"bottom left\",\r\n                position: \"absolute\",\r\n                top: 0,\r\n                left: 0,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n              }}\r\n            ></Box>\r\n            <Typography variant=\"h6\">Enter OTP</Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              Sent to: +{phone}{\" \"}\r\n              <Button\r\n                size=\"small\"\r\n                onClick={() => handleClose()}\r\n                sx={{\r\n                  color: color.firstColor,\r\n                  background: color.thirdColor,\r\n                  p: 0,\r\n                  px: 1,\r\n                  minWidth: 0,\r\n                  ml: 1,\r\n                  textTransform: \"none\",\r\n                }}\r\n              >\r\n                <Edit sx={{ fontSize: \"14px\" }}></Edit> Edit\r\n              </Button>\r\n            </Typography>\r\n            <Grid container spacing={1} justifyContent=\"center\" mt={3}>\r\n              {otp.map((_, index) => (\r\n                <Grid item key={index}>\r\n                  <TextField\r\n                    inputRef={otpRefs[index]}\r\n                    value={otp[index]}\r\n                    onChange={(e) => handleOtpChange(index, e.target.value)}\r\n                    inputProps={{\r\n                      maxLength: 1,\r\n                      style: {\r\n                        textAlign: \"center\",\r\n                        fontSize: 18,\r\n                        borderColor: \"transparent\",\r\n                      },\r\n                    }}\r\n                    // sx={{ width: 40 }}\r\n\r\n                    sx={{\r\n                      width: 40,\r\n                      bgcolor: color.thirdColor,\r\n                      borderRadius: 2,\r\n                      // minWidth: \"200px\",\r\n                      border: \"none\",\r\n                      outline: \"none\",\r\n                      boxShadow: \"none\",\r\n                      \"& fieldset\": {\r\n                        border: \"none\",\r\n                      },\r\n                      \"&:hover\": {\r\n                        bgcolor: \"#f5f5f5\",\r\n                      },\r\n                      \"& .MuiInputBase-input\": {\r\n                        color: color.firstColor,\r\n                        fontFamily: \"CustomFontB\",\r\n                        fontSize: \"20px\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n            <Button\r\n              onClick={handleOtpSubmit}\r\n              type=\"submit\"\r\n              sx={{\r\n                background: color.thirdColor,\r\n                color: color.firstColor,\r\n                fontSize: \"14px\",\r\n                fontWeight: \"bold\",\r\n                textTransform: \"none\",\r\n                m: \"auto\",\r\n                mt: 4,\r\n                width: \"100%\",\r\n                display: \"block\",\r\n                position: \"absolute\",\r\n                bottom: 0,\r\n                left: 0,\r\n                borderRadius: 0,\r\n                py: 2,\r\n                boxShadow: \"0px -6px 50px rgba(7, 7, 7, 0.11)\",\r\n              }}\r\n            >\r\n              Verify OTP\r\n            </Button>\r\n          </div>\r\n        </>\r\n        {/* )} */}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  maxWidth: 400,\r\n  width: \"90%\",\r\n  height: 240,\r\n  background: color.thirdColor,\r\n  borderRadius: \"12px\",\r\n  //   p: 4,\r\n};\r\n\r\nexport default LoginOtpModal;\r\n"],"names":["createSvgIcon","_jsx","d","amenityIcons","PoolIcon","fontSize","Gym","FitnessCenterIcon","WifiIcon","BeachAccessIcon","Breakfast","FreeBreakfastIcon","Parking","LocalParkingIcon","Spa","SpaIcon","Restaurant","LocalDiningIcon","AirportShuttleIcon","BusinessCenterIcon","PetsIcon","Bar","LocalBarIcon","RoomServiceIcon","TV","TvIcon","AcUnitIcon","LocalLaundryServiceIcon","ChildCareIcon","KingBedIcon","Casino","CasinoIcon","DirectionsCarIcon","NightlifeIcon","SportsTennisIcon","OutdoorGrillIcon","FireExtinguisherIcon","amenitiesOptions","roomTypes","value","label","details","BoxStyle","p","px","boxShadow","borderRadius","my","BpRadio","props","Radio","style","padding","disableRipple","color","checkedIcon","BpCheckedIcon","icon","BpIcon","styled","_ref","theme","width","height","backgroundColor","backgroundImage","outline","outlineOffset","applyStyles","background","secondColor","display","content","StyledLabel","FormControlLabel","_ref2","checked","thirdColor","firstColor","alignItems","transition","paddingLeft","marginLeft","paddingRight","CustomRadio","CustomNextArrow","onClick","IconButton","sx","position","right","top","transform","zIndex","children","ArrowForwardIos","CustomTextField","TextField","marginBottom","border","LoginTextField","useScreenSize","useTheme","isBelow400px","useMediaQuery","breakpoints","down","inputSx","marginTop","boxSizing","borderBottom","borderColor","ImageGrid","_ref3","propertyImages","maxImages","Math","min","length","displayImages","slice","hasMore","open","setOpen","useState","isMobile","_jsxs","Box","xs","md","gap","gridTemplateColumns","gridTemplateRows","objectFit","gridColumn","gridRow","src","alt","map","index","bottom","textAlign","cursor","Typography","variant","Modal","onClose","left","bgcolor","overflowY","mb","Close","img","RoomAmenities","_ref4","room","showAll","setShowAll","displayedAmenities","amenities","halfIndex","ceil","firstColumn","secondColumn","_Fragment","mt","Grid","container","spacing","column","colIndex","item","List","disablePadding","amenity","isLastItem","ListItem","py","flexWrap","ListItemIcon","minWidth","FiberManualRecord","ListItemText","margin","primary","primaryTypographyProps","Button","textTransform","ml","fontWeight","ExpandLess","ExpandMore","getRatingText","rating","getRatingColor","hotelData","HotelDetails","_location$state","_hotel$ratings","_hotel$ratings2","_hotel$ratings3","_hotel$rooms$","_selectedRoom$selecte","_hotel$rooms","location","useLocation","queryParams","URLSearchParams","search","bookingType","get","checkinTime","checkinDate","checkOutDate","rooms","adults","hotel","state","console","log","selectedRoom","setSelectedRoom","selectedSlot","setSelectedSlot","roomId","id","slot","handleSlotSelection","showRoomDetails","setShowRoomDetails","expanded","setExpanded","isSticky","setIsSticky","stopPosition","setStopPosition","useEffect","handleScroll","boxA","document","getElementById","boxB","boxC","boxBRect","getBoundingClientRect","boxARect","window","innerHeight","addEventListener","removeEventListener","setPosition","boxRef","useRef","observer","IntersectionObserver","entry","isIntersecting","threshold","current","observe","unobserve","setValue","showDetails","setShowDetails","navigate","useNavigate","ref","justifyContent","lineHeight","ratings","reviews","StarRounded","propertyName","fontFamily","paperColor","address","pr","mx","Star","maxWidth","propertyDesc","substring","pt","flexDirection","Chip","React","AddCircleOutline","size","maxHeight","pb","m","overflow","scrollY","forthColor","dayjs","format","Divider","opacity","borderWidth","orientation","flexItem","FormControl","component","RadioGroup","onChange","e","find","r","Number","target","control","roomCategory","slotKey","slotLabel","replace","price","StyledToggleButton","selected","taxRate","extrafees","CustomButton","customStyles","_selectedRoom$selecte2","basePrice","taxesAndFees","totalPrice","queryString","toString","pricingDetails","tax","extraFees","LoginOtpModal","Tabs","event","newValue","Tab","TabPanel","Card","CheckCircle","CardMedia","image","roomImages","pl","roomSize","standardRoomOccupancy","numberOfFreeChildren","maxRoomOccupancy","additionalGuestRate","additionalChildRate","extraService","Array","from","Set","flatMap","propertyPolicy","ToggleButton","hidden","modalStyle","step","setStep","phoneNumber","setPhoneNumber","countryCode","setCountryCode","sessionId","setSessionId","phone","name","session","email","otp","setOtp","fill","otpRefs","isModalOpen","handleClose","searchParams","delete","pathname","className","backgroundSize","backgroundRepeat","backgroundPosition","Edit","_","inputRef","handleOtpChange","test","newOtp","_otpRefs$current","focus","inputProps","maxLength","handleOtpSubmit","join","payLoad","verifyOTP","then","res","_res$data","_res$data$data","_res$data2","_res$data2$data","_res$data3","setCurrentAccessToken","data","token","setCurrentUser","user","toast","msg","onPaymentSuccess","catch","err","alert","type"],"sourceRoot":""}