{"version":3,"file":"static/js/318.efafda7d.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/ListItemAvatar/listItemAvatarClasses.js","../node_modules/@mui/material/ListItemAvatar/ListItemAvatar.js","pages/Admin/Messages.tsx","../node_modules/@mui/system/esm/useThemeProps/useThemeProps.js","../node_modules/@mui/system/esm/styled/styled.js","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js","../node_modules/@mui/material/internal/svg-icons/Person.js","../node_modules/@mui/material/Avatar/avatarClasses.js","../node_modules/@mui/material/Avatar/Avatar.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemAvatar', slot);\n}\nconst listItemAvatarClasses = generateUtilityClasses('MuiListItemAvatar', ['root', 'alignItemsFlexStart']);\nexport default listItemAvatarClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport ListContext from \"../List/ListContext.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getListItemAvatarUtilityClass } from \"./listItemAvatarClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\nconst ListItemAvatarRoot = styled('div', {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})({\n  minWidth: 56,\n  flexShrink: 0,\n  variants: [{\n    props: {\n      alignItems: 'flex-start'\n    },\n    style: {\n      marginTop: 8\n    }\n  }]\n});\n\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n  const {\n    className,\n    ...other\n  } = props;\n  const context = React.useContext(ListContext);\n  const ownerState = {\n    ...props,\n    alignItems: context.alignItems\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemAvatarRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `Avatar`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemAvatar;","import {\r\n    Avatar,\r\n    Box,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    Typography,\r\n    Container,\r\n    CircularProgress\r\n} from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getAllMessage } from '../../services/services';\r\n\r\ninterface Message {\r\n    id: number;\r\n    sender: string;\r\n    avatar?: string;\r\n    text: string;\r\n    createdAt: string;\r\n    unread: boolean;\r\n}\r\n\r\nconst Messages = () => {\r\n    const [messages, setMessages] = useState<Message[]>([]);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const theme = useTheme();\r\n\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n            try {\r\n                setLoading(true);\r\n                setError(null);\r\n\r\n                const payload = {\r\n                    data: { filter: \"\" },\r\n                    page: 0,\r\n                    pageSize: 50,\r\n                    order: [[\"createdAt\", \"ASC\"]],\r\n                };\r\n\r\n                const response = await getAllMessage(payload);\r\n\r\n                if (response?.data?.data?.rows) {\r\n                    // Transform API data to match our component's expected format\r\n                    const formattedMessages = response.data.data.rows.map((msg: any) => ({\r\n                        id: msg.id,\r\n                        sender: msg.senderName || 'Unknown Sender',\r\n                        avatar: msg.senderAvatar || undefined,\r\n                        text: msg.content || 'No content',\r\n                        createdAt: msg.createdAt,\r\n                        unread: msg.status === 'UNREAD' // Adjust based on your API's read status\r\n                    }));\r\n\r\n                    setMessages(formattedMessages);\r\n                } else {\r\n                    setMessages([]);\r\n                    setError('No messages found');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching messages:', error);\r\n                setError('Failed to load messages');\r\n                setMessages([]);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchMessages();\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return (\r\n            <Container maxWidth=\"lg\" sx={{ py: 4, display: 'flex', justifyContent: 'center' }}>\r\n                <CircularProgress />\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <Container maxWidth=\"lg\" sx={{ py: 4 }}>\r\n                <Typography variant=\"h4\" gutterBottom sx={{ fontWeight: 'bold', mb: 3 }}>\r\n                    Messages\r\n                </Typography>\r\n                <Typography color=\"error\">{error}</Typography>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" sx={{ py: 4 }}>\r\n            <Typography variant=\"h4\" gutterBottom sx={{ fontWeight: 'bold', mb: 3 }}>\r\n                Messages\r\n            </Typography>\r\n\r\n            <Box sx={{\r\n                bgcolor: 'background.paper',\r\n                borderRadius: theme.shape.borderRadius,\r\n                boxShadow: theme.shadows[1],\r\n                overflow: 'hidden'\r\n            }}>\r\n                {messages.length > 0 ? (\r\n                    <List>\r\n                        {messages.map((message) => (\r\n                            <ListItem key={message.id} divider>\r\n                                <ListItemAvatar>\r\n                                    <Avatar alt={message.sender} src={message.avatar} />\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primary={\r\n                                        <Box display=\"flex\" justifyContent=\"space-between\">\r\n                                            <Typography\r\n                                                fontWeight={message.unread ? 'bold' : 'normal'}\r\n                                                color={message.unread ? 'text.primary' : 'text.secondary'}\r\n                                            >\r\n                                                {message.sender}\r\n                                            </Typography>\r\n                                            <Typography\r\n                                                variant=\"caption\"\r\n                                                color={message.unread ? 'primary.main' : 'text.secondary'}\r\n                                            >\r\n                                                {new Date(message.createdAt).toLocaleTimeString()}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    }\r\n                                    secondary={\r\n                                        <Typography\r\n                                            variant=\"body2\"\r\n                                            color={message.unread ? 'text.primary' : 'text.secondary'}\r\n                                        >\r\n                                            {message.text}\r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                ) : (\r\n                    <Box p={4} textAlign=\"center\">\r\n                        <Typography color=\"text.secondary\">No messages available</Typography>\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Messages;","'use client';\n\nimport getThemeProps from \"./getThemeProps.js\";\nimport useTheme from \"../useTheme/index.js\";\nexport default function useThemeProps({\n  props,\n  name,\n  defaultTheme,\n  themeId\n}) {\n  let theme = useTheme(defaultTheme);\n  if (themeId) {\n    theme = theme[themeId] || theme;\n  }\n  return getThemeProps({\n    theme,\n    name,\n    props\n  });\n}","import createStyled from \"../createStyled/index.js\";\nconst styled = createStyled();\nexport default styled;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport systemStyled from \"../styled/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => ({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    ...(!ownerState.disableGutters && {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n      }\n    })\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => ({\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ...(ownerState.maxWidth === 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('xs')]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n      }\n    }),\n    ...(ownerState.maxWidth &&\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ownerState.maxWidth !== 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up(ownerState.maxWidth)]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n      }\n    })\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      fixed = false,\n      maxWidth = 'lg',\n      classes: classesProp,\n      ...other\n    } = props;\n    const ownerState = {\n      ...props,\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    };\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, {\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref,\n        ...other\n      })\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from \"../utils/capitalize.js\";\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Person from \"../internal/svg-icons/Person.js\";\nimport { getAvatarUtilityClass } from \"./avatarClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none',\n  variants: [{\n    props: {\n      variant: 'rounded'\n    },\n    style: {\n      borderRadius: (theme.vars || theme).shape.borderRadius\n    }\n  }, {\n    props: {\n      variant: 'square'\n    },\n    style: {\n      borderRadius: 0\n    }\n  }, {\n    props: {\n      colorDefault: true\n    },\n    style: {\n      color: (theme.vars || theme).palette.background.default,\n      ...(theme.vars ? {\n        backgroundColor: theme.vars.palette.Avatar.defaultBg\n      } : {\n        backgroundColor: theme.palette.grey[400],\n        ...theme.applyStyles('dark', {\n          backgroundColor: theme.palette.grey[600]\n        })\n      })\n    }\n  }]\n})));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('loaded');\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('error');\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n    alt,\n    children: childrenProp,\n    className,\n    component = 'div',\n    slots = {},\n    slotProps = {},\n    imgProps,\n    sizes,\n    src,\n    srcSet,\n    variant = 'circular',\n    ...other\n  } = props;\n  let children = null;\n  const ownerState = {\n    ...props,\n    component,\n    variant\n  };\n\n  // Use a hook instead of onError on the img element to support server-side rendering.\n  const loaded = useLoaded({\n    ...imgProps,\n    ...(typeof slotProps.img === 'function' ? slotProps.img(ownerState) : slotProps.img),\n    src,\n    srcSet\n  });\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  ownerState.colorDefault = !hasImgNotFailing;\n  // This issue explains why this is required: https://github.com/mui/material-ui/issues/42184\n  delete ownerState.ownerState;\n  const classes = useUtilityClasses(ownerState);\n  const [ImgSlot, imgSlotProps] = useSlot('img', {\n    className: classes.img,\n    elementType: AvatarImg,\n    externalForwardedProps: {\n      slots,\n      slotProps: {\n        img: {\n          ...imgProps,\n          ...slotProps.img\n        }\n      }\n    },\n    additionalProps: {\n      alt,\n      src,\n      srcSet,\n      sizes\n    },\n    ownerState\n  });\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(ImgSlot, {\n      ...imgSlotProps\n    });\n    // We only render valid children, non valid children are rendered with a fallback\n    // We consider that invalid children are all falsy values, except 0, which is valid.\n  } else if (!!childrenProp || childrenProp === 0) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      ownerState: ownerState,\n      className: classes.fallback\n    });\n  }\n  return /*#__PURE__*/_jsx(AvatarRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    ownerState: ownerState,\n    children: children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   * @deprecated Use `slotProps.img` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  imgProps: PropTypes.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    img: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    img: PropTypes.elementType\n  }),\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;"],"names":["getListItemAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","ListItemAvatarRoot","styled","name","overridesResolver","props","styles","ownerState","root","alignItems","alignItemsFlexStart","minWidth","flexShrink","variants","style","marginTop","React","inProps","ref","useDefaultProps","className","other","context","ListContext","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","Messages","messages","setMessages","useState","loading","setLoading","error","setError","theme","useTheme","useEffect","async","_response$data","_response$data$data","payload","data","filter","page","pageSize","order","response","getAllMessage","rows","formattedMessages","map","msg","id","sender","senderName","avatar","senderAvatar","undefined","text","content","createdAt","unread","status","console","fetchMessages","Container","maxWidth","sx","py","display","justifyContent","children","CircularProgress","_jsxs","Typography","variant","gutterBottom","fontWeight","mb","color","Box","bgcolor","borderRadius","shape","boxShadow","shadows","overflow","length","List","message","ListItem","divider","ListItemAvatar","Avatar","alt","src","ListItemText","primary","Date","toLocaleTimeString","secondary","p","textAlign","useThemeProps","_ref","defaultTheme","themeId","getThemeProps","createStyled","createTheme","defaultCreateStyledComponent","systemStyled","capitalize","String","fixed","disableGutters","useThemePropsDefault","useThemePropsSystem","options","arguments","createStyledComponent","componentName","ContainerRoot","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","breakpoints","up","_ref2","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","_ref3","Math","max","xs","component","classesProp","as","createContainer","createSvgIcon","d","getAvatarUtilityClass","AvatarRoot","colorDefault","memoTheme","position","height","fontFamily","typography","fontSize","pxToRem","lineHeight","userSelect","vars","palette","background","default","backgroundColor","defaultBg","grey","applyStyles","AvatarImg","img","objectFit","textIndent","AvatarFallback","Person","fallback","childrenProp","slotProps","imgProps","sizes","srcSet","loaded","crossOrigin","referrerPolicy","setLoaded","active","image","Image","onload","onerror","srcset","useLoaded","hasImg","hasImgNotFailing","ImgSlot","imgSlotProps","useSlot","elementType","externalForwardedProps","additionalProps"],"sourceRoot":""}