{"version":3,"file":"static/js/598.1ed7eb37.chunk.js","mappings":"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","sources":["components/data.tsx","pages/Account/LoginOtpModal.tsx","pages/HotelDetails.tsx","services/services.ts"],"sourcesContent":["import PoolIcon from \"@mui/icons-material/Pool\";\r\nimport FitnessCenterIcon from \"@mui/icons-material/FitnessCenter\";\r\nimport WifiIcon from \"@mui/icons-material/Wifi\";\r\nimport BeachAccessIcon from \"@mui/icons-material/BeachAccess\";\r\nimport FreeBreakfastIcon from \"@mui/icons-material/FreeBreakfast\";\r\nimport LocalParkingIcon from \"@mui/icons-material/LocalParking\";\r\nimport SpaIcon from \"@mui/icons-material/Spa\";\r\nimport LocalDiningIcon from \"@mui/icons-material/LocalDining\";\r\nimport AirportShuttleIcon from \"@mui/icons-material/AirportShuttle\";\r\nimport BusinessCenterIcon from \"@mui/icons-material/BusinessCenter\";\r\nimport PetsIcon from \"@mui/icons-material/Pets\";\r\nimport LocalBarIcon from \"@mui/icons-material/LocalBar\";\r\nimport RoomServiceIcon from \"@mui/icons-material/RoomService\";\r\nimport TvIcon from \"@mui/icons-material/Tv\";\r\nimport AcUnitIcon from \"@mui/icons-material/AcUnit\";\r\nimport LocalLaundryServiceIcon from \"@mui/icons-material/LocalLaundryService\";\r\nimport ChildCareIcon from \"@mui/icons-material/ChildCare\";\r\nimport KingBedIcon from \"@mui/icons-material/KingBed\";\r\nimport CasinoIcon from \"@mui/icons-material/Casino\";\r\nimport DirectionsCarIcon from \"@mui/icons-material/DirectionsCar\";\r\nimport NightlifeIcon from \"@mui/icons-material/Nightlife\";\r\nimport SportsTennisIcon from \"@mui/icons-material/SportsTennis\";\r\nimport OutdoorGrillIcon from \"@mui/icons-material/OutdoorGrill\";\r\nimport FireExtinguisherIcon from \"@mui/icons-material/FireExtinguisher\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\n\r\nexport const amenityIcons: { [key: string]: JSX.Element } = {\r\n  \"Swimming Pool\": <PoolIcon fontSize=\"small\" />,\r\n  Gym: <FitnessCenterIcon fontSize=\"small\" />,\r\n  \"Free WiFi\": <WifiIcon fontSize=\"small\" />,\r\n  \"Private Beach\": <BeachAccessIcon fontSize=\"small\" />,\r\n  Breakfast: <FreeBreakfastIcon fontSize=\"small\" />,\r\n  Parking: <LocalParkingIcon fontSize=\"small\" />,\r\n  Spa: <SpaIcon fontSize=\"small\" />,\r\n  Restaurant: <LocalDiningIcon fontSize=\"small\" />,\r\n  \"Airport Shuttle\": <AirportShuttleIcon fontSize=\"small\" />,\r\n  \"Business Center\": <BusinessCenterIcon fontSize=\"small\" />,\r\n  \"Pet Friendly\": <PetsIcon fontSize=\"small\" />,\r\n  Bar: <LocalBarIcon fontSize=\"small\" />,\r\n  \"Room Service\": <RoomServiceIcon fontSize=\"small\" />,\r\n  TV: <TvIcon fontSize=\"small\" />,\r\n  \"Air Conditioning\": <AcUnitIcon fontSize=\"small\" />,\r\n  \"Laundry Service\": <LocalLaundryServiceIcon fontSize=\"small\" />,\r\n  \"Child Care\": <ChildCareIcon fontSize=\"small\" />,\r\n  \"King Bed\": <KingBedIcon fontSize=\"small\" />,\r\n  Casino: <CasinoIcon fontSize=\"small\" />,\r\n  \"Car Rental\": <DirectionsCarIcon fontSize=\"small\" />,\r\n  \"Night Club\": <NightlifeIcon fontSize=\"small\" />,\r\n  \"Tennis Court\": <SportsTennisIcon fontSize=\"small\" />,\r\n  \"BBQ Facilities\": <OutdoorGrillIcon fontSize=\"small\" />,\r\n  \"Fire Safety\": <FireExtinguisherIcon fontSize=\"small\" />,\r\n};","import { Edit } from \"@mui/icons-material\";\r\nimport { Box, Button, Grid, Modal, TextField, Typography } from \"@mui/material\";\r\nimport { useFormik } from \"formik\";\r\nimport { useRef, useState } from \"react\";\r\nimport PhoneInput, { CountryData } from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/material.css\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport color from \"../../components/color\";\r\nimport \"./Login.css\";\r\nimport { sendOTP, verifyOTP } from \"../../services/services\";\r\n\r\nimport { error } from \"console\";\r\nimport { toast } from \"react-toastify\";\r\nimport { setCurrentAccessToken, setCurrentUser } from \"../../services/axiosClient\";\r\n\r\nconst LoginOtpModal = () => {\r\n  const [step, setStep] = useState(1);\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [countryCode, setCountryCode] = useState(\"in\");\r\n  const [sessionId, setSessionId] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const [otp, setOtp] = useState(Array(4).fill(\"\"));\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const otpRefs = Array.from({ length: 4 }, () =>\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    useRef<HTMLInputElement>(null)\r\n  );\r\n\r\n  const location = useLocation();\r\n\r\n  const isModalOpen =\r\n    new URLSearchParams(location.search).get(\"login\") === \"true\";\r\n\r\n  const handleClose = () => {\r\n    navigate(location.pathname, { replace: true });\r\n  };\r\n\r\n  const phoneFormik = useFormik({\r\n    initialValues: { phone: \"\" },\r\n    validationSchema: Yup.object({\r\n      phone: Yup.string()\r\n        .required(\"Phone number is required\")\r\n        .matches(/^\\d+$/, \"Only numbers allowed\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      setPhoneNumber(values.phone);\r\n      sendOtp(values.phone)\r\n    },\r\n  });\r\n\r\n  const sendOtp = async (phoneNumber: any) => {\r\n    console.log(phoneNumber.slice(2));\r\n    const payLoad = {\r\n      \"phone\": phoneNumber.slice(2)\r\n    };\r\n\r\n    sendOTP(payLoad).then((res) => {\r\n      console.log(res);\r\n      toast(res?.data?.msg);\r\n      setSessionId(res?.data?.data)\r\n      setStep(2);\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  const handleOtpChange = (index: number, value: string) => {\r\n    if (!/^\\d*$/.test(value)) return;\r\n    const newOtp = [...otp];\r\n    newOtp[index] = value;\r\n    setOtp(newOtp);\r\n\r\n    if (value && index < 3) {\r\n      otpRefs[index + 1].current?.focus();\r\n    }\r\n  };\r\n\r\n  const handleOtpSubmit = () => {\r\n    if (otp.join(\"\").length === 4) {\r\n      const payLoad = {\r\n        \"otp\": otp.join(\"\"),\r\n        \"sessionId\": sessionId,\r\n        \"phone\": phoneNumber.slice(2)\r\n      }\r\n      verifyOTP(payLoad).then((res) => {\r\n        setCurrentAccessToken(res?.data?.data?.token);\r\n        setCurrentUser(res?.data?.data?.user);\r\n        toast(res?.data?.msg);\r\n        navigate(`/booking-summary/${phoneNumber}`, { replace: true, state: { phoneNumber } });\r\n      }).catch((err) => {\r\n        toast(err);\r\n      })\r\n\r\n    } else {\r\n      alert(\"Enter complete OTP\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal open={isModalOpen} onClose={handleClose}>\r\n      <Box sx={modalStyle}>\r\n        {step === 1 ? (\r\n          <form\r\n            onSubmit={phoneFormik.handleSubmit}\r\n            style={{ height: \"100%\", borderRadius: \"12px\" }}\r\n          >\r\n            <div\r\n              className=\"subscribe\"\r\n              style={{\r\n                background: color.background,\r\n                color: \"white\",\r\n                position: \"relative\",\r\n                boxShadow: \"-4px -4px 10px rgba(255, 255, 255, 0.36) inset\",\r\n                borderRadius: \"12px\",\r\n                overflow: \"hidden\",\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  background: \"url('/assets/footer.webp')\",\r\n                  backgroundSize: { xs: \"70%\", md: \"70%\" },\r\n                  backgroundRepeat: \"no-repeat\",\r\n                  backgroundPosition: \"bottom left\",\r\n                  position: \"absolute\",\r\n                  top: 0,\r\n                  left: 0,\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                }}\r\n              ></Box>\r\n\r\n              <Typography variant=\"h6\">Enter Phone Number</Typography>\r\n              <Typography\r\n                mb={4}\r\n                variant=\"body2\"\r\n                sx={{ fontSize: \"12px\", textAlign: \"left\", maxWidth: \"80%\" }}\r\n              >\r\n                Login to create a booking!\r\n              </Typography>\r\n              <PhoneInput\r\n                country={\"in\"}\r\n                value={phoneFormik.values.phone}\r\n                onChange={(value, country) => {\r\n                  const countryData = country as CountryData;\r\n                  setCountryCode(countryData.countryCode);\r\n                  phoneFormik.setFieldValue(\r\n                    \"phone\",\r\n                    value.replace(/[^0-9]/g, \"\")\r\n                  );\r\n                }}\r\n                inputStyle={{\r\n                  width: \"100%\",\r\n                  fontFamily: \"CustomFontM\",\r\n                  color: \"black\",\r\n                  background: color.thirdColor,\r\n                }}\r\n                containerStyle={{ position: \"relative\" }}\r\n              />\r\n              {phoneFormik.touched.phone && phoneFormik.errors.phone && (\r\n                <Typography sx={{ color: \"white\", fontSize: \"14px\" }}>\r\n                  *{phoneFormik.errors.phone}\r\n                </Typography>\r\n              )}\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                sx={{\r\n                  background: color.thirdColor,\r\n\r\n                  color: color.firstColor,\r\n                  fontSize: \"14px\",\r\n                  fontWeight: \"bold\",\r\n                  textTransform: \"none\",\r\n                  m: \"auto\",\r\n                  mt: 4,\r\n                  width: \"100%\",\r\n                  display: \"block\",\r\n                  position: \"absolute\",\r\n                  bottom: 0,\r\n                  left: 0,\r\n                  borderRadius: 0,\r\n                  py: 2,\r\n                  boxShadow: \"0px -6px 50px rgba(7, 7, 7, 0.11)\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                Send OTP\r\n              </Button>\r\n\r\n              {/* <div className=\"submit-btn\">SUBMIT</div> */}\r\n            </div>\r\n          </form>\r\n        ) : (\r\n          <>\r\n            <div\r\n              className=\"subscribe\"\r\n              style={{\r\n                background: color.background,\r\n                color: \"white\",\r\n                position: \"relative\",\r\n                boxShadow: \"-4px -4px 10px rgba(255, 255, 255, 0.36) inset\",\r\n                borderRadius: \"12px\",\r\n                overflow: \"hidden\",\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  background: \"url('/assets/footer.webp')\",\r\n                  backgroundSize: { xs: \"70%\", md: \"70%\" },\r\n                  backgroundRepeat: \"no-repeat\",\r\n                  backgroundPosition: \"bottom left\",\r\n                  position: \"absolute\",\r\n                  top: 0,\r\n                  left: 0,\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                }}\r\n              ></Box>\r\n              <Typography variant=\"h6\">Enter OTP</Typography>\r\n              <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n                Sent to: +{phoneNumber}{\" \"}\r\n                <Button\r\n                  size=\"small\"\r\n                  onClick={() => setStep(1)}\r\n                  sx={{\r\n                    color: color.firstColor,\r\n                    background: color.thirdColor,\r\n                    p: 0,\r\n                    px: 1,\r\n                    minWidth: 0,\r\n                    ml: 1,\r\n                    textTransform: \"none\",\r\n                  }}\r\n                >\r\n                  <Edit sx={{ fontSize: \"14px\" }}></Edit> Edit\r\n                </Button>\r\n              </Typography>\r\n              <Grid container spacing={1} justifyContent=\"center\" mt={3}>\r\n                {otp.map((_, index) => (\r\n                  <Grid item key={index}>\r\n                    <TextField\r\n                      inputRef={otpRefs[index]}\r\n                      value={otp[index]}\r\n                      onChange={(e) => handleOtpChange(index, e.target.value)}\r\n                      inputProps={{\r\n                        maxLength: 1,\r\n                        style: {\r\n                          textAlign: \"center\",\r\n                          fontSize: 18,\r\n                          borderColor: \"transparent\",\r\n                        },\r\n                      }}\r\n                      // sx={{ width: 40 }}\r\n\r\n                      sx={{\r\n                        width: 40,\r\n                        bgcolor: color.thirdColor,\r\n                        borderRadius: 2,\r\n                        // minWidth: \"200px\",\r\n                        border: \"none\",\r\n                        outline: \"none\",\r\n                        boxShadow: \"none\",\r\n                        \"& fieldset\": {\r\n                          border: \"none\",\r\n                        },\r\n                        \"&:hover\": {\r\n                          bgcolor: \"#f5f5f5\",\r\n                        },\r\n                        \"& .MuiInputBase-input\": {\r\n                          color: color.firstColor,\r\n                          fontFamily: \"CustomFontB\",\r\n                          fontSize: \"20px\",\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n              <Button\r\n                onClick={handleOtpSubmit}\r\n                type=\"submit\"\r\n                sx={{\r\n                  background: color.thirdColor,\r\n                  color: color.firstColor,\r\n                  fontSize: \"14px\",\r\n                  fontWeight: \"bold\",\r\n                  textTransform: \"none\",\r\n                  m: \"auto\",\r\n                  mt: 4,\r\n                  width: \"100%\",\r\n                  display: \"block\",\r\n                  position: \"absolute\",\r\n                  bottom: 0,\r\n                  left: 0,\r\n                  borderRadius: 0,\r\n                  py: 2,\r\n                  boxShadow: \"0px -6px 50px rgba(7, 7, 7, 0.11)\",\r\n                }}\r\n              >\r\n                Verify OTP\r\n              </Button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  maxWidth: 400,\r\n  width: \"90%\",\r\n  height: 240,\r\n  background: color.thirdColor,\r\n  borderRadius: \"12px\",\r\n  //   p: 4,\r\n};\r\n\r\nexport default LoginOtpModal;\r\n","/* eslint-disable jsx-a11y/img-redundant-alt */\nimport {\n  AddCircleOutline,\n  CheckCircle,\n  Close,\n  ExpandLess,\n  ExpandMore,\n  FiberManualRecord,\n  Star,\n} from \"@mui/icons-material\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardMedia,\n  Chip,\n  Divider,\n  FormControl,\n  Grid,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Modal,\n  RadioGroup,\n  styled,\n  Tab,\n  Tabs,\n  ToggleButton,\n  Typography,\n  useMediaQuery,\n} from \"@mui/material\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport color from \"../components/color\";\nimport CustomButton from \"../components/CustomButton\";\nimport { amenityIcons } from \"../components/data\";\nimport { BoxStyle, CustomRadio, StyledLabel } from \"../components/style\";\nimport LoginOtpModal from \"./Account/LoginOtpModal\";\nimport SearchSection from \"./Home Section/SearchSection\";\n\nconst hotelData = {\n  name: \"Hotel Metropol by Maier Private hotels\",\n  address: \"Plot no 10, 11, Mancheswar, Bhubaneswar, Odisha 751001, India\",\n  description:\n    \"A good description should be a narrative. It should tell the story of your property. It should focus on the emotions that the property and its amenities evoke. This is where you can describe the style of the property, the history of those who have operated there, and the importance of its place in the neighborhood.\",\n  rating: 4.7,\n  reviews: 134,\n  amenities: [\n    \"Gym\",\n    \"Swimming Pool\",\n    \"Free WiFi\",\n    \"Private Beach\",\n    \"Breakfast\",\n  ],\n  images: [\n    \"https://s3.ap-south-1.amazonaws.com/huts4u.shop/hotel+1.jpg\",\n    \"https://s3.ap-south-1.amazonaws.com/huts4u.shop/hotel+2.jpg\",\n    \"https://s3.ap-south-1.amazonaws.com/huts4u.shop/room-image+1.jpg\",\n    \"https://s3.ap-south-1.amazonaws.com/huts4u.shop/room-image+2.jpg\",\n    \"https://s3.ap-south-1.amazonaws.com/huts4u.shop/room-image+3.jpg\",\n    \"https://s3.ap-south-1.amazonaws.com/huts4u.shop/room-image+3.jpg\",\n    \"https://s3.ap-south-1.amazonaws.com/huts4u.shop/room-image+3.jpg\",\n    \"https://s3.ap-south-1.amazonaws.com/huts4u.shop/room-image+3.jpg\",\n  ],\n  rooms: [\n    {\n      id: 1,\n      name: \"Deluxe Double Room\",\n      size: \"225 sqft (21 sq.m) | Double Bed\",\n      price: {\n        \"3 hrs\": 1543,\n        \"6 hrs\": 1943,\n        \"12 hrs\": 2743,\n      },\n      amenities: [\n        \"Iron/Ironing Board\",\n        \"Bathroom \",\n        \"24-hour Housekeeping\",\n        \"24-hour In-room Dining\",\n        \"Laundry Service\",\n        \"Air Conditioning\",\n        \"Air Conditioning\",\n        \"Air Conditioning\",\n        \"Air Conditioning\",\n        \"Air Conditioning\",\n      ],\n      image: \"https://s3.ap-south-1.amazonaws.com/huts4u.shop/room-image+1.jpg\",\n    },\n    {\n      id: 2,\n      name: \"Superior Double Room\",\n      size: \"250 sqft (23 sq.m) | Queen Bed\",\n      price: {\n        \"3 hrs\": 1743,\n        \"6 hrs\": 2143,\n        \"12 hrs\": 2943,\n      },\n      amenities: [\n        \"Iron/Ironing Board\",\n        \"Bathroom\",\n        \"24-hour Housekeeping\",\n        \"Laundry Service\",\n        \"Air Conditioning\",\n      ],\n      image: \"https://s3.ap-south-1.amazonaws.com/huts4u.shop/room-image+1.jpg\",\n    },\n    {\n      id: 3,\n      name: \"Superior Double Room\",\n      size: \"250 sqft (23 sq.m) | Queen Bed\",\n      price: {\n        \"3 hrs\": 1743,\n        \"6 hrs\": 2143,\n        \"12 hrs\": 2943,\n      },\n      amenities: [\n        \"Iron/Ironing Board\",\n        \"Bathroom\",\n        \"24-hour Housekeeping\",\n        \"Laundry Service\",\n        \"Air Conditioning\",\n      ],\n      image: \"https://s3.ap-south-1.amazonaws.com/huts4u.shop/room-image+1.jpg\",\n    },\n  ],\n};\n\nconst HotelDetails = () => {\n  const [selectedRoom, setSelectedRoom] = useState(hotelData.rooms[0]); // Store the full room object\n  const [selectedSlot, setSelectedSlot] = useState<{\n    roomId: number | null;\n    slot: string | null;\n  }>({\n    roomId: null,\n    slot: null,\n  });\n  const handleSlotSelection = (roomId: number, slot: string) => {\n    setSelectedSlot({ roomId, slot }); // Ensure only one slot is selected at a time\n  };\n\n  const [expanded, setExpanded] = useState(false);\n  const maxLength = 150;\n\n  const [isSticky, setIsSticky] = useState(false);\n  const [stopPosition, setStopPosition] = useState(0);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const boxA = document.getElementById(\"boxA\");\n      const boxB = document.getElementById(\"boxB\");\n      const boxC = document.getElementById(\"boxC\");\n\n      if (!boxA || !boxB || !boxC) return;\n\n      const boxBRect = boxB.getBoundingClientRect();\n      const boxARect = boxA.getBoundingClientRect();\n\n      if (boxBRect.bottom <= window.innerHeight - 400) {\n        setIsSticky(true);\n      } else {\n        setIsSticky(false);\n      }\n\n      setStopPosition(boxARect.bottom + window.innerHeight);\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    handleScroll(); // Initial call\n\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  const [position, setPosition] = useState<\"relative\" | \"unset\">(\"relative\");\n  const boxRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        setPosition(entry.isIntersecting ? \"relative\" : \"unset\");\n      },\n      { threshold: 0.1 }\n    );\n\n    if (boxRef.current) {\n      observer.observe(boxRef.current);\n    }\n\n    return () => {\n      if (boxRef.current) {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        observer.unobserve(boxRef.current);\n      }\n    };\n  }, []);\n\n  const [value, setValue] = useState(0);\n\n  const [showDetails, setShowDetails] = useState(false);\n  const isMobile = useMediaQuery(\"(max-width: 900px)\");\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const openModal = () => {\n    navigate(`${location.pathname}?login=true`, { replace: true });\n  };\n  return (\n    <Box\n      id=\"boxA\"\n      sx={{\n        background: color.thirdColor,\n        p: { xs: 2, md: 4 },\n        position: \"relative\",\n        // minHeight: \"2000px\",\n      }}\n    >\n      <SearchSection></SearchSection>\n      <Box\n        sx={{\n          px: { xs: 0, md: 2 },\n        }}\n      >\n        <Box\n          ref={boxRef}\n          id=\"boxB\"\n          sx={{\n            ...BoxStyle,\n            px: { xs: 2, md: 3 },\n            py: 3,\n            position,\n          }}\n        >\n          <Box\n            sx={{\n              position: \"absolute\",\n              top: 24,\n              right: 24,\n              display: { xs: \"none\", md: \"flex\" },\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              gap: \"6px\",\n            }}\n          >\n            <Typography\n              variant=\"body2\"\n              fontWeight={600}\n              color={color.firstColor}\n              lineHeight={1}\n            >\n              Excellent <br />{\" \"}\n              <span style={{ fontSize: \"10px\" }}>\n                ({hotelData.reviews} reviews)\n              </span>\n            </Typography>\n\n            <Typography\n              variant=\"body2\"\n              fontWeight={600}\n              color={color.thirdColor}\n              sx={{\n                background: color.background,\n                px: 1,\n                borderRadius: \"4px\",\n                fontSize: \"18px\",\n              }}\n            >\n              {hotelData.rating}\n            </Typography>\n          </Box>\n\n          <Typography\n            variant=\"h5\"\n            sx={{\n              fontSize: { xs: \"18px\", md: \"24px\" },\n              fontWeight: 600,\n              color: color.firstColor,\n            }}\n          >\n            {hotelData.name}\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            sx={{\n              fontFamily: \"CustomFontSB\",\n              fontSize: { xs: \"10px\", md: \"14px\" },\n              color: color.paperColor,\n              mt: { xs: 1, md: 0 },\n            }}\n          >\n            {hotelData.address}\n          </Typography>\n\n          <Box py={2} sx={{ pr: { xs: 0, md: 2 }, mx: -1 }}>\n            <ImageGrid images={hotelData.images}></ImageGrid>\n          </Box>\n\n          <Box\n            sx={{\n              display: { xs: \"flex\", md: \"none\" },\n            }}\n          >\n            <Typography\n              variant=\"body2\"\n              fontWeight={600}\n              color={color.thirdColor}\n              sx={{\n                background: color.background,\n                px: 1,\n                borderRadius: \"4px\",\n                fontSize: \"14px\",\n                mb: 2,\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                gap: \"6px\",\n              }}\n            >\n              <Star></Star> {hotelData.rating} ({hotelData.reviews} reviews)\n            </Typography>\n          </Box>\n\n          <Box sx={{ maxWidth: { xs: \"100%\", md: \"calc(100% - 450px)\" } }}>\n            <Typography\n              color=\"textSecondary\"\n              sx={{\n                fontFamily: \"CustomFontB\",\n                fontSize: \"16px\",\n                color: color.paperColor,\n              }}\n            >\n              Property Description\n            </Typography>\n            <Typography\n              color=\"textSecondary\"\n              sx={{\n                fontSize: \"14px\",\n                mt: 1,\n                // textAlign:'justify'\n              }}\n            >\n              {expanded || hotelData.description.length <= maxLength\n                ? hotelData.description\n                : `${hotelData.description.substring(0, maxLength)}...`}\n              {hotelData.description.length > maxLength && (\n                <Button\n                  sx={{\n                    textTransform: \"none\",\n                    fontSize: \"14px\",\n                    p: 0,\n                    ml: 1,\n                    minWidth: 0,\n                  }}\n                  onClick={() => setExpanded(!expanded)}\n                >\n                  {expanded ? \"Show less\" : \"More\"}\n                </Button>\n              )}\n            </Typography>\n\n            <Typography\n              sx={{\n                fontFamily: \"CustomFontB\",\n                fontSize: \"16px\",\n                color: color.paperColor,\n                mt: 2,\n              }}\n            >\n              Highlights\n            </Typography>\n            <Box\n              sx={{\n                display: \"flex\",\n                gap: { xs: 2, md: 6 },\n                flexWrap: \"wrap\",\n                mt: 3,\n                p: 2,\n                px: 4,\n                pt: 3,\n                backgroundColor: \"rgba(93, 93, 93, 0.14)\",\n                justifyContent: \"space-around\",\n                borderRadius: \"12px\",\n                width: \"fit-content\",\n              }}\n            >\n              {hotelData.amenities.slice(0, 5).map((amenity, index) => (\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <Chip\n                    key={index}\n                    icon={\n                      <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                        {React.cloneElement(\n                          amenityIcons[amenity] || <AddCircleOutline />,\n                          {\n                            sx: {\n                              fontSize: { xs: 26, md: 34 },\n                              color: color.paperColor,\n                            },\n                          }\n                        )}\n                      </Box>\n                    }\n                    size=\"small\"\n                    sx={{ bgcolor: \"transparent\" }}\n                  />\n\n                  <Typography\n                    sx={{ fontSize: { xs: \"10px\", md: \"14px\" } }}\n                    mt={1.5}\n                  >\n                    {amenity}\n                  </Typography>\n                </div>\n              ))}\n            </Box>\n          </Box>\n\n          <Box\n            id=\"boxC\"\n            sx={{\n              ...BoxStyle,\n              minWidth: \"350px\",\n              maxWidth: \"350px\",\n              maxHeight: \"600px\",\n              pb: 3,\n              position: isSticky ? \"fixed\" : \"absolute\",\n              bottom: isSticky ? \"10px\" : \"-380px\",\n              right: isSticky ? \"72px\" : \"24px\",\n              zIndex: 100,\n              m: 0,\n              background: color.thirdColor,\n              transition: \"bottom 0.3s ease\",\n              overflow: \"hidden\",\n              overflowY: \"auto\",\n\n              ...(isSticky &&\n                window.scrollY >= stopPosition && {\n                position: \"absolute\",\n                bottom: \"85px\",\n              }),\n\n              // Stick to the bottom for screen sizes below 900px\n              \"@media (max-width: 900px)\": {\n                position: \"fixed\",\n                bottom: 0,\n                left: 0,\n                right: 0,\n                minWidth: \"unset\",\n                maxWidth: \"100%\",\n                borderRadius: \"10px 10px 0 0\",\n                p: 2,\n              },\n            }}\n          >\n            {isMobile && (\n              <Box\n                onClick={() => setShowDetails(!showDetails)}\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  // width: \"100vw\",\n                  p: 1,\n                  // mt: -2,\n                  m: -2,\n                  mb: showDetails ? -4 : 0,\n                  background: color.background,\n                  color: color.thirdColor,\n                }}\n              >\n                <Typography\n                  sx={{\n                    fontWeight: 600,\n                    fontSize: \"18px\",\n                  }}\n                >\n                  {showDetails ? \"Hide Details\" : \"Show Details\"}\n                </Typography>\n                {!showDetails ? <ExpandLess /> : <ExpandMore />}\n              </Box>\n            )}\n\n            {(showDetails || !isMobile) && (\n              <>\n                {!isMobile && (\n                  <Box\n                    sx={{\n                      position: \"absolute\",\n                      top: 0,\n                      left: 0,\n                      width: \"100%\",\n                      height: \"50px\",\n                      background: color.background,\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      gap: 4,\n                    }}\n                  >\n                    <Typography\n                      fontWeight={600}\n                      color={color.thirdColor}\n                      fontSize={\"20px\"}\n                    >\n                      Get Up to 20% Off{\" \"}\n                    </Typography>\n\n                    <Button\n                      sx={{\n                        textTransform: \"none\",\n                        background: color.background,\n                        color: color.thirdColor,\n                        border: \"solid 1px\",\n                        p: 0,\n                        px: 1,\n                      }}\n                    >\n                      Apply Coupon\n                    </Button>\n                  </Box>\n                )}\n\n                <Typography\n                  sx={{\n                    fontFamily: \"CustomFontB\",\n                    fontSize: \"16px\",\n                    color: color.paperColor,\n                    mt: \"50px\",\n                  }}\n                >\n                  Your Booking Summary\n                </Typography>\n\n                <Box\n                  sx={{\n                    mt: 2,\n                    border: \"solid 1px\",\n                    borderColor: color.forthColor,\n                    borderRadius: \"12px\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    textAlign: \"center\",\n                    boxShadow: \"0px -10px 20px rgba(0, 0, 0, 0.12) inset\",\n                  }}\n                >\n                  <Box\n                    p={2}\n                    sx={{\n                      width: \"50%\",\n                    }}\n                  >\n                    <Typography fontSize={\"14px\"} color={color.forthColor}>\n                      Check In Date\n                    </Typography>\n\n                    <Typography fontWeight={600}>28 Feb 2025</Typography>\n                  </Box>\n                  <Divider\n                    sx={{\n                      opacity: 1,\n                      borderWidth: \"1.5px\",\n                      borderColor: color.forthColor,\n                    }}\n                    orientation=\"vertical\"\n                    flexItem\n                  />\n                  <Box\n                    p={2}\n                    sx={{\n                      width: \"50%\",\n                    }}\n                  >\n                    <Typography fontSize={\"14px\"} color={color.forthColor}>\n                      Check In Time\n                    </Typography>\n\n                    <Typography fontWeight={600}>05:00 PM</Typography>\n                  </Box>\n                </Box>\n\n                <Box\n                  mt={2}\n                  p={2}\n                  sx={{\n                    border: \"solid 1px\",\n                    borderColor: color.forthColor,\n                    borderRadius: \"12px\",\n                    px: 4,\n                    textAlign: \"left\",\n                    boxShadow: \"0px -10px 20px rgba(0, 0, 0, 0.12) inset\",\n                  }}\n                >\n                  <Typography fontSize={\"14px\"} color={color.forthColor}>\n                    Rooms & Guest Details\n                  </Typography>\n\n                  <Typography fontWeight={600}>1 Room, 2 Guests</Typography>\n                </Box>\n\n                <Box\n                  mt={2}\n                  p={2}\n                  sx={{\n                    border: \"solid 1px\",\n                    borderColor: color.forthColor,\n                    borderRadius: \"12px\",\n                    px: 4,\n                    textAlign: \"left\",\n                    boxShadow: \"0px -10px 20px rgba(0, 0, 0, 0.12) inset\",\n                    pb: 3,\n                    fontFamily: \"CustomFontB\",\n                  }}\n                >\n                  <Typography fontSize={\"14px\"} color={color.forthColor} mb={1}>\n                    Selected Room Type\n                  </Typography>\n                  <FormControl component=\"fieldset\">\n                    <RadioGroup\n                      value={selectedRoom.id}\n                      onChange={(e) => {\n                        const room = hotelData.rooms.find(\n                          (r) => r.id === Number(e.target.value)\n                        );\n                        if (room) setSelectedRoom(room);\n                      }}\n                    >\n                      {selectedRoom && (\n                        <StyledLabel\n                          key={selectedRoom.id}\n                          value={selectedRoom.id}\n                          checked\n                          control={<CustomRadio />}\n                          label={\n                            <Typography sx={{ fontWeight: \"bold\" }}>\n                              {selectedRoom.name}\n                            </Typography>\n                          }\n                        />\n                      )}\n                    </RadioGroup>\n                  </FormControl>\n                </Box>\n\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-around\",\n                    gap: \"6px\",\n                    marginTop: \"20px\",\n                  }}\n                >\n                  {Object.keys(selectedRoom.price).map((slot) => (\n                    <StyledToggleButton\n                      key={slot}\n                      value={slot}\n                      selected={\n                        selectedSlot.roomId === selectedRoom.id &&\n                        selectedSlot.slot === slot\n                      }\n                      onClick={() => handleSlotSelection(selectedRoom.id, slot)}\n                      style={{ borderColor: color.forthColor }}\n                    >\n                      <Typography\n                        px={1}\n                        py={0.5}\n                        style={{\n                          fontSize: \"14px\",\n                          fontWeight: 600,\n                          lineHeight: 1,\n                        }}\n                      >\n                        ₹\n                        {\n                          selectedRoom.price[\n                          slot as keyof typeof selectedRoom.price\n                          ]\n                        }\n                        <br />\n                        <span style={{ fontSize: \"10px\" }}>{slot}</span>\n                      </Typography>\n                    </StyledToggleButton>\n                  ))}\n                </div>\n                <Divider\n                  sx={{ mt: 3, mb: 1, borderColor: color.forthColor }}\n                ></Divider>\n              </>\n            )}\n\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                gap: \"6px\",\n                mt: 0,\n                px: { xs: 1, md: 3 },\n              }}\n            >\n              <div>\n                <Typography fontSize={\"14px\"} color={color.forthColor} mt={1}>\n                  Total Price:\n                </Typography>\n                <Typography\n                  fontSize={\"24px\"}\n                  color={color.firstColor}\n                  fontWeight={\"bold\"}\n                >\n                  ₹\n                  {selectedSlot.roomId && selectedSlot.slot\n                    ? hotelData.rooms.find(\n                      (room) => room.id === selectedSlot.roomId\n                    )?.price[\n                    selectedSlot.slot as keyof typeof selectedRoom.price\n                    ]\n                    : 0}\n                  .00\n                </Typography>\n                <Typography fontSize={\"14px\"} color={color.forthColor}>\n                  + ₹ 827 taxes & fees\n                </Typography>\n              </div>\n\n              <CustomButton\n                customStyles={{\n                  height: \"fit-content\",\n                  fontSize: \"14px\",\n                  marginTop: \"4px\",\n                }}\n                // onClick={handleSearch}\n                onClick={openModal}\n                variant=\"contained\"\n              >\n                Book Now\n              </CustomButton>\n\n              <LoginOtpModal></LoginOtpModal>\n            </Box>\n          </Box>\n        </Box>\n\n        <Box sx={{ ...BoxStyle, px: { xs: 1, md: 4 } }}>\n          <Tabs\n            variant=\"scrollable\"\n            value={value}\n            onChange={(event, newValue) => setValue(newValue)}\n            sx={{\n              \"& .MuiTab-root\": {\n                textTransform: \"none\",\n                fontWeight: 600,\n                color: color.forthColor,\n                fontSize: \"1rem\",\n                p: 0,\n                minWidth: \"10px\",\n                mx: 1,\n                px: 0.5,\n              },\n              \"& .Mui-selected\": {\n                color: \"#000 !important\",\n                fontWeight: \"bold\",\n              },\n              \"& .MuiTabs-indicator\": {\n                backgroundColor: \"#000\",\n                height: 3,\n                borderRadius: \"4px\",\n              },\n            }}\n          >\n            <Tab label=\"Rooms\" />\n            <Tab label=\"Service & Amenities\" />\n            {/* <Tab label=\"Reviews\" /> */}\n            <Tab label=\"Policies\" />\n          </Tabs>\n\n          <TabPanel value={value} index={0}>\n            <Grid container spacing={2}>\n              {hotelData.rooms.map((room) => (\n                <Grid item xs={12} md={7} key={room.id}>\n                  <Card\n                    onClick={() => setSelectedRoom(room)}\n                    sx={{\n                      p: 2,\n                      display: \"flex\",\n                      flexDirection: { xs: \"column\", md: \"row\" },\n                      alignItems: \"flex-start\",\n                      background: color.thirdColor,\n                      borderRadius: \"12px\",\n                      boxShadow: \"0px 0px 20px rgba(0, 0, 0, 0.18)\",\n                      border: \"solid 2px\",\n                      borderColor:\n                        selectedRoom.id === room.id\n                          ? color.firstColor\n                          : \"transparent\",\n                      position: \"relative\",\n                      overflow: \"visible\",\n                    }}\n                  >\n                    {selectedRoom.id === room.id && (\n                      <CheckCircle\n                        sx={{\n                          position: \"absolute\",\n                          top: -10,\n                          right: -10,\n                          color: color.firstColor,\n                          background: color.thirdColor,\n                          borderRadius: \"50%\",\n                        }}\n                      ></CheckCircle>\n                    )}\n\n                    <Box sx={{ width: { xs: \"100%\", md: \"fit-content\" } }}>\n                      <CardMedia\n                        component=\"img\"\n                        height=\"160\"\n                        sx={{\n                          borderRadius: \"12px\",\n                          width: { xs: \"100%\", md: \"250px\" },\n                        }}\n                        image={room.image}\n                        alt={room.name}\n                      />\n\n                      <Typography\n                        variant=\"h6\"\n                        mt={1.5}\n                        fontWeight={\"bold\"}\n                        sx={{\n                          background:\n                            selectedRoom.id === room.id\n                              ? color.firstColor\n                              : \"transparent\",\n                          ml: -2,\n                          pl: 2,\n                          borderRadius: \"0px 4px 4px 0px\",\n                          color:\n                            selectedRoom.id === room.id\n                              ? color.thirdColor\n                              : color.firstColor,\n                          mb: selectedRoom.id === room.id ? 1 : 0,\n                          width: { xs: \"fit-content\", md: \"100%\" },\n                          pr: { xs: 2, md: 0 },\n                          mt: { xs: 2, md: 1 },\n                          transition: \"all 0.3s\",\n                        }}\n                      >\n                        {room.name}\n                      </Typography>\n                      <Typography variant=\"body2\">{room.size}</Typography>\n                    </Box>\n\n                    <List\n                      sx={{\n                        py: 0,\n                        mt: 1,\n                        width: \"100%\",\n                        pb: { xs: 0, md: \"80px\" },\n                      }}\n                    >\n                      <RoomAmenities key={room.id} room={room} />\n                    </List>\n\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"space-around\",\n                        gap: \"6px\",\n                        position: { xs: \"unset\", md: \"absolute\" },\n                        bottom: 16,\n                        right: 16,\n                        // width:'100%'\n                        margin: \"auto\",\n                        marginTop: \"20px\",\n                      }}\n                    >\n                      {Object.keys(room.price).map((slot) => (\n                        <StyledToggleButton\n                          key={slot}\n                          value={slot}\n                          selected={\n                            selectedSlot.roomId === room.id &&\n                            selectedSlot.slot === slot\n                          } // Ensures only one selection globally\n                          onClick={() => handleSlotSelection(room.id, slot)}\n                          style={{ borderColor: color.forthColor }}\n                        >\n                          <Typography\n                            px={1}\n                            py={0.5}\n                            sx={{\n                              fontSize: { xs: \"8px\", md: \"12px\" },\n                              lineHeight: 1.4,\n                            }}\n                          >\n                            <span style={{ fontSize: \"18px\", fontWeight: 600 }}>\n                              {slot}\n                            </span>\n                            <br />₹{\" \"}\n                            {room.price[slot as keyof typeof room.price]}\n                            <br />\n                            Incl. Taxes\n                          </Typography>\n                        </StyledToggleButton>\n                      ))}\n                    </Box>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <Typography>Services and amenities provided.</Typography>\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            <Typography>Customer reviews and ratings.</Typography>\n          </TabPanel>\n          {/* <TabPanel value={value} index={3}>\n        <Typography>Hotel policies and guidelines.</Typography>\n      </TabPanel> */}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default HotelDetails;\n\ninterface ImageGridProps {\n  images: string[];\n}\n\nconst ImageGrid: React.FC<ImageGridProps> = ({ images }) => {\n  const maxImages = Math.min(images.length, 7);\n  const displayImages = images.slice(0, maxImages);\n  const hasMore = images.length > 7;\n  const [open, setOpen] = useState(false);\n  const isMobile = useMediaQuery(\"(max-width: 900px)\");\n\n  return (\n    <Box\n      sx={{\n        display: { xs: \"block\", md: \"grid\" },\n        gap: { xs: 0, md: 1 },\n        width: \"100%\",\n        height: \"300px\",\n        gridTemplateColumns:\n          displayImages.length > 5 ? \"40% 20% 20% 20%\" : \"60% 20% 20%\",\n        gridTemplateRows: \"auto\",\n        \"& img\": {\n          width: \"100%\",\n          height: \"100%\",\n          objectFit: \"cover\",\n          borderRadius: \"8px\",\n        },\n        position: \"relative\",\n      }}\n    >\n      <Box\n        onClick={() => setOpen(true)}\n        sx={{\n          gridColumn: { xs: \"auto\", md: \"span 1\" },\n          gridRow: { xs: \"auto\", md: \"span 2\" },\n          height: \"300px\",\n          width: { xs: \"100%\", md: \"auto\" },\n          display: { xs: \"block\", md: \"grid\" },\n        }}\n      >\n        <img src={displayImages[0]} alt=\"Main\" />\n      </Box>\n\n      {!isMobile &&\n        displayImages.slice(1).map((src, index) => {\n          if (index % 2 === 0) {\n            return (\n              <Box\n                onClick={() => setOpen(true)}\n                key={index}\n                display=\"grid\"\n                sx={{\n                  gridTemplateRows: \"146px 146px\",\n                  height: \"300px\",\n                  gap: \"8px\",\n                }}\n              >\n                <img\n                  src={src}\n                  alt={`Image ${index + 2}`}\n                  style={{ height: \"100%\", width: \"100%\", objectFit: \"cover\" }}\n                />\n\n                {displayImages[index + 2] && (\n                  <img\n                    src={displayImages[index + 2]}\n                    alt={`Image ${index + 3}`}\n                    style={{\n                      height: \"100%\",\n                      width: \"100%\",\n                      objectFit: \"cover\",\n                    }}\n                  />\n                )}\n              </Box>\n            );\n          }\n          return null;\n        })}\n\n      {hasMore && (\n        <Box\n          sx={{\n            position: \"absolute\",\n            bottom: 10,\n            right: 10,\n            background: color.background,\n            color: \"white\",\n            borderRadius: \"8px\",\n            p: 1,\n            textAlign: \"center\",\n            cursor: \"pointer\",\n            boxShadow:\n              \"-4px -4px 10px rgba(32, 32, 32, 0.28) inset, 0px 0px 10px rgba(32, 32, 32, 0.28)\",\n          }}\n        >\n          <Typography variant=\"body2\">\n            + {isMobile ? images.length - 1 : images.length - 7} More\n          </Typography>\n        </Box>\n      )}\n\n      <Modal open={open} onClose={() => setOpen(false)}>\n        <Box\n          sx={{\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            width: \"80%\",\n            height: \"80%\",\n            bgcolor: \"white\",\n            boxShadow: 24,\n            p: 2,\n            overflowY: \"auto\",\n            borderRadius: \"8px\",\n          }}\n        >\n          <Typography variant=\"h6\" textAlign=\"center\" mb={2}>\n            All Images\n          </Typography>\n\n          <Close\n            onClick={() => setOpen(false)}\n            sx={{\n              position: \"absolute\",\n              top: 10,\n              right: 10,\n            }}\n          ></Close>\n          <Box\n            display=\"grid\"\n            gap={2}\n            sx={{\n              gridTemplateColumns: \"repeat(auto-fill, minmax(150px, 1fr))\",\n            }}\n          >\n            {images.map((img, index) => (\n              <img\n                key={index}\n                src={img}\n                alt={`Image ${index + 1}`}\n                style={{\n                  width: \"100%\",\n                  height: \"150px\",\n                  objectFit: \"cover\",\n                  borderRadius: \"8px\",\n                }}\n              />\n            ))}\n          </Box>\n        </Box>\n      </Modal>\n    </Box>\n  );\n};\n\nconst RoomAmenities = ({\n  room,\n}: {\n  room: { name: string; amenities: string[] };\n}) => {\n  const [showAll, setShowAll] = useState(false);\n  const displayedAmenities = showAll\n    ? room.amenities\n    : room.amenities.slice(0, 6);\n  const halfIndex = Math.ceil(displayedAmenities.length / 2);\n  const firstColumn = displayedAmenities.slice(0, halfIndex);\n  const secondColumn = displayedAmenities.slice(halfIndex);\n\n  return (\n    <>\n      <Box sx={{ mt: { xs: 1, md: 0 } }}>\n        <Grid container spacing={{ xs: 1, md: 0 }}>\n          {[firstColumn, secondColumn].map((column, colIndex) => (\n            <Grid item xs={6} md={12} key={colIndex}>\n              <List disablePadding>\n                {column.map((amenity, index) => {\n                  const isLastItem =\n                    colIndex === 1 &&\n                    index === column.length - 1 &&\n                    room.amenities.length > 6;\n\n                  return (\n                    <ListItem\n                      key={index}\n                      sx={{\n                        py: 0.2,\n                        px: { xs: 0, md: 2 },\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        flexWrap: \"wrap\",\n                      }}\n                    >\n                      <div\n                        style={{\n                          display: \"flex\",\n                          alignItems: \"flex-start\",\n                        }}\n                      >\n                        <ListItemIcon sx={{ minWidth: \"20px\", mt: 0.5 }}>\n                          <FiberManualRecord sx={{ fontSize: \"8px\" }} />\n                        </ListItemIcon>\n                        <ListItemText\n                          style={{ margin: 0 }}\n                          primary={amenity}\n                          primaryTypographyProps={{\n                            style: { fontSize: \"12px\" },\n                          }}\n                        />\n                      </div>\n\n                      {isLastItem && (\n                        <>\n                          <Button\n                            onClick={() => setShowAll(!showAll)}\n                            sx={{\n                              textTransform: \"none\",\n                              fontSize: \"14px\",\n                              ml: \"auto\",\n                              p: 0,\n                              color: color.firstColor,\n                              fontWeight: \"bold\",\n                            }}\n                          >\n                            {showAll ? \"Show Less\" : \"... Show All\"}\n                          </Button>\n                          {showAll ? <ExpandLess /> : <ExpandMore />}\n                        </>\n                      )}\n                    </ListItem>\n                  );\n                })}\n              </List>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n    </>\n  );\n};\n\nconst StyledToggleButton = styled(ToggleButton)(({ theme }) => ({\n  borderRadius: \"4px\",\n  textTransform: \"none\",\n  fontSize: \"12px\",\n  padding: \"0px 10px\",\n  fontWeight: 600,\n  border: \"1px solid rgba(61, 61, 61, 0.4)\",\n  \"&.Mui-selected\": {\n    background: color.background,\n    color: \"white\",\n  },\n}));\n\nconst TabPanel = ({\n  children,\n  value,\n  index,\n}: {\n  children: React.ReactNode;\n  value: number;\n  index: number;\n}) => {\n  return (\n    <div hidden={value !== index}>\n      {value === index && (\n        <Box p={1} mt={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n};\n","import { client } from \"./axiosClient\";\r\n\r\n\r\nexport function sendOTP(payLoad:any){\r\n    return client.post('/auth/send-otp', payLoad);\r\n}\r\n\r\nexport function verifyOTP(payLoad:any){\r\n    return client.post('/auth/verify-otp', payLoad);\r\n}\r\n\r\nexport function Signup(payLoad:any){\r\n    return client.post('/auth/create', payLoad);\r\n}\r\nexport function getPortfolioDetails(phoneNumber: any) {\r\n    return client.get(`/User/search-one-record`, { params: { phoneNumber } });\r\n};\r\n\r\nexport function verifyPayment (payload:any) {\r\n    return client.post(`/razorpay/verify`, payload);\r\n};\r\nexport function createOrder (payload:any) {\r\n    return client.post(`/razorpay/orders`, payload);\r\n  };\r\n  "],"names":["amenityIcons","_jsx","PoolIcon","fontSize","Gym","FitnessCenterIcon","WifiIcon","BeachAccessIcon","Breakfast","FreeBreakfastIcon","Parking","LocalParkingIcon","Spa","SpaIcon","Restaurant","LocalDiningIcon","AirportShuttleIcon","BusinessCenterIcon","PetsIcon","Bar","LocalBarIcon","RoomServiceIcon","TV","TvIcon","AcUnitIcon","LocalLaundryServiceIcon","ChildCareIcon","KingBedIcon","Casino","CasinoIcon","DirectionsCarIcon","NightlifeIcon","SportsTennisIcon","OutdoorGrillIcon","FireExtinguisherIcon","modalStyle","position","top","left","transform","maxWidth","width","height","background","color","thirdColor","borderRadius","LoginOtpModal","step","setStep","useState","phoneNumber","setPhoneNumber","countryCode","setCountryCode","sessionId","setSessionId","navigate","useNavigate","otp","setOtp","Array","fill","otpRefs","from","length","useRef","location","useLocation","isModalOpen","URLSearchParams","search","get","phoneFormik","useFormik","initialValues","phone","validationSchema","Yup","required","matches","onSubmit","values","sendOtp","async","console","log","slice","payLoad","sendOTP","then","res","_res$data","_res$data2","toast","data","msg","catch","error","Modal","open","onClose","handleClose","pathname","replace","children","Box","sx","handleSubmit","style","_jsxs","className","boxShadow","overflow","backgroundSize","xs","md","backgroundRepeat","backgroundPosition","Typography","variant","mb","textAlign","PhoneInput","country","value","onChange","setFieldValue","inputStyle","fontFamily","containerStyle","touched","errors","Button","type","firstColor","fontWeight","textTransform","m","mt","display","bottom","py","_Fragment","size","onClick","p","px","minWidth","ml","Edit","Grid","container","spacing","justifyContent","map","_","index","item","TextField","inputRef","e","handleOtpChange","test","newOtp","_otpRefs$current","current","focus","target","inputProps","maxLength","borderColor","bgcolor","border","outline","handleOtpSubmit","join","verifyOTP","_res$data3","_res$data3$data","_res$data4","_res$data4$data","_res$data5","setCurrentAccessToken","token","setCurrentUser","user","state","err","alert","hotelData","name","address","description","rating","reviews","amenities","images","rooms","id","price","image","HotelDetails","_hotelData$rooms$find","selectedRoom","setSelectedRoom","selectedSlot","setSelectedSlot","roomId","slot","handleSlotSelection","expanded","setExpanded","isSticky","setIsSticky","stopPosition","setStopPosition","useEffect","handleScroll","boxA","document","getElementById","boxB","boxC","boxBRect","getBoundingClientRect","boxARect","window","innerHeight","addEventListener","removeEventListener","setPosition","boxRef","observer","IntersectionObserver","_ref","entry","isIntersecting","threshold","observe","unobserve","setValue","showDetails","setShowDetails","isMobile","useMediaQuery","SearchSection","ref","BoxStyle","right","alignItems","gap","lineHeight","paperColor","pr","mx","ImageGrid","Star","substring","flexWrap","pt","backgroundColor","amenity","flexDirection","Chip","icon","React","AddCircleOutline","maxHeight","pb","zIndex","transition","overflowY","scrollY","ExpandMore","ExpandLess","forthColor","Divider","opacity","borderWidth","orientation","flexItem","FormControl","component","RadioGroup","room","find","r","Number","StyledLabel","checked","control","CustomRadio","label","marginTop","Object","keys","StyledToggleButton","selected","CustomButton","customStyles","openModal","Tabs","event","newValue","Tab","TabPanel","Card","CheckCircle","CardMedia","alt","pl","List","RoomAmenities","margin","_ref2","maxImages","Math","min","displayImages","hasMore","setOpen","gridTemplateColumns","gridTemplateRows","objectFit","gridColumn","gridRow","src","cursor","Close","img","_ref3","showAll","setShowAll","displayedAmenities","halfIndex","ceil","firstColumn","secondColumn","column","colIndex","disablePadding","isLastItem","ListItem","ListItemIcon","FiberManualRecord","ListItemText","primary","primaryTypographyProps","styled","ToggleButton","_ref4","theme","padding","_ref5","hidden","client","post","Signup","getPortfolioDetails","params","verifyPayment","payload","createOrder"],"sourceRoot":""}