{"version":3,"file":"static/js/905.6922e48d.chunk.js","mappings":"kgBAMA,MAyFA,EAzFqBA,IAAgC,IAA/B,QAAEC,EAAO,QAAEC,GAAcF,EAC7CG,QAAQC,IAAIH,GACZ,MAAOI,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,KAIjDC,EAAAA,EAAAA,YAAU,MACRC,EAAAA,EAAAA,IAASP,GAASQ,MAAMC,IAAS,IAADC,EAAAC,EAC9BP,EAAmB,OAAHK,QAAG,IAAHA,GAAS,QAANC,EAAHD,EAAKG,YAAI,IAAAF,GAAM,QAANC,EAATD,EAAWE,YAAI,IAAAD,OAAZ,EAAHA,EAAiBE,cAAc,GAE/C,GACD,CAACb,IAcJ,OAAqB,OAAjBG,GACKW,EAAAA,EAAAA,KAAA,KAAAC,SAAG,gBAIVC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,EAAGC,WAAYC,EAAAA,EAAMC,WAAYC,UAAW,mCAAoCC,aAAc,QAAST,SAAA,EACzHC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACQ,QAAQ,OAAOC,eAAe,gBAAgBC,WAAW,SAASC,GAAI,EAAEb,SAAA,EAC3EC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACC,QAAQ,KAAKC,WAAW,OAAMhB,SAAC,iBAC3CD,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACC,QAAQ,QAAQT,MAAM,OAAMN,SAAC,uCAE3CD,EAAAA,EAAAA,KAACkB,EAAAA,EAAW,CAACd,GAAI,CAAEe,MAAO,cAAeZ,MAAOA,EAAAA,EAAMa,YAAanB,UACjED,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CACLL,QAAQ,YACRT,MAAwB,cAAjBlB,EAA+B,UAAY,QAClDiC,QA1BiBC,KACzB,MAAMC,EAA6B,cAAjBnC,EAA+B,cAAgB,YACjEC,EAAgBkC,IAGhBC,EAAAA,EAAAA,IAAUvC,EAAS,CAAEa,cAAeyB,IACjC9B,MAAK,IAAMP,QAAQC,IAAI,0BACvBsC,OAAOC,GAAQxC,QAAQyC,MAAM,+BAAgCD,IAAK,EAmBjC1B,SAEV,cAAjBZ,EAA+B,YAAc,sBAKpDW,EAAAA,EAAAA,KAAC6B,EAAAA,EAAc,CAACC,UAAWC,EAAAA,EAAO3B,GAAI,CAAE4B,UAAW,EAAGvB,UAAW,QAASR,UACxEC,EAAAA,EAAAA,MAAC+B,EAAAA,EAAK,CAACC,MAAO,CAAE5B,WAAYC,EAAAA,EAAMC,YAAaP,SAAA,EAC7CD,EAAAA,EAAAA,KAACmC,EAAAA,EAAS,CAAAlC,UACRD,EAAAA,EAAAA,KAACoC,EAAAA,EAAQ,CAAAnC,SACN,CAAC,aAAc,aAAc,kBAAmB,kBAAmB,mBAAoB,mBAAoB,SAAU,IAAIoC,KAAKC,IAC7HtC,EAAAA,EAAAA,KAACuC,EAAAA,EAAS,CAAcnC,GAAI,CAAEa,WAAY,OAAQV,MAAO,OAAQiC,SAAU,OAAQC,WAAY,UAAWxC,SACvGqC,GADaA,UAMtBtC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAS,CAAAzC,SACPhB,EAAQoD,KAAKpD,IACZiB,EAAAA,EAAAA,MAACkC,EAAAA,EAAQ,CAACF,MAAO,CAAES,OAAQ,YAAalC,UAAW,QAASR,SAAA,EAC1DD,EAAAA,EAAAA,KAACuC,EAAAA,EAAS,CAAAtC,SAAEhB,EAAQ2D,MACpB5C,EAAAA,EAAAA,KAACuC,EAAAA,EAAS,CAAAtC,UACRC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACQ,QAAQ,OAAOE,WAAW,SAASgC,IAAK,EAAE5C,SAAA,EAC7CD,EAAAA,EAAAA,KAAC8C,EAAAA,EAAM,CAACC,IAAK9D,EAAQ+D,OAAQC,IAAY,OAAPhE,QAAO,IAAPA,OAAO,EAAPA,EAASiE,aAC3ClD,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAAAd,SAAS,OAAPhB,QAAO,IAAPA,OAAO,EAAPA,EAASiE,kBAI1BlD,EAAAA,EAAAA,KAACuC,EAAAA,EAAS,CAAAtC,SAAEhB,EAAQkE,eACpBnD,EAAAA,EAAAA,KAACuC,EAAAA,EAAS,CAAAtC,SAAEhB,EAAQmE,eAEpBpD,EAAAA,EAAAA,KAACuC,EAAAA,EAAS,CAAAtC,SAAEhB,EAAQoE,gBACpBrD,EAAAA,EAAAA,KAACuC,EAAAA,EAAS,CAAAtC,SAAEhB,EAAQqE,gBACpBtD,EAAAA,EAAAA,KAACuC,EAAAA,EAAS,CAAAtC,UACRD,EAAAA,EAAAA,KAACuD,EAAAA,EAAI,CACHC,MAAOvE,EAAQwE,OACfrD,GAAI,CAAEsD,gBAAiBzE,EAAQ0E,YAAapD,MAAO,OAAQU,WAAY,cAjBXhC,EAAQ2D,eAyB9E,EC3DJgB,EAwBG,CACL,CACEhB,GAAI,EACJiB,aAAc,qBACdC,KAAM,kCACNC,MAAO,CACL,QAAS,KACT,QAAS,KACT,SAAU,MAEZC,UAAW,CACT,qBACA,YACA,uBACA,yBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBAEFC,MAAO,4BAET,CACErB,GAAI,EACJiB,aAAc,uBACdC,KAAM,iCACNC,MAAO,CACL,QAAS,KACT,QAAS,KACT,SAAU,MAEZC,UAAW,CACT,qBACA,WACA,uBACA,kBACA,oBAEFC,MAAO,4BAET,CACErB,GAAI,EACJiB,aAAc,uBACdC,KAAM,iCACNC,MAAO,CACL,QAAS,KACT,QAAS,KACT,SAAU,MAEZC,UAAW,CACT,qBACA,WACA,uBACA,kBACA,oBAEFC,MAAO,6BAkcb,EA7buBC,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAC3B,MAAOC,EAAcC,IAAmBjF,EAAAA,EAAAA,UAASqE,EAAgB,IAC3Da,GAAWC,EAAAA,EAAAA,GAAcC,EAAAA,EAAMC,YAAYC,KAAK,QAChD,GAAEjC,IAAOkC,EAAAA,EAAAA,MAER7F,EAAS8F,IAAcxF,EAAAA,EAAAA,UAAgB,KAE9CC,EAAAA,EAAAA,YAAU,KACR,MAAMwF,EAAQ,IAAIC,KACZC,EAAa,IAAID,KACvBC,EAAWC,QAAQH,EAAMI,UAAY,KAErCC,EAAAA,EAAAA,IAAwB,CACtBvF,KAAM,CAAEwF,OAAQ,IAChBC,KAAM,EACNC,SAAU,GACVC,MAAO,CAAC,CAAC,YAAa,UACrB/F,MAAMC,IAAS,IAADC,EAAAC,EACf,MAGM6F,IAHiB,OAAH/F,QAAG,IAAHA,GAAS,QAANC,EAAHD,EAAKG,YAAI,IAAAF,GAAM,QAANC,EAATD,EAAWE,YAAI,IAAAD,OAAZ,EAAHA,EAAiB8F,OAAQ,IAGRL,QAAQrG,IAC3C,MAAMkE,EAAc,IAAI8B,KAAKhG,EAAQkE,aACrC,OAAOA,GAAe6B,GAAS7B,GAAe+B,CAAU,IAG1DH,EAAWW,EAAiB,GAC5B,GACD,IAEH,MAAOE,EAAUC,IAAetG,EAAAA,EAAAA,WAAS,GACnCuG,EAAYrB,EAAW,IAAM,KAE5BsB,EAAOC,IAAYzG,EAAAA,EAAAA,UAAS,GAE7B0G,GAAWC,EAAAA,EAAAA,OACVC,EAAYC,IAAiB7G,EAAAA,EAAAA,UAAc,KAE3C8G,EAAUC,IAAe/G,EAAAA,EAAAA,UAAc,IAsB9C,OAnBAC,EAAAA,EAAAA,YAAU,MACR+G,EAAAA,EAAAA,IAA4B,CAC1B3D,GAAIA,EACJ4D,YAAa,SACZ9G,MAAMC,IAAS,IAAD8G,EAAAC,EAAAC,EAAAC,EAAAC,EACfT,EAAiB,OAAHzG,QAAG,IAAHA,GAAS,QAAN8G,EAAH9G,EAAKG,YAAI,IAAA2G,OAAN,EAAHA,EAAW3G,KAAK,IAC9BwG,EAAe,OAAH3G,QAAG,IAAHA,GAAS,QAAN+G,EAAH/G,EAAKG,YAAI,IAAA4G,GAAS,QAATC,EAATD,EAAW5G,KAAK,UAAE,IAAA6G,OAAf,EAAHA,EAAoBG,MAAM,IACtC,MAAMA,EAAW,OAAHnH,QAAG,IAAHA,GAAS,QAANiH,EAAHjH,EAAKG,YAAI,IAAA8G,GAAS,QAATC,EAATD,EAAW9G,KAAK,UAAE,IAAA+G,OAAf,EAAHA,EAAoBC,MAC9BA,EAAMC,OAAS,GACjBvC,EAAgBsC,EAAM,GACxB,IACCpF,OAAOC,IACRxC,QAAQC,IAAIuC,EAAI,GAChB,GACD,IAEHxC,QAAQC,IAAImF,IAIVvE,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CACFC,GAAI,CACFE,WAAYC,EAAAA,EAAMC,WAClBwG,GAAI,EACJC,SAAU,YACVhH,UAEFC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,GAAI,CACF4G,GAAI,CAAEE,GAAI,EAAGC,GAAI,IACjBlH,SAAA,EAEFC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,GAAI,IACCgH,EAAAA,GACHJ,GAAI,CAAEE,GAAI,EAAGC,GAAI,GACjBE,GAAI,EACJJ,SAAU,YACVhH,SAAA,EAEFD,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CACFC,GAAI,CACF6G,SAAU,WACVK,IAAK,GACLC,MAAO,GACP5G,QAAS,CAAEuG,GAAI,OAAQC,GAAI,QAC3BvG,eAAgB,SAChBC,WAAY,SACZgC,IAAK,OACL5C,UAEFD,EAAAA,EAAAA,KAACwH,EAAAA,EAAY,CACXC,aAAc,CACZjF,SAAU,QAEZxB,QAAQ,YACR0G,WAAW1H,EAAAA,EAAAA,KAAC2H,EAAAA,EAAI,IAChBrG,QAASA,KACP2E,EAAS,yBAA0B,CAAE2B,MAAOhF,GAAK,EACjD3C,SACH,kBAKHD,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACTC,QAAQ,KACRZ,GAAI,CACFoC,SAAU,CAAE0E,GAAI,OAAQC,GAAI,QAC5BlG,WAAY,IACZV,MAAOA,EAAAA,EAAMa,YACbnB,SAES,OAAVkG,QAAU,IAAVA,OAAU,EAAVA,EAAYtC,gBAEf7D,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACTR,MAAM,gBACNH,GAAI,CACFyH,WAAY,eACZrF,SAAU,CAAE0E,GAAI,OAAQC,GAAI,QAC5B5G,MAAOA,EAAAA,EAAMuH,WACbC,GAAI,CAAEb,GAAI,EAAGC,GAAI,IACjBlH,SAES,OAAVkG,QAAU,IAAVA,OAAU,EAAVA,EAAY6B,WAGfhI,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACkH,GAAI,EAAGjH,GAAI,CAAE6H,GAAI,CAAEf,GAAI,EAAGC,GAAI,GAAKe,IAAK,GAAIjI,UAC/CD,EAAAA,EAAAA,KAACmI,EAAAA,GAAS,CAACC,eAAgBjC,EAAWiC,gBAAkB,QAG1DpI,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CACFC,GAAI,CACFO,QAAS,CAAEuG,GAAI,OAAQC,GAAI,SAC3BlH,UAEFD,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACTC,QAAQ,QACRC,WAAY,IACZV,MAAOA,EAAAA,EAAMC,WACbJ,GAAI,CACFE,WAAYC,EAAAA,EAAMD,WAClB0G,GAAI,EACJtG,aAAc,MACd8B,SAAU,OACV1B,GAAI,EACJH,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZgC,IAAK,OACL5C,UAEFD,EAAAA,EAAAA,KAACqI,EAAAA,EAAI,SAKTnI,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEkI,SAAU,QAASrI,SAAA,EAC5BD,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACTR,MAAM,gBACNH,GAAI,CACFyH,WAAY,cACZrF,SAAU,OACVjC,MAAOA,EAAAA,EAAMuH,YACb7H,SACH,0BAGDC,EAAAA,EAAAA,MAACa,EAAAA,EAAU,CACTR,MAAM,gBACNH,GAAI,CACFoC,SAAU,OACVuF,GAAI,GACJ9H,SAAA,CAED2F,IAAsB,OAAVO,QAAU,IAAVA,GAAwB,QAAdhC,EAAVgC,EAAYoC,oBAAY,IAAApE,OAAd,EAAVA,EAA0B4C,SAAUjB,EACnC,OAAVK,QAAU,IAAVA,OAAU,EAAVA,EAAYoC,aACZ,GAAa,OAAVpC,QAAU,IAAVA,GAAwB,QAAd/B,EAAV+B,EAAYoC,oBAAY,IAAAnE,OAAd,EAAVA,EAA0BoE,UAAU,EAAG1C,SACnC,OAAVK,QAAU,IAAVA,GAAwB,QAAd9B,EAAV8B,EAAYoC,oBAAY,IAAAlE,OAAd,EAAVA,EAA0B0C,QAASjB,IAClC9F,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CACLjB,GAAI,CACFqI,cAAe,OACfjG,SAAU,OACVkG,EAAG,EACHC,GAAI,EACJC,SAAU,GAEZtH,QAASA,IAAMuE,GAAaD,GAAU3F,SAErC2F,EAAW,YAAc,aAKhC5F,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACTX,GAAI,CACFyH,WAAY,cACZrF,SAAU,OACVjC,MAAOA,EAAAA,EAAMuH,WACbC,GAAI,GACJ9H,SACH,gBAGDD,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CACFC,GAAI,CACFO,QAAS,OACTkC,IAAK,CAAEqE,GAAI,EAAGC,GAAI,GAClB0B,SAAU,OACVd,GAAI,EACJW,EAAG,EACH1B,GAAI,EACJ8B,GAAI,EACJpF,gBAAiB,yBACjB9C,eAAgB,eAChBF,aAAc,OACdS,MAAO,eACPlB,SAEO,OAARoG,QAAQ,IAARA,GAAmB,QAAX/B,EAAR+B,EAAUrC,iBAAS,IAAAM,OAAX,EAARA,EAAqByE,MAAM,EAAG,GAAG1G,KAAI,CAAC2G,EAAcC,KACnD/I,EAAAA,EAAAA,MAAA,OACEgC,MAAO,CACLvB,QAAS,OACTuI,cAAe,SACfrI,WAAY,SACZD,eAAgB,UAChBX,SAAA,EAEFD,EAAAA,EAAAA,KAACuD,EAAAA,EAAI,CAEH4F,MACEnJ,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACC,GAAI,CAAEO,QAAS,OAAQE,WAAY,UAAWZ,SAChDmJ,EAAAA,aACCC,EAAAA,GAAaL,KAAYhJ,EAAAA,EAAAA,KAACsJ,EAAAA,EAAgB,IAC1C,CACElJ,GAAI,CACFoC,SAAU,CAAE0E,GAAI,GAAIC,GAAI,IACxB5G,MAAOA,EAAAA,EAAMuH,gBAMvBhE,KAAK,QACL1D,GAAI,CAAEmJ,QAAS,gBAfVN,IAkBPjJ,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACTX,GAAI,CAAEoC,SAAU,CAAE0E,GAAI,OAAQC,GAAI,SAClCY,GAAI,IAAI9H,SAEP+I,kBAQb9I,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,IAAKgH,EAAAA,GAAUJ,GAAI,CAAEE,GAAI,EAAGC,GAAI,IAAMlH,SAAA,EAC7CC,EAAAA,EAAAA,MAACsJ,EAAAA,EAAI,CACHxI,QAAQ,aACR+E,MAAOA,EACP0D,SAAUA,CAACC,EAAOC,IAAa3D,EAAS2D,GACxCvJ,GAAI,CACF,iBAAkB,CAChBqI,cAAe,OACfxH,WAAY,IACZV,MAAOA,EAAAA,EAAMqJ,WACbpH,SAAU,OACVkG,EAAG,EACHE,SAAU,OACVV,GAAI,EACJlB,GAAI,IAEN,kBAAmB,CACjBzG,MAAO,kBACPU,WAAY,QAEd,uBAAwB,CACtByC,gBAAiB,OACjBmG,OAAQ,EACRnJ,aAAc,QAEhBT,SAAA,EAEFD,EAAAA,EAAAA,KAAC8J,EAAAA,EAAG,CAACtG,MAAM,WACXxD,EAAAA,EAAAA,KAAC8J,EAAAA,EAAG,CAACtG,MAAM,yBAEXxD,EAAAA,EAAAA,KAAC8J,EAAAA,EAAG,CAACtG,MAAM,iBAGbxD,EAAAA,EAAAA,KAAC+J,EAAQ,CAAChE,MAAOA,EAAOkD,MAAO,EAAEhJ,UAC/BD,EAAAA,EAAAA,KAACgK,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEjK,SACxBkK,MAAMC,QAAQ/D,IAAaA,EAAShE,KAAKgI,IACxCrK,EAAAA,EAAAA,KAACgK,EAAAA,GAAI,CAACM,MAAI,EAACpD,GAAI,GAAIC,GAAI,EAAElH,UACvBC,EAAAA,EAAAA,MAACqK,EAAAA,EAAI,CACHjJ,QAASA,IAAMkD,EAAgB6F,GAC/BjK,GAAI,CACFsI,EAAG,EACH/H,QAAS,OACTuI,cAAe,CAAEhC,GAAI,SAAUC,GAAI,UACnCtG,WAAY,aACZP,WAAYC,EAAAA,EAAMC,WAClBE,aAAc,OACdD,UAAW,mCACXkC,OAAQ,YACR6H,YACEjG,EAAa3B,KAAOyH,EAAKzH,GACrBrC,EAAAA,EAAMa,WACN,cACN6F,SAAU,WACVwD,SAAU,WACVxK,SAAA,CAEDsE,EAAa3B,KAAOyH,EAAKzH,KACxB5C,EAAAA,EAAAA,KAAC0K,EAAAA,EAAW,CACVtK,GAAI,CACF6G,SAAU,WACVK,KAAM,GACNC,OAAQ,GACRhH,MAAOA,EAAAA,EAAMa,WACbd,WAAYC,EAAAA,EAAMC,WAClBE,aAAc,UAKpBR,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEe,MAAO,CAAE+F,GAAI,OAAQC,GAAI,SAAWlH,SAAA,EAC7CD,EAAAA,EAAAA,KAAC2K,EAAAA,EAAS,CACR7I,UAAU,MACV+H,OAAO,MACPzJ,GAAI,CACFM,aAAc,OACdS,MAAO,CAAE+F,GAAI,OAAQC,GAAI,SAE3BlD,MAAW,OAAJoG,QAAI,IAAJA,OAAI,EAAJA,EAAMpG,MACbhB,IAAS,OAAJoH,QAAI,IAAJA,OAAI,EAAJA,EAAMO,gBAGb5K,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACTC,QAAQ,KACR+G,GAAI,IACJ9G,WAAY,OACZb,GAAI,CACFE,WACEiE,EAAa3B,KAAOyH,EAAKzH,GACrBrC,EAAAA,EAAMa,WACN,cACNuH,IAAK,EACLkC,GAAI,EACJnK,aAAc,kBACdH,MACEgE,EAAa3B,KAAOyH,EAAKzH,GACrBrC,EAAAA,EAAMC,WACND,EAAAA,EAAMa,WACZN,GAAIyD,EAAa3B,KAAOyH,EAAKzH,GAAK,EAAI,EACtCzB,MAAO,CAAE+F,GAAI,cAAeC,GAAI,eAChCc,GAAI,CAAEf,GAAI,EAAGC,GAAI,GACjBY,GAAI,CAAEb,GAAI,EAAGC,GAAI,GACjB2D,WAAY,YACZ7K,SAEDoK,EAAKxG,gBAER7D,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACC,QAAQ,QAAOf,SAAEoK,EAAKvG,WAGpC9D,EAAAA,EAAAA,KAAC+K,EAAAA,EAAI,CACH3K,GAAI,CACFiH,GAAI,EACJU,GAAI,EACJ5G,MAAO,OACP6J,GAAI,CAAE9D,GAAI,EAAGC,GAAI,QACjBlH,UAEFD,EAAAA,EAAAA,KAACiL,EAAAA,GAAa,CAAeZ,KAAMA,GAAfA,EAAKzH,OAG3B5C,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CACFC,GAAI,CACFO,QAAS,OACTkI,SAAU,OACVhI,WAAY,SACZD,eAAgB,eAChBiC,IAAK,OACLoE,SAAU,CAAEC,GAAI,QAASC,GAAI,SAC7B+D,OAAQ,GACR3D,MAAO,GAEP4D,OAAQ,OACRnJ,UAAW,QACX/B,SAEDmL,OAAOC,KAAKhB,EAAKtG,OAAO1B,KAAKiJ,IAC5BtL,EAAAA,EAAAA,KAACuL,EAAkB,CAEjBxF,MAAOuF,EACPpJ,MAAO,CAAEsI,YAAajK,EAAAA,EAAMqJ,YAAa3J,UAEzCC,EAAAA,EAAAA,MAACa,EAAAA,EAAU,CACTiG,GAAI,EACJK,GAAI,GACJjH,GAAI,CACFoC,SAAU,CAAE0E,GAAI,MAAOC,GAAI,OAC3BqE,WAAY,KACZvL,SAAA,EAEFD,EAAAA,EAAAA,KAAA,QAAMkC,MAAO,CAAEM,SAAU,OAAQvB,WAAY,KAAMhB,SAChDqL,KAEHtL,EAAAA,EAAAA,KAAA,SAAM,SAAE,IACPqK,EAAKtG,MAAMuH,IACZtL,EAAAA,EAAAA,KAAA,SAAM,kBAjBHsL,WArGgBjB,EAAKzH,WAiI1C5C,EAAAA,EAAAA,KAAC+J,EAAQ,CAAChE,MAAOA,EAAOkD,MAAO,EAAEhJ,UAC/BD,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAAAd,SAAC,wCAEdD,EAAAA,EAAAA,KAAC+J,EAAQ,CAAChE,MAAOA,EAAOkD,MAAO,EAAEhJ,UAC/BD,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAAAd,SAAC,wCAMhBD,EAAAA,EAAAA,KAACgK,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGnC,GAAI,EAAE9H,UAChCD,EAAAA,EAAAA,KAACgK,EAAAA,GAAI,CAACM,MAAI,EAACpD,GAAI,GAAIC,GAAI,GAAGlH,UACxBD,EAAAA,EAAAA,KAACyL,EAAY,CAACxM,QAASA,EAASC,QAAS0D,YAI3C,EAMJ2I,GAAqBG,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAqB1M,IAAA,IAAC,MAAE2F,GAAO3F,EAAA,MAAM,CAC9D0B,aAAc,MACd+H,cAAe,OACfjG,SAAU,OACVnC,QAAS,WACTY,WAAY,IACZ0B,OAAQ,kCACR,iBAAkB,CAChBrC,WAAYC,EAAAA,EAAMD,WAClBC,MAAO,SAEV,IAEKwJ,EAAW6B,IAQV,IARW,SAChB3L,EAAQ,MACR8F,EAAK,MACLkD,GAKD2C,EACC,OACE5L,EAAAA,EAAAA,KAAA,OAAK6L,OAAQ9F,IAAUkD,EAAMhJ,SAC1B8F,IAAUkD,IACTjJ,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACuI,EAAG,EAAGX,GAAI,EAAE9H,UACfD,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAAAd,SAAEA,OAGb,C,uUClkBH,MAAMoJ,EAA+C,CAC1D,iBAAiBrJ,EAAAA,EAAAA,KAAC8L,EAAAA,EAAQ,CAACtJ,SAAS,UACpCuJ,KAAK/L,EAAAA,EAAAA,KAACgM,EAAAA,EAAiB,CAACxJ,SAAS,UACjC,aAAaxC,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACzJ,SAAS,UAChC,iBAAiBxC,EAAAA,EAAAA,KAACkM,EAAAA,EAAe,CAAC1J,SAAS,UAC3C2J,WAAWnM,EAAAA,EAAAA,KAACoM,EAAAA,EAAiB,CAAC5J,SAAS,UACvC6J,SAASrM,EAAAA,EAAAA,KAACsM,EAAAA,EAAgB,CAAC9J,SAAS,UACpC+J,KAAKvM,EAAAA,EAAAA,KAACwM,EAAAA,EAAO,CAAChK,SAAS,UACvBiK,YAAYzM,EAAAA,EAAAA,KAAC0M,EAAAA,EAAe,CAAClK,SAAS,UACtC,mBAAmBxC,EAAAA,EAAAA,KAAC2M,EAAAA,EAAkB,CAACnK,SAAS,UAChD,mBAAmBxC,EAAAA,EAAAA,KAAC4M,EAAAA,EAAkB,CAACpK,SAAS,UAChD,gBAAgBxC,EAAAA,EAAAA,KAAC6M,EAAAA,EAAQ,CAACrK,SAAS,UACnCsK,KAAK9M,EAAAA,EAAAA,KAAC+M,EAAAA,EAAY,CAACvK,SAAS,UAC5B,gBAAgBxC,EAAAA,EAAAA,KAACgN,EAAAA,EAAe,CAACxK,SAAS,UAC1CyK,IAAIjN,EAAAA,EAAAA,KAACkN,EAAAA,EAAM,CAAC1K,SAAS,UACrB,oBAAoBxC,EAAAA,EAAAA,KAACmN,EAAAA,EAAU,CAAC3K,SAAS,UACzC,mBAAmBxC,EAAAA,EAAAA,KAACoN,EAAAA,EAAuB,CAAC5K,SAAS,UACrD,cAAcxC,EAAAA,EAAAA,KAACqN,EAAAA,EAAa,CAAC7K,SAAS,UACtC,YAAYxC,EAAAA,EAAAA,KAACsN,EAAAA,EAAW,CAAC9K,SAAS,UAClC+K,QAAQvN,EAAAA,EAAAA,KAACwN,EAAAA,EAAU,CAAChL,SAAS,UAC7B,cAAcxC,EAAAA,EAAAA,KAACyN,EAAAA,EAAiB,CAACjL,SAAS,UAC1C,cAAcxC,EAAAA,EAAAA,KAAC0N,EAAAA,EAAa,CAAClL,SAAS,UACtC,gBAAgBxC,EAAAA,EAAAA,KAAC2N,EAAAA,EAAgB,CAACnL,SAAS,UAC3C,kBAAkBxC,EAAAA,EAAAA,KAAC4N,EAAAA,EAAgB,CAACpL,SAAS,UAC7C,eAAexC,EAAAA,EAAAA,KAAC6N,EAAAA,EAAoB,CAACrL,SAAS,WAInCsL,EAAmB,CAC9B,gBACA,MACA,YACA,gBACA,YACA,UACA,MACA,aACA,kBACA,kBACA,eACA,MACA,eACA,KACA,mBACA,kBACA,aACA,WACA,SACA,aACA,aACA,eACA,iBACA,eAIWC,EAAY,CACvB,CAAEhI,MAAO,cAAevC,MAAO,cAAewK,QAAS,6DACvD,CAAEjI,MAAO,cAAevC,MAAO,cAAewK,QAAS,wEACvD,CAAEjI,MAAO,cAAevC,MAAO,cAAewK,QAAS,uEACvD,CAAEjI,MAAO,iBAAkBvC,MAAO,iBAAkBwK,QAAS,yEAC7D,CAAEjI,MAAO,YAAavC,MAAO,YAAawK,QAAS,2EACnD,CAAEjI,MAAO,aAAcvC,MAAO,aAAcwK,QAAS,0FACrD,CAAEjI,MAAO,qBAAsBvC,MAAO,qBAAsBwK,QAAS,iEACrE,CAAEjI,MAAO,cAAevC,MAAO,cAAewK,QAAS,yEACvD,CAAEjI,MAAO,gBAAiBvC,MAAO,gBAAiBwK,QAAS,wEAC3D,CAAEjI,MAAO,gBAAiBvC,MAAO,gBAAiBwK,QAAS,oFAC3D,CAAEjI,MAAO,iBAAkBvC,MAAO,iBAAkBwK,QAAS,+DAC7D,CAAEjI,MAAO,iBAAkBvC,MAAO,iBAAkBwK,QAAS,sEAC7D,CAAEjI,MAAO,mBAAoBvC,MAAO,mBAAoBwK,QAAS,uEACjE,CAAEjI,MAAO,qBAAsBvC,MAAO,qBAAsBwK,QAAS,yD,0ZCvEhE,MAAM5G,EAAW,CACtBsB,EAAG,EACH1B,GAAI,EACJvG,UAAW,mCACXC,aAAc,OACduN,GAAI,GAGC,SAASC,EAAQC,GACtB,OACEnO,EAAAA,EAAAA,KAACoO,EAAAA,EAAK,CACJlM,MAAO,CAAE7B,QAAS,OAClBgO,eAAa,EACb9N,MAAM,UACN+N,aAAatO,EAAAA,EAAAA,KAACuO,EAAa,IAC3BpF,MAAMnJ,EAAAA,EAAAA,KAACwO,EAAM,OACTL,GAGV,CAEO,MAAMK,GAAS9C,EAAAA,EAAAA,IAAO,OAAPA,EAAe1M,IAAA,IAAC,MAAE2F,GAAO3F,EAAA,MAAM,CACnD0B,aAAc,MACdS,MAAO,GACP0I,OAAQ,GACRpJ,UACE,sEACFiD,gBAAiB,UACjB+K,gBACE,+DACF,sBAAuB,CACrBC,QAAS,kCACTC,cAAe,GAEjB,kBAAmB,CACjBjL,gBAAiB,aACdiB,EAAMiK,YAAY,OAAQ,CAC3BlL,gBAAiB,aAGrB,qBAAsB,CACpBjD,UAAW,OACXH,WAAY,0BACTqE,EAAMiK,YAAY,OAAQ,CAC3BtO,WAAY,0BAGbqE,EAAMiK,YAAY,OAAQ,CAC3BnO,UAAW,gCACXiD,gBAAiB,UACjB+K,gBACE,kEAEL,IAEYF,GAAgB7C,EAAAA,EAAAA,IAAO8C,EAAP9C,CAAe,CAC1ChI,gBAAiBnD,EAAAA,EAAMsO,YACvBJ,gBACE,+DACF,YAAa,CACX9N,QAAS,QACTQ,MAAO,GACP0I,OAAQ,GACR4E,gBAAiB,iDACjBK,QAAS,MAEX,kBAAmB,CACjBpL,gBAAiBnD,EAAAA,EAAMsO,eAIdE,GAAcrD,EAAAA,EAAAA,IAAOsD,EAAAA,EAAPtD,EACzBE,IAAA,IAAC,MAAEjH,EAAK,QAAEsK,GAA6CrD,EAAA,MAAM,CAC3DrL,MAAO0O,EAAU1O,EAAAA,EAAMC,WAAaD,EAAAA,EAAMa,WAC1Cd,WAAY2O,EACR1O,EAAAA,EAAMa,WACN,cACJV,aAAc,mBACdC,QAAS,OACTE,WAAY,SACZiK,WAAY,OACZoE,YAAaD,EAAU,OAAS,OAChCE,WAAYF,EAAU,QAAU,QAChCG,aAAc,OACd5M,SAAUyM,EAAU,OAAS,UAC9B,IAGUI,GAAc3D,EAAAA,EAAAA,IAAO0C,EAAAA,EAAP1C,CAAc,CACvCnL,MAAOA,EAAAA,EAAMa,WACb,gBAAiB,CACfb,MAAOA,EAAAA,EAAMC,cAyBJ8O,EAAmBnB,IAC9B,MAAM,QAAE7M,GAAY6M,EACpB,OACEnO,EAAAA,EAAAA,KAACuP,EAAAA,EAAU,CACTjO,QAASA,EACTlB,GAAI,CACF6G,SAAU,WACVM,MAAO,MACPD,IAAK,MACLkI,UAAW,mBACXlP,WAAYC,EAAAA,EAAMD,WAClBC,MAAO,QACPkP,OAAQ,EACR,UAAW,CAAEnP,WAAYC,EAAAA,EAAMa,aAC/BnB,UAEFD,EAAAA,EAAAA,KAAC0P,EAAAA,EAAe,KACL,EAIJC,GAAkBjE,EAAAA,EAAAA,IAAOkE,EAAAA,EAAPlE,CAAkB,CAC/CmE,aAAc,OACd,2BAA4B,CAC1B,aAAc,CACZlN,OAAQ,OACRjC,aAAc,OACdD,UAAW,wCACXF,MAAOA,EAAAA,EAAMa,YAEf,mBAAoB,CAClBuB,OAAQ,aAEV,yBAA0B,CACxBA,OAAQ,cAGZ,wBAAyB,CACvBpC,MAAOA,EAAAA,EAAMa,YAEf,wBAAyB,CACvBb,MAAOA,EAAAA,EAAMa,YAEf,oCAAqC,CACnCb,MAAOA,EAAAA,EAAMa,cAIJ0O,GAAiBpE,EAAAA,EAAAA,IAAOkE,EAAAA,EAAPlE,CAAkB,CAC9CmE,aAAc,OACd,2BAA4B,CAC1B,aAAc,CACZlN,OAAQ,kBACRlC,UAAW,iDACXF,MAAO,QACPG,aAAc,QAEhB,mBAAoB,CAClBiC,OAAQ,aAEV,yBAA0B,CACxBA,OAAQ,cAGZ,wBAAyB,CACvBpC,MAAO,SAET,wBAAyB,CACvBA,MAAO,SAET,oCAAqC,CACnCA,MAAO,WAIEwP,EAAgBA,KAC3B,MAAMpL,GAAQqL,EAAAA,EAAAA,KAEd,MAAO,CAAEC,cADYvL,EAAAA,EAAAA,GAAcC,EAAMC,YAAYC,KAAK,MACnC,EAGZqL,EAAU,CACrBvN,OAAQ,OACRjC,aAAc,OACdD,UAAW,wCACXF,MAAOA,EAAAA,EAAMa,WACbf,QAAS,MACT2B,UAAW,MACXb,MAAO,OACPgP,UAAW,aACX,2BAA4B,CAC1B9P,QAAS,MACT+P,aAAc,YACd5F,YAAajK,EAAAA,EAAMa,WACnB,aAAc,CACZuB,OAAQ,QAEV,mBAAoB,CAClBA,OAAQ,QAEV,yBAA0B,CACxBA,OAAQ,QAEV,wBAAyB,CACvBpC,MAAOA,EAAAA,EAAMa,cAUN+G,EAAsCkI,IAAyB,IAAxB,eAAEjI,GAAgBiI,EACpE,MAAMC,EAAYC,KAAKC,IAAIpI,EAAerB,OAAQ,GAC5C0J,EAAgBrI,EAAeW,MAAM,EAAGuH,GACxCI,EAAUtI,EAAerB,OAAS,GACjC4J,EAAMC,IAAWrR,EAAAA,EAAAA,WAAS,GAC3BkF,GAAWC,EAAAA,EAAAA,GAAc,sBAE/B,OACExE,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,GAAI,CACFO,QAAS,CAAEuG,GAAI,QAASC,GAAI,QAC5BtE,IAAK,CAAEqE,GAAI,EAAGC,GAAI,GAClBhG,MAAO,OACP0I,OAAQ,QACRgH,oBACEJ,EAAc1J,OAAS,EAAI,kBAAoB,cACjD+J,iBAAkB,OAClB,QAAS,CACP3P,MAAO,OACP0I,OAAQ,OACRkH,UAAW,QACXrQ,aAAc,OAEhBuG,SAAU,YACVhH,SAAA,EAEFD,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CACFmB,QAASA,IAAMsP,GAAQ,GACvBxQ,GAAI,CACF4Q,WAAY,CAAE9J,GAAI,OAAQC,GAAI,UAC9B8J,QAAS,CAAE/J,GAAI,OAAQC,GAAI,UAC3B0C,OAAQ,QACR1I,MAAO,CAAE+F,GAAI,OAAQC,GAAI,QACzBxG,QAAS,CAAEuG,GAAI,QAASC,GAAI,SAC5BlH,UAEFD,EAAAA,EAAAA,KAAA,OAAKkC,MAAO,CAAC2H,OAAO,SAAU9G,IAAK0N,EAAc,GAAIxN,IAAI,YAGzDwB,GACAgM,EAAc1H,MAAM,GAAG1G,KAAI,CAACU,EAAKkG,IAC3BA,EAAQ,IAAM,GAEd/I,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFmB,QAASA,IAAMsP,GAAQ,GAEvBjQ,QAAQ,OACRP,GAAI,CACF0Q,iBAAkB,cAClBjH,OAAQ,QACRhH,IAAK,OACL5C,SAAA,EAEFD,EAAAA,EAAAA,KAAA,OACE+C,IAAKA,EACLE,IAAK,SAASgG,EAAQ,IACtB/G,MAAO,CAAE2H,OAAQ,OAAQ1I,MAAO,OAAQ4P,UAAW,WAGpDN,EAAcxH,EAAQ,KACrBjJ,EAAAA,EAAAA,KAAA,OACE+C,IAAK0N,EAAcxH,EAAQ,GAC3BhG,IAAK,SAASgG,EAAQ,IACtB/G,MAAO,CACL2H,OAAQ,OACR1I,MAAO,OACP4P,UAAW,aArBZ9H,GA4BJ,OAGVyH,IACC1Q,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CACFC,GAAI,CACF6G,SAAU,WACViE,OAAQ,GACR3D,MAAO,GACPjH,WAAYC,EAAAA,EAAMD,WAClBC,MAAO,QACPG,aAAc,MACdgI,EAAG,EACHwI,UAAW,SACXC,OAAQ,UACR1Q,UACE,oFACFR,UAEFC,EAAAA,EAAAA,MAACa,EAAAA,EAAU,CAACC,QAAQ,QAAOf,SAAA,CAAC,KACvBwE,EAAW2D,EAAerB,OAAS,EAAIqB,EAAerB,OAAS,EAAE,cAK1E/G,EAAAA,EAAAA,KAACoR,EAAAA,EAAK,CAACT,KAAMA,EAAMU,QAASA,IAAMT,GAAQ,GAAO3Q,UAC/CC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,GAAI,CACF6G,SAAU,WACVK,IAAK,MACLgK,KAAM,MACN9B,UAAW,wBACXrO,MAAO,MACP0I,OAAQ,MACRN,QAAS,QACT9I,UAAW,GACXiI,EAAG,EACH6I,UAAW,OACX7Q,aAAc,OACdT,SAAA,EAEFD,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACC,QAAQ,KAAKkQ,UAAU,SAASpQ,GAAI,EAAEb,SAAC,gBAInDD,EAAAA,EAAAA,KAACwR,EAAAA,EAAK,CACJlQ,QAASA,IAAMsP,GAAQ,GACvBxQ,GAAI,CACF6G,SAAU,WACVK,IAAK,GACLC,MAAO,OAGXvH,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CACFQ,QAAQ,OACRkC,IAAK,EACLzC,GAAI,CACFyQ,oBAAqB,yCACrB5Q,SAEDmI,EAAe/F,KAAI,CAACoP,EAAKxI,KACxBjJ,EAAAA,EAAAA,KAAA,OAEE+C,IAAK0O,EACLxO,IAAK,SAASgG,EAAQ,IACtB/G,MAAO,CACLf,MAAO,OACP0I,OAAQ,QACRkH,UAAW,QACXrQ,aAAc,QAPXuI,cAcX,EAOGgC,EAAgByG,IAItB,IAJuB,KAC5BrH,GAGDqH,EACC,MAAOC,EAASC,IAAcrS,EAAAA,EAAAA,WAAS,GACjCsS,EAAqBF,EACvBtH,EAAKrG,UACLqG,EAAKrG,UAAU+E,MAAM,EAAG,GACtB+I,EAAYvB,KAAKwB,KAAKF,EAAmB9K,OAAS,GAClDiL,EAAcH,EAAmB9I,MAAM,EAAG+I,GAC1CG,EAAeJ,EAAmB9I,MAAM+I,GAE9C,OACE9R,EAAAA,EAAAA,KAAAkS,EAAAA,SAAA,CAAAjS,UACED,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACC,GAAI,CAAE2H,GAAI,CAAEb,GAAI,EAAGC,GAAI,IAAMlH,UAChCD,EAAAA,EAAAA,KAACgK,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,CAAEhD,GAAI,EAAGC,GAAI,GAAIlH,SACvC,CAAC+R,EAAaC,GAAc5P,KAAI,CAAC8P,EAAQC,KACxCpS,EAAAA,EAAAA,KAACgK,EAAAA,GAAI,CAACM,MAAI,EAACpD,GAAI,EAAGC,GAAI,GAAGlH,UACvBD,EAAAA,EAAAA,KAAC+K,EAAAA,EAAI,CAACsH,gBAAc,EAAApS,SACjBkS,EAAO9P,KAAI,CAAC2G,EAASC,KACpB,MAAMqJ,EACS,IAAbF,GACAnJ,IAAUkJ,EAAOpL,OAAS,GAC1BsD,EAAKrG,UAAU+C,OAAS,EAE1B,OACE7G,EAAAA,EAAAA,MAACqS,EAAAA,GAAQ,CAEPnS,GAAI,CACFiH,GAAI,GACJL,GAAI,CAAEE,GAAI,EAAGC,GAAI,GACjBxG,QAAS,OACTE,WAAY,SACZgI,SAAU,QACV5I,SAAA,EAEFC,EAAAA,EAAAA,MAAA,OACEgC,MAAO,CACLvB,QAAS,OACTE,WAAY,cACZZ,SAAA,EAEFD,EAAAA,EAAAA,KAACwS,EAAAA,EAAY,CAACpS,GAAI,CAAEwI,SAAU,OAAQb,GAAI,IAAM9H,UAC9CD,EAAAA,EAAAA,KAACyS,EAAAA,EAAiB,CAACrS,GAAI,CAAEoC,SAAU,YAErCxC,EAAAA,EAAAA,KAAC0S,EAAAA,EAAY,CACXxQ,MAAO,CAAEiJ,OAAQ,GACjBwH,QAAS3J,EACT4J,uBAAwB,CACtB1Q,MAAO,CAAEM,SAAU,cAKxB8P,IACCpS,EAAAA,EAAAA,MAAAgS,EAAAA,SAAA,CAAAjS,SAAA,EACED,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CACLC,QAASA,IAAMsQ,GAAYD,GAC3BvR,GAAI,CACFqI,cAAe,OACfjG,SAAU,OACVmG,GAAI,OACJD,EAAG,EACHnI,MAAOA,EAAAA,EAAMa,WACbH,WAAY,QACZhB,SAED0R,EAAU,YAAc,iBAE1BA,GAAU3R,EAAAA,EAAAA,KAAC6S,EAAAA,EAAU,KAAM7S,EAAAA,EAAAA,KAAC8S,EAAAA,EAAU,SA1CtC7J,EA6CI,OAvDYmJ,UA+DpC,EAIMW,EAAiBC,GACxBA,GAAU,IAAY,YACtBA,GAAU,IAAY,OACtBA,GAAU,IAAY,UACtBA,GAAU,IAAY,OACnB,YAGIC,EAAkBD,GACzBA,GAAU,IAAY,UACtBA,GAAU,IAAY,UACtBA,GAAU,IAAY,UACtBA,GAAU,IAAY,UACnB,S","sources":["pages/Hotel/BookingTable.tsx","pages/Hotel/MyHotelDetails.tsx","components/data.tsx","components/style.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Avatar, Box, Button, Chip, FormControl, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from \"@mui/material\";\r\nimport color from \"../../components/color\";\r\nimport { editHotel, getHotel } from \"../../services/services\";\r\n\r\n\r\nconst BookingTable = ({ booking, hotelId }: any) => {\r\n  console.log(booking)\r\n  const [availability, setAvailability] = useState(\"\"); // Store \"Available\" or \"Unavailable\"\r\n  // const [hotelId, setHotelId] = useState(\"\");\r\n\r\n  // Fetch hotel availability on mount\r\n  useEffect(() => {\r\n    getHotel(hotelId).then((res) => {\r\n      setAvailability(res?.data?.data?.roomAvailable); // Should return \"Available\" or \"Unavailable\"\r\n      // setHotelId(res?.data?.data?.id);\r\n    });\r\n  }, [hotelId]);\r\n\r\n  // Toggle and update DB\r\n  const toggleAvailability = () => {\r\n    const newStatus = availability === \"Available\" ? \"Unavailable\" : \"Available\";\r\n    setAvailability(newStatus); // Update UI immediately\r\n\r\n    // Send updated status to backend\r\n    editHotel(hotelId, { roomAvailable: newStatus })\r\n      .then(() => console.log(\"Availability updated\"))\r\n      .catch((err) => console.error(\"Error updating availability:\", err));\r\n  };\r\n\r\n  // Show loading state if data is still fetching\r\n  if (availability === null) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ padding: 2, background: color.thirdColor, boxShadow: \"0px 0px 14px rgba(0, 0, 0, 0.14)\", borderRadius: \"12px\" }}>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\r\n        <div>\r\n          <Typography variant=\"h6\" fontWeight=\"bold\">New booking</Typography>\r\n          <Typography variant=\"body2\" color=\"gray\">Recent guest reservations list</Typography>\r\n        </div>\r\n        <FormControl sx={{ width: \"fit-content\", color: color.firstColor }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color={availability === \"Available\" ? \"success\" : \"error\"}\r\n            onClick={toggleAvailability}\r\n          >\r\n            {availability === \"Available\" ? \"Available\" : \"Unavailable\"}\r\n          </Button>\r\n        </FormControl>\r\n      </Box>\r\n\r\n      <TableContainer component={Paper} sx={{ marginTop: 2, boxShadow: \"none\" }}>\r\n        <Table style={{ background: color.thirdColor }}>\r\n          <TableHead>\r\n            <TableRow>\r\n              {[\"Booking ID\", \"Guest name\", \"Checked In Date\", \"Checked In Time\", \"Checked Out Date\", \"Checked Out Time\", \"Status\", \"\"].map((header) => (\r\n                <TableCell key={header} sx={{ fontWeight: \"bold\", color: \"gray\", fontSize: \"14px\", whiteSpace: \"nowrap\" }}>\r\n                  {header}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {booking.map((booking: any) => (\r\n              <TableRow style={{ border: \"solid 0px\", boxShadow: \"none\" }} key={booking.id}>\r\n                <TableCell>{booking.id}</TableCell>\r\n                <TableCell>\r\n                  <Box display=\"flex\" alignItems=\"center\" gap={1}>\r\n                    <Avatar src={booking.avatar} alt={booking?.geustName} />\r\n                    <Typography>{booking?.geustName}</Typography>\r\n                  </Box>\r\n                </TableCell>\r\n\r\n                <TableCell>{booking.checkInDate}</TableCell>\r\n                <TableCell>{booking.checkInTime}</TableCell>\r\n\r\n                <TableCell>{booking.checkOutDate}</TableCell>\r\n                <TableCell>{booking.checkOutTime}</TableCell>\r\n                <TableCell>\r\n                  <Chip\r\n                    label={booking.status}\r\n                    sx={{ backgroundColor: booking.statusColor, color: \"#000\", fontWeight: \"bold\" }}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BookingTable;\r\n","/* eslint-disable jsx-a11y/img-redundant-alt */\r\nimport {\r\n  AddCircleOutline,\r\n  CheckCircle,\r\n  Edit,\r\n  Star\r\n} from \"@mui/icons-material\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardMedia,\r\n  Chip,\r\n  Grid,\r\n  List,\r\n  styled,\r\n  Tab,\r\n  Tabs,\r\n  ToggleButton,\r\n  Typography,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport color from \"../../components/color\";\r\nimport CustomButton from \"../../components/CustomButton\";\r\nimport { amenityIcons } from \"../../components/data\";\r\nimport { BoxStyle, ImageGrid, RoomAmenities } from \"../../components/style\";\r\nimport theme from \"../../theme\";\r\nimport { getAllBookingsofMyHotel, getMyAllHotelswithBelongsTo } from \"../../services/services\";\r\nimport BookingTable from \"./BookingTable\";\r\n\r\nconst hotelData = {\r\n  propertyName: \"Hotel Metropol by Maier Private hotels\",\r\n  address: \"Plot no 10, 11, Mancheswar, Bhubaneswar, Odisha 751001, India\",\r\n  description:\r\n    \"A good description should be a narrative. It should tell the story of your property. It should focus on the emotions that the property and its amenities evoke. This is where you can describe the style of the property, the history of those who have operated there, and the importance of its place in the neighborhood.\",\r\n  rating: 4.7,\r\n  reviews: 134,\r\n  amenities: [\r\n    \"Gym\",\r\n    \"Swimming Pool\",\r\n    \"Free WiFi\",\r\n    \"Private Beach\",\r\n    \"Breakfast\",\r\n  ],\r\n  propertyImages: [\r\n    \"/assets/hotel 1.jpg\",\r\n    \"/assets/hotel 2.jpg\",\r\n    \"/assets/room-image 1.jpg\",\r\n    \"/assets/room-image 2.jpg\",\r\n    \"/assets/room-image 3.jpg\",\r\n    \"/assets/room-image 3.jpg\",\r\n    \"/assets/room-image 3.jpg\",\r\n    \"/assets/room-image 3.jpg\",\r\n  ],\r\n  rooms: [\r\n    {\r\n      id: 1,\r\n      propertyName: \"Deluxe Double Room\",\r\n      size: \"225 sqft (21 sq.m) | Double Bed\",\r\n      price: {\r\n        \"3 hrs\": 1543,\r\n        \"6 hrs\": 1943,\r\n        \"12 hrs\": 2743,\r\n      },\r\n      amenities: [\r\n        \"Iron/Ironing Board\",\r\n        \"Bathroom \",\r\n        \"24-hour Housekeeping\",\r\n        \"24-hour In-room Dining\",\r\n        \"Laundry Service\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n        \"Air Conditioning\",\r\n      ],\r\n      image: \"/assets/room-image 1.jpg\",\r\n    },\r\n    {\r\n      id: 2,\r\n      propertyName: \"Superior Double Room\",\r\n      size: \"250 sqft (23 sq.m) | Queen Bed\",\r\n      price: {\r\n        \"3 hrs\": 1743,\r\n        \"6 hrs\": 2143,\r\n        \"12 hrs\": 2943,\r\n      },\r\n      amenities: [\r\n        \"Iron/Ironing Board\",\r\n        \"Bathroom\",\r\n        \"24-hour Housekeeping\",\r\n        \"Laundry Service\",\r\n        \"Air Conditioning\",\r\n      ],\r\n      image: \"/assets/room-image 1.jpg\",\r\n    },\r\n    {\r\n      id: 3,\r\n      propertyName: \"Superior Double Room\",\r\n      size: \"250 sqft (23 sq.m) | Queen Bed\",\r\n      price: {\r\n        \"3 hrs\": 1743,\r\n        \"6 hrs\": 2143,\r\n        \"12 hrs\": 2943,\r\n      },\r\n      amenities: [\r\n        \"Iron/Ironing Board\",\r\n        \"Bathroom\",\r\n        \"24-hour Housekeeping\",\r\n        \"Laundry Service\",\r\n        \"Air Conditioning\",\r\n      ],\r\n      image: \"/assets/room-image 1.jpg\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst MyHotelDetails = () => {\r\n  const [selectedRoom, setSelectedRoom] = useState(hotelData.rooms[0]);\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  const { id } = useParams();\r\n\r\n  const [booking, setBooking] = useState<any[]>([])\r\n\r\n  useEffect(() => {\r\n    const today = new Date();\r\n    const next10Days = new Date();\r\n    next10Days.setDate(today.getDate() + 10);\r\n\r\n    getAllBookingsofMyHotel({\r\n      data: { filter: \"\" },\r\n      page: 0,\r\n      pageSize: 50,\r\n      order: [[\"createdAt\", \"ASC\"]],\r\n    }).then((res) => {\r\n      const allBookings = res?.data?.data?.rows || [];\r\n\r\n      // Filter bookings where checkInDate is within the next 10 days\r\n      const filteredBookings = allBookings.filter((booking: any) => {\r\n        const checkInDate = new Date(booking.checkInDate);\r\n        return checkInDate >= today && checkInDate <= next10Days;\r\n      });\r\n\r\n      setBooking(filteredBookings);\r\n    });\r\n  }, []);\r\n\r\n  const [expanded, setExpanded] = useState(false);\r\n  const maxLength = isMobile ? 100 : 350;\r\n\r\n  const [value, setValue] = useState(0);\r\n\r\n  const navigate = useNavigate();\r\n  const [hotelData1, setHotelData1] = useState<any>([]);\r\n\r\n  const [roomData, setRoomData] = useState<any>([]);\r\n  // console.log(id);\r\n\r\n  useEffect(() => {\r\n    getMyAllHotelswithBelongsTo({\r\n      id: id,\r\n      secondTable: 'Room'\r\n    }).then((res) => {\r\n      setHotelData1(res?.data?.data[0]);\r\n      setRoomData(res?.data?.data[0]?.rooms[0]);\r\n      const rooms = res?.data?.data[0]?.rooms;\r\n      if (rooms.length > 0) {\r\n        setSelectedRoom(rooms[0]);\r\n      }\r\n    }).catch((err) => {\r\n      console.log(err);\r\n    })\r\n  }, [])\r\n\r\n  console.log(selectedRoom)\r\n\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        background: color.thirdColor,\r\n        px: 2,\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          px: { xs: 0, md: 2 },\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            ...BoxStyle,\r\n            px: { xs: 2, md: 3 },\r\n            py: 3,\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              position: \"absolute\",\r\n              top: 24,\r\n              right: 24,\r\n              display: { xs: \"none\", md: \"flex\" },\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              gap: \"6px\",\r\n            }}\r\n          >\r\n            <CustomButton\r\n              customStyles={{\r\n                fontSize: \"14px\",\r\n              }}\r\n              variant=\"contained\"\r\n              startIcon={<Edit />}\r\n              onClick={() => {\r\n                navigate(\"/property-registration\", { state: id });\r\n              }}\r\n            >\r\n              Edit Hotel\r\n            </CustomButton>\r\n          </Box>\r\n\r\n          <Typography\r\n            variant=\"h5\"\r\n            sx={{\r\n              fontSize: { xs: \"18px\", md: \"24px\" },\r\n              fontWeight: 600,\r\n              color: color.firstColor,\r\n            }}\r\n          >\r\n            {hotelData1?.propertyName}\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            sx={{\r\n              fontFamily: \"CustomFontSB\",\r\n              fontSize: { xs: \"10px\", md: \"14px\" },\r\n              color: color.paperColor,\r\n              mt: { xs: 1, md: 0 },\r\n            }}\r\n          >\r\n            {hotelData1?.address}\r\n          </Typography>\r\n\r\n          <Box py={2} sx={{ pr: { xs: 0, md: 2 }, mx: -1 }}>\r\n            <ImageGrid propertyImages={hotelData1.propertyImages || []}></ImageGrid>\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              display: { xs: \"flex\", md: \"flex\" },\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"body2\"\r\n              fontWeight={600}\r\n              color={color.thirdColor}\r\n              sx={{\r\n                background: color.background,\r\n                px: 1,\r\n                borderRadius: \"4px\",\r\n                fontSize: \"14px\",\r\n                mb: 2,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                gap: \"6px\",\r\n              }}\r\n            >\r\n              <Star></Star>\r\n              {/* {hotelData1.rating} ({hotelData.reviews} reviews) */}\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Box sx={{ maxWidth: \"100%\" }}>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              sx={{\r\n                fontFamily: \"CustomFontB\",\r\n                fontSize: \"16px\",\r\n                color: color.paperColor,\r\n              }}\r\n            >\r\n              Property Description\r\n            </Typography>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              sx={{\r\n                fontSize: \"14px\",\r\n                mt: 1,\r\n              }}\r\n            >\r\n              {expanded || hotelData1?.propertyDesc?.length <= maxLength\r\n                ? hotelData1?.propertyDesc\r\n                : `${hotelData1?.propertyDesc?.substring(0, maxLength)}...`}\r\n              {hotelData1?.propertyDesc?.length > maxLength && (\r\n                <Button\r\n                  sx={{\r\n                    textTransform: \"none\",\r\n                    fontSize: \"14px\",\r\n                    p: 0,\r\n                    ml: 1,\r\n                    minWidth: 0,\r\n                  }}\r\n                  onClick={() => setExpanded(!expanded)}\r\n                >\r\n                  {expanded ? \"Show less\" : \"More\"}\r\n                </Button>\r\n              )}\r\n            </Typography>\r\n\r\n            <Typography\r\n              sx={{\r\n                fontFamily: \"CustomFontB\",\r\n                fontSize: \"16px\",\r\n                color: color.paperColor,\r\n                mt: 2,\r\n              }}\r\n            >\r\n              Highlights\r\n            </Typography>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                gap: { xs: 2, md: 6 },\r\n                flexWrap: \"wrap\",\r\n                mt: 3,\r\n                p: 2,\r\n                px: 4,\r\n                pt: 3,\r\n                backgroundColor: \"rgba(93, 93, 93, 0.14)\",\r\n                justifyContent: \"space-around\",\r\n                borderRadius: \"12px\",\r\n                width: \"fit-content\",\r\n              }}\r\n            >\r\n              {roomData?.amenities?.slice(0, 5).map((amenity: any, index: any) => (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <Chip\r\n                    key={index}\r\n                    icon={\r\n                      <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                        {React.cloneElement(\r\n                          amenityIcons[amenity] || <AddCircleOutline />,\r\n                          {\r\n                            sx: {\r\n                              fontSize: { xs: 26, md: 34 },\r\n                              color: color.paperColor,\r\n                            },\r\n                          }\r\n                        )}\r\n                      </Box>\r\n                    }\r\n                    size=\"small\"\r\n                    sx={{ bgcolor: \"transparent\" }}\r\n                  />\r\n\r\n                  <Typography\r\n                    sx={{ fontSize: { xs: \"10px\", md: \"14px\" } }}\r\n                    mt={1.5}\r\n                  >\r\n                    {amenity}\r\n                  </Typography>\r\n                </div>\r\n              ))}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box sx={{ ...BoxStyle, px: { xs: 1, md: 4 } }}>\r\n          <Tabs\r\n            variant=\"scrollable\"\r\n            value={value}\r\n            onChange={(event, newValue) => setValue(newValue)}\r\n            sx={{\r\n              \"& .MuiTab-root\": {\r\n                textTransform: \"none\",\r\n                fontWeight: 600,\r\n                color: color.forthColor,\r\n                fontSize: \"1rem\",\r\n                p: 0,\r\n                minWidth: \"10px\",\r\n                mx: 1,\r\n                px: 0.5,\r\n              },\r\n              \"& .Mui-selected\": {\r\n                color: \"#000 !important\",\r\n                fontWeight: \"bold\",\r\n              },\r\n              \"& .MuiTabs-indicator\": {\r\n                backgroundColor: \"#000\",\r\n                height: 3,\r\n                borderRadius: \"4px\",\r\n              },\r\n            }}\r\n          >\r\n            <Tab label=\"Rooms\" />\r\n            <Tab label=\"Service & Amenities\" />\r\n            {/* <Tab label=\"Reviews\" /> */}\r\n            <Tab label=\"Policies\" />\r\n          </Tabs>\r\n\r\n          <TabPanel value={value} index={0}>\r\n            <Grid container spacing={2}>\r\n              {Array.isArray(roomData) && roomData.map((room: any) => (\r\n                <Grid item xs={12} md={6} key={room.id}>\r\n                  <Card\r\n                    onClick={() => setSelectedRoom(room)}\r\n                    sx={{\r\n                      p: 2,\r\n                      display: \"flex\",\r\n                      flexDirection: { xs: \"column\", md: \"column\" },\r\n                      alignItems: \"flex-start\",\r\n                      background: color.thirdColor,\r\n                      borderRadius: \"12px\",\r\n                      boxShadow: \"0px 0px 20px rgba(0, 0, 0, 0.18)\",\r\n                      border: \"solid 2px\",\r\n                      borderColor:\r\n                        selectedRoom.id === room.id\r\n                          ? color.firstColor\r\n                          : \"transparent\",\r\n                      position: \"relative\",\r\n                      overflow: \"visible\",\r\n                    }}\r\n                  >\r\n                    {selectedRoom.id === room.id && (\r\n                      <CheckCircle\r\n                        sx={{\r\n                          position: \"absolute\",\r\n                          top: -10,\r\n                          right: -10,\r\n                          color: color.firstColor,\r\n                          background: color.thirdColor,\r\n                          borderRadius: \"50%\",\r\n                        }}\r\n                      ></CheckCircle>\r\n                    )}\r\n\r\n                    <Box sx={{ width: { xs: \"100%\", md: \"100%\" } }}>\r\n                      <CardMedia\r\n                        component=\"img\"\r\n                        height=\"160\"\r\n                        sx={{\r\n                          borderRadius: \"12px\",\r\n                          width: { xs: \"100%\", md: \"100%\" },\r\n                        }}\r\n                        image={room?.image}\r\n                        alt={room?.roomCategory}\r\n                      />\r\n\r\n                      <Typography\r\n                        variant=\"h6\"\r\n                        mt={1.5}\r\n                        fontWeight={\"bold\"}\r\n                        sx={{\r\n                          background:\r\n                            selectedRoom.id === room.id\r\n                              ? color.firstColor\r\n                              : \"transparent\",\r\n                          ml: -2,\r\n                          pl: 2,\r\n                          borderRadius: \"0px 4px 4px 0px\",\r\n                          color:\r\n                            selectedRoom.id === room.id\r\n                              ? color.thirdColor\r\n                              : color.firstColor,\r\n                          mb: selectedRoom.id === room.id ? 1 : 0,\r\n                          width: { xs: \"fit-content\", md: \"fit-content\" },\r\n                          pr: { xs: 2, md: 2 },\r\n                          mt: { xs: 2, md: 2 },\r\n                          transition: \"all 0.3s\",\r\n                        }}\r\n                      >\r\n                        {room.propertyName}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\">{room.size}</Typography>\r\n                    </Box>\r\n\r\n                    <List\r\n                      sx={{\r\n                        py: 0,\r\n                        mt: 1,\r\n                        width: \"100%\",\r\n                        pb: { xs: 0, md: \"0px\" },\r\n                      }}\r\n                    >\r\n                      <RoomAmenities key={room.id} room={room} />\r\n                    </List>\r\n\r\n                    <Box\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        flexWrap: \"wrap\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"space-around\",\r\n                        gap: \"20px\",\r\n                        position: { xs: \"unset\", md: \"unset\" },\r\n                        bottom: 16,\r\n                        right: 16,\r\n                        // width:'100%',\r\n                        margin: \"auto\",\r\n                        marginTop: \"20px\",\r\n                      }}\r\n                    >\r\n                      {Object.keys(room.price).map((slot) => (\r\n                        <StyledToggleButton\r\n                          key={slot}\r\n                          value={slot}\r\n                          style={{ borderColor: color.forthColor }}\r\n                        >\r\n                          <Typography\r\n                            px={1}\r\n                            py={0.5}\r\n                            sx={{\r\n                              fontSize: { xs: \"8px\", md: \"8px\" },\r\n                              lineHeight: 1.4,\r\n                            }}\r\n                          >\r\n                            <span style={{ fontSize: \"18px\", fontWeight: 600 }}>\r\n                              {slot}\r\n                            </span>\r\n                            <br />₹{\" \"}\r\n                            {room.price[slot as keyof typeof room.price]}\r\n                            <br />\r\n                            Incl. Taxes\r\n                          </Typography>\r\n                        </StyledToggleButton>\r\n                      ))}\r\n                    </Box>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n            <Typography>Services and amenities provided.</Typography>\r\n          </TabPanel>\r\n          <TabPanel value={value} index={2}>\r\n            <Typography>Customer reviews and ratings.</Typography>\r\n          </TabPanel>\r\n          {/* <TabPanel value={value} index={3}>\r\n          <Typography>Hotel policies and guidelines.</Typography>\r\n        </TabPanel> */}\r\n        </Box>\r\n        <Grid container spacing={3} mt={0}>\r\n          <Grid item xs={12} md={12}>\r\n            <BookingTable booking={booking} hotelId={id}></BookingTable>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyHotelDetails;\r\n\r\nconst StyledToggleButton = styled(ToggleButton)(({ theme }) => ({\r\n  borderRadius: \"4px\",\r\n  textTransform: \"none\",\r\n  fontSize: \"12px\",\r\n  padding: \"0px 10px\",\r\n  fontWeight: 600,\r\n  border: \"1px solid rgba(61, 61, 61, 0.4)\",\r\n  \"&.Mui-selected\": {\r\n    background: color.background,\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nconst TabPanel = ({\r\n  children,\r\n  value,\r\n  index,\r\n}: {\r\n  children: React.ReactNode;\r\n  value: number;\r\n  index: number;\r\n}) => {\r\n  return (\r\n    <div hidden={value !== index}>\r\n      {value === index && (\r\n        <Box p={1} mt={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import AcUnitIcon from \"@mui/icons-material/AcUnit\";\r\nimport AirportShuttleIcon from \"@mui/icons-material/AirportShuttle\";\r\nimport BeachAccessIcon from \"@mui/icons-material/BeachAccess\";\r\nimport BusinessCenterIcon from \"@mui/icons-material/BusinessCenter\";\r\nimport CasinoIcon from \"@mui/icons-material/Casino\";\r\nimport ChildCareIcon from \"@mui/icons-material/ChildCare\";\r\nimport DirectionsCarIcon from \"@mui/icons-material/DirectionsCar\";\r\nimport FireExtinguisherIcon from \"@mui/icons-material/FireExtinguisher\";\r\nimport FitnessCenterIcon from \"@mui/icons-material/FitnessCenter\";\r\nimport FreeBreakfastIcon from \"@mui/icons-material/FreeBreakfast\";\r\nimport KingBedIcon from \"@mui/icons-material/KingBed\";\r\nimport LocalBarIcon from \"@mui/icons-material/LocalBar\";\r\nimport LocalDiningIcon from \"@mui/icons-material/LocalDining\";\r\nimport LocalLaundryServiceIcon from \"@mui/icons-material/LocalLaundryService\";\r\nimport LocalParkingIcon from \"@mui/icons-material/LocalParking\";\r\nimport NightlifeIcon from \"@mui/icons-material/Nightlife\";\r\nimport OutdoorGrillIcon from \"@mui/icons-material/OutdoorGrill\";\r\nimport PetsIcon from \"@mui/icons-material/Pets\";\r\nimport PoolIcon from \"@mui/icons-material/Pool\";\r\nimport RoomServiceIcon from \"@mui/icons-material/RoomService\";\r\nimport SpaIcon from \"@mui/icons-material/Spa\";\r\nimport SportsTennisIcon from \"@mui/icons-material/SportsTennis\";\r\nimport TvIcon from \"@mui/icons-material/Tv\";\r\nimport WifiIcon from \"@mui/icons-material/Wifi\";\r\n\r\nexport const amenityIcons: { [key: string]: JSX.Element } = {\r\n  \"Swimming Pool\": <PoolIcon fontSize=\"small\" />,\r\n  Gym: <FitnessCenterIcon fontSize=\"small\" />,\r\n  \"Free WiFi\": <WifiIcon fontSize=\"small\" />,\r\n  \"Private Beach\": <BeachAccessIcon fontSize=\"small\" />,\r\n  Breakfast: <FreeBreakfastIcon fontSize=\"small\" />,\r\n  Parking: <LocalParkingIcon fontSize=\"small\" />,\r\n  Spa: <SpaIcon fontSize=\"small\" />,\r\n  Restaurant: <LocalDiningIcon fontSize=\"small\" />,\r\n  \"Airport Shuttle\": <AirportShuttleIcon fontSize=\"small\" />,\r\n  \"Business Center\": <BusinessCenterIcon fontSize=\"small\" />,\r\n  \"Pet Friendly\": <PetsIcon fontSize=\"small\" />,\r\n  Bar: <LocalBarIcon fontSize=\"small\" />,\r\n  \"Room Service\": <RoomServiceIcon fontSize=\"small\" />,\r\n  TV: <TvIcon fontSize=\"small\" />,\r\n  \"Air Conditioning\": <AcUnitIcon fontSize=\"small\" />,\r\n  \"Laundry Service\": <LocalLaundryServiceIcon fontSize=\"small\" />,\r\n  \"Child Care\": <ChildCareIcon fontSize=\"small\" />,\r\n  \"King Bed\": <KingBedIcon fontSize=\"small\" />,\r\n  Casino: <CasinoIcon fontSize=\"small\" />,\r\n  \"Car Rental\": <DirectionsCarIcon fontSize=\"small\" />,\r\n  \"Night Club\": <NightlifeIcon fontSize=\"small\" />,\r\n  \"Tennis Court\": <SportsTennisIcon fontSize=\"small\" />,\r\n  \"BBQ Facilities\": <OutdoorGrillIcon fontSize=\"small\" />,\r\n  \"Fire Safety\": <FireExtinguisherIcon fontSize=\"small\" />,\r\n};\r\n\r\n\r\nexport const amenitiesOptions = [\r\n  \"Swimming Pool\",\r\n  \"Gym\",\r\n  \"Free WiFi\",\r\n  \"Private Beach\",\r\n  \"Breakfast\",\r\n  \"Parking\",\r\n  \"Spa\",\r\n  \"Restaurant\",\r\n  \"Airport Shuttle\",\r\n  \"Business Center\",\r\n  \"Pet Friendly\",\r\n  \"Bar\",\r\n  \"Room Service\",\r\n  \"TV\",\r\n  \"Air Conditioning\",\r\n  \"Laundry Service\",\r\n  \"Child Care\",\r\n  \"King Bed\",\r\n  \"Casino\",\r\n  \"Car Rental\",\r\n  \"Night Club\",\r\n  \"Tennis Court\",\r\n  \"BBQ Facilities\",\r\n  \"Fire Safety\",\r\n];\r\n\r\n\r\nexport const roomTypes = [\r\n  { value: \"Single Room\", label: \"Single Room\", details: \"A basic room with a single bed, ideal for solo travelers.\" },\r\n  { value: \"Double Room\", label: \"Double Room\", details: \"Comes with a double bed or two single beds, suitable for two people.\" },\r\n  { value: \"Deluxe Room\", label: \"Deluxe Room\", details: \"A more spacious version of a standard room with better furnishings.\" },\r\n  { value: \"Executive Room\", label: \"Executive Room\", details: \"Designed for business travelers with a work desk and extra amenities.\" },\r\n  { value: \"Club Room\", label: \"Club Room\", details: \"Offers premium benefits like lounge access and complimentary breakfast.\" },\r\n  { value: \"Suite Room\", label: \"Suite Room\", details: \"A larger space with a separate living area, ideal for families or business executives.\" },\r\n  { value: \"Presidential Suite\", label: \"Presidential Suite\", details: \"A luxurious option with multiple rooms and high-end services.\" },\r\n  { value: \"Royal Suite\", label: \"Royal Suite\", details: \"Inspired by Indian royalty with grand interiors and luxury amenities.\" },\r\n  { value: \"Heritage Room\", label: \"Heritage Room\", details: \"Traditional decor and antique furnishings, found in heritage hotels.\" },\r\n  { value: \"Cottage/Villa\", label: \"Cottage/Villa\", details: \"Standalone accommodations, often found in resorts with private gardens or pools.\" },\r\n  { value: \"Treehouse Room\", label: \"Treehouse Room\", details: \"Unique elevated rooms, mostly available in nature retreats.\" },\r\n  { value: \"Houseboat Room\", label: \"Houseboat Room\", details: \"Found in Kerala and Kashmir, offering a floating hotel experience.\" },\r\n  { value: \"Studio Apartment\", label: \"Studio Apartment\", details: \"A self-contained unit with a kitchenette, preferred for long stays.\" },\r\n  { value: \"Serviced Apartment\", label: \"Serviced Apartment\", details: \"A fully furnished apartment with hotel-like services.\" },\r\n];","/* eslint-disable jsx-a11y/img-redundant-alt */\r\nimport { ArrowBackIos, ArrowForwardIos, Close, ExpandLess, ExpandMore, FiberManualRecord } from \"@mui/icons-material\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControlLabel,\r\n  Grid,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Modal,\r\n  Radio,\r\n  RadioProps,\r\n  styled,\r\n  TextField,\r\n  Typography,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport color from \"./color\";\r\nimport { useState } from \"react\";\r\n\r\nexport const BoxStyle = {\r\n  p: 2,\r\n  px: 4,\r\n  boxShadow: \"0px 0px 20px rgba(0, 0, 0, 0.18)\",\r\n  borderRadius: \"12px\",\r\n  my: 4,\r\n};\r\n\r\nexport function BpRadio(props: RadioProps) {\r\n  return (\r\n    <Radio\r\n      style={{ padding: \"6px\" }}\r\n      disableRipple\r\n      color=\"default\"\r\n      checkedIcon={<BpCheckedIcon />}\r\n      icon={<BpIcon />}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport const BpIcon = styled(\"span\")(({ theme }) => ({\r\n  borderRadius: \"50%\",\r\n  width: 18,\r\n  height: 18,\r\n  boxShadow:\r\n    \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\r\n  backgroundColor: \"#f5f8fa\",\r\n  backgroundImage:\r\n    \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\r\n  \".Mui-focusVisible &\": {\r\n    outline: \"2px auto rgba(41, 91, 122, 0.6)\",\r\n    outlineOffset: 2,\r\n  },\r\n  \"input:hover ~ &\": {\r\n    backgroundColor: \"#ebf1f5\",\r\n    ...theme.applyStyles(\"dark\", {\r\n      backgroundColor: \"#30404d\",\r\n    }),\r\n  },\r\n  \"input:disabled ~ &\": {\r\n    boxShadow: \"none\",\r\n    background: \"rgba(206,217,224,.5)\",\r\n    ...theme.applyStyles(\"dark\", {\r\n      background: \"rgba(57,75,89,.5)\",\r\n    }),\r\n  },\r\n  ...theme.applyStyles(\"dark\", {\r\n    boxShadow: \"0 0 0 1px rgb(16 22 26 / 40%)\",\r\n    backgroundColor: \"#394b59\",\r\n    backgroundImage:\r\n      \"linear-gradient(180deg,hsla(0,0%,100%,.05),hsla(0,0%,100%,0))\",\r\n  }),\r\n}));\r\n\r\nexport const BpCheckedIcon = styled(BpIcon)({\r\n  backgroundColor: color.secondColor,\r\n  backgroundImage:\r\n    \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\r\n  \"&::before\": {\r\n    display: \"block\",\r\n    width: 18,\r\n    height: 18,\r\n    backgroundImage: \"radial-gradient(#fff,#fff 28%,transparent 32%)\",\r\n    content: '\"\"',\r\n  },\r\n  \"input:hover ~ &\": {\r\n    backgroundColor: color.secondColor,\r\n  },\r\n});\r\n\r\nexport const StyledLabel = styled(FormControlLabel)(\r\n  ({ theme, checked }: { theme?: any; checked?: boolean }) => ({\r\n    color: checked ? color.thirdColor : color.firstColor,\r\n    background: checked\r\n      ? color.firstColor\r\n      : \"transparent\",\r\n    borderRadius: \" 2px 8px 8px 2px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    transition: \"0.3s\",\r\n    paddingLeft: checked ? \"30px\" : \"auto\",\r\n    marginLeft: checked ? \"-40px\" : \"-10px\",\r\n    paddingRight: \"10px\",\r\n    fontSize: checked ? \"1rem\" : \"0.95rem\",\r\n  })\r\n);\r\n\r\nexport const CustomRadio = styled(Radio)({\r\n  color: color.firstColor,\r\n  \"&.Mui-checked\": {\r\n    color: color.thirdColor,\r\n  },\r\n});\r\n\r\nexport const CustomPrevArrow = (props: any) => {\r\n  const { onClick } = props;\r\n  return (\r\n    <IconButton\r\n      onClick={onClick}\r\n      sx={{\r\n        position: \"absolute\",\r\n        left: \"0px\",\r\n        top: \"50%\",\r\n        transform: \"translateY(-50%)\",\r\n        background: color.background,\r\n        color: \"white\",\r\n        zIndex: 2,\r\n        \"&:hover\": { background: color.firstColor },\r\n      }}\r\n    >\r\n      <ArrowBackIos />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport const CustomNextArrow = (props: any) => {\r\n  const { onClick } = props;\r\n  return (\r\n    <IconButton\r\n      onClick={onClick}\r\n      sx={{\r\n        position: \"absolute\",\r\n        right: \"0px\",\r\n        top: \"50%\",\r\n        transform: \"translateY(-50%)\",\r\n        background: color.background,\r\n        color: \"white\",\r\n        zIndex: 2,\r\n        \"&:hover\": { background: color.firstColor },\r\n      }}\r\n    >\r\n      <ArrowForwardIos />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport const CustomTextField = styled(TextField)({\r\n  marginBottom: \"10px\",\r\n  \"& .MuiOutlinedInput-root\": {\r\n    \"& fieldset\": {\r\n      border: \"none\",\r\n      borderRadius: \"52px\",\r\n      boxShadow: \"4px 4px 10px rgba(104, 39, 184, 0.17)\",\r\n      color: color.firstColor,\r\n    },\r\n    \"&:hover fieldset\": {\r\n      border: \"solid 1px\",\r\n    },\r\n    \"&.Mui-focused fieldset\": {\r\n      border: \"solid 1px\",\r\n    },\r\n  },\r\n  \"& .MuiInputBase-input\": {\r\n    color: color.firstColor,\r\n  },\r\n  \"& .MuiInputLabel-root\": {\r\n    color: color.firstColor,\r\n  },\r\n  \"& .MuiInputLabel-root.Mui-focused\": {\r\n    color: color.firstColor,\r\n  },\r\n});\r\n\r\nexport const LoginTextField = styled(TextField)({\r\n  marginBottom: \"20px\",\r\n  \"& .MuiOutlinedInput-root\": {\r\n    \"& fieldset\": {\r\n      border: \"solid 1px white\",\r\n      boxShadow: \"-4px -4px 10px rgba(255, 255, 255, 0.36) inset\",\r\n      color: \"white\",\r\n      borderRadius: \"12px\",\r\n    },\r\n    \"&:hover fieldset\": {\r\n      border: \"solid 1px\",\r\n    },\r\n    \"&.Mui-focused fieldset\": {\r\n      border: \"solid 1px\",\r\n    },\r\n  },\r\n  \"& .MuiInputBase-input\": {\r\n    color: \"white\",\r\n  },\r\n  \"& .MuiInputLabel-root\": {\r\n    color: \"white\",\r\n  },\r\n  \"& .MuiInputLabel-root.Mui-focused\": {\r\n    color: \"white\",\r\n  },\r\n});\r\n\r\nexport const useScreenSize = () => {\r\n  const theme = useTheme();\r\n  const isBelow400px = useMediaQuery(theme.breakpoints.down(400));\r\n  return { isBelow400px };\r\n};\r\n\r\nexport const inputSx = {\r\n  border: \"none\",\r\n  borderRadius: \"52px\",\r\n  boxShadow: \"4px 4px 10px rgba(104, 39, 184, 0.17)\",\r\n  color: color.firstColor,\r\n  padding: \"0px\",\r\n  marginTop: \"0px\",\r\n  width: \"100%\",\r\n  boxSizing: \"border-box\",\r\n  \"& .MuiOutlinedInput-root\": {\r\n    padding: \"0px\",\r\n    borderBottom: \"4px solid\",\r\n    borderColor: color.firstColor,\r\n    \"& fieldset\": {\r\n      border: \"none\",\r\n    },\r\n    \"&:hover fieldset\": {\r\n      border: \"none\",\r\n    },\r\n    \"&.Mui-focused fieldset\": {\r\n      border: \"none\",\r\n    },\r\n    \"& .MuiInputLabel-root\": {\r\n      color: color.firstColor,\r\n    },\r\n  },\r\n};\r\n\r\n\r\ninterface ImageGridProps {\r\n  propertyImages: string[];\r\n}\r\n\r\nexport const ImageGrid: React.FC<ImageGridProps> = ({ propertyImages }) => {\r\n  const maxImages = Math.min(propertyImages.length, 7);\r\n  const displayImages = propertyImages.slice(0, maxImages);\r\n  const hasMore = propertyImages.length > 7;\r\n  const [open, setOpen] = useState(false);\r\n  const isMobile = useMediaQuery(\"(max-width: 900px)\");\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: { xs: \"block\", md: \"grid\" },\r\n        gap: { xs: 0, md: 1 },\r\n        width: \"100%\",\r\n        height: \"300px\",\r\n        gridTemplateColumns:\r\n          displayImages.length > 5 ? \"40% 20% 20% 20%\" : \"60% 20% 20%\",\r\n        gridTemplateRows: \"auto\",\r\n        \"& img\": {\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          objectFit: \"cover\",\r\n          borderRadius: \"8px\",\r\n        },\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <Box\r\n        onClick={() => setOpen(true)}\r\n        sx={{\r\n          gridColumn: { xs: \"auto\", md: \"span 1\" },\r\n          gridRow: { xs: \"auto\", md: \"span 2\" },\r\n          height: \"300px\",\r\n          width: { xs: \"100%\", md: \"auto\" },\r\n          display: { xs: \"block\", md: \"grid\" },\r\n        }}\r\n      >\r\n        <img style={{height:'300px'}} src={displayImages[0]} alt=\"Main\" />\r\n      </Box>\r\n\r\n      {!isMobile &&\r\n        displayImages.slice(1).map((src, index) => {\r\n          if (index % 2 === 0) {\r\n            return (\r\n              <Box\r\n                onClick={() => setOpen(true)}\r\n                key={index}\r\n                display=\"grid\"\r\n                sx={{\r\n                  gridTemplateRows: \"146px 146px\",\r\n                  height: \"300px\",\r\n                  gap: \"8px\",\r\n                }}\r\n              >\r\n                <img\r\n                  src={src}\r\n                  alt={`Image ${index + 2}`}\r\n                  style={{ height: \"100%\", width: \"100%\", objectFit: \"cover\" }}\r\n                />\r\n\r\n                {displayImages[index + 2] && (\r\n                  <img\r\n                    src={displayImages[index + 2]}\r\n                    alt={`Image ${index + 3}`}\r\n                    style={{\r\n                      height: \"100%\",\r\n                      width: \"100%\",\r\n                      objectFit: \"cover\",\r\n                    }}\r\n                  />\r\n                )}\r\n              </Box>\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n\r\n      {hasMore && (\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            bottom: 10,\r\n            right: 10,\r\n            background: color.background,\r\n            color: \"white\",\r\n            borderRadius: \"8px\",\r\n            p: 1,\r\n            textAlign: \"center\",\r\n            cursor: \"pointer\",\r\n            boxShadow:\r\n              \"-4px -4px 10px rgba(32, 32, 32, 0.28) inset, 0px 0px 10px rgba(32, 32, 32, 0.28)\",\r\n          }}\r\n        >\r\n          <Typography variant=\"body2\">\r\n            + {isMobile ? propertyImages.length - 1 : propertyImages.length - 7} More\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: \"80%\",\r\n            height: \"80%\",\r\n            bgcolor: \"white\",\r\n            boxShadow: 24,\r\n            p: 2,\r\n            overflowY: \"auto\",\r\n            borderRadius: \"8px\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" textAlign=\"center\" mb={2}>\r\n            All Images\r\n          </Typography>\r\n\r\n          <Close\r\n            onClick={() => setOpen(false)}\r\n            sx={{\r\n              position: \"absolute\",\r\n              top: 10,\r\n              right: 10,\r\n            }}\r\n          ></Close>\r\n          <Box\r\n            display=\"grid\"\r\n            gap={2}\r\n            sx={{\r\n              gridTemplateColumns: \"repeat(auto-fill, minmax(150px, 1fr))\",\r\n            }}\r\n          >\r\n            {propertyImages.map((img, index) => (\r\n              <img\r\n                key={index}\r\n                src={img}\r\n                alt={`Image ${index + 1}`}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"150px\",\r\n                  objectFit: \"cover\",\r\n                  borderRadius: \"8px\",\r\n                }}\r\n              />\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </Box>\r\n  );\r\n};\r\n\r\n\r\n\r\n  \r\nexport const RoomAmenities = ({\r\n  room,\r\n}: {\r\n  room: { propertyName: string; amenities: string[] };\r\n}) => {\r\n  const [showAll, setShowAll] = useState(false);\r\n  const displayedAmenities = showAll\r\n    ? room.amenities\r\n    : room.amenities.slice(0, 6);\r\n  const halfIndex = Math.ceil(displayedAmenities.length / 2);\r\n  const firstColumn = displayedAmenities.slice(0, halfIndex);\r\n  const secondColumn = displayedAmenities.slice(halfIndex);\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ mt: { xs: 1, md: 0 } }}>\r\n        <Grid container spacing={{ xs: 1, md: 0 }}>\r\n          {[firstColumn, secondColumn].map((column, colIndex) => (\r\n            <Grid item xs={6} md={12} key={colIndex}>\r\n              <List disablePadding>\r\n                {column.map((amenity, index) => {\r\n                  const isLastItem =\r\n                    colIndex === 1 &&\r\n                    index === column.length - 1 &&\r\n                    room.amenities.length > 6;\r\n\r\n                  return (\r\n                    <ListItem\r\n                      key={index}\r\n                      sx={{\r\n                        py: 0.2,\r\n                        px: { xs: 0, md: 2 },\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        flexWrap: \"wrap\",\r\n                      }}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"flex-start\",\r\n                        }}\r\n                      >\r\n                        <ListItemIcon sx={{ minWidth: \"20px\", mt: 0.5 }}>\r\n                          <FiberManualRecord sx={{ fontSize: \"8px\" }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                          style={{ margin: 0 }}\r\n                          primary={amenity}\r\n                          primaryTypographyProps={{\r\n                            style: { fontSize: \"12px\" },\r\n                          }}\r\n                        />\r\n                      </div>\r\n\r\n                      {isLastItem && (\r\n                        <>\r\n                          <Button\r\n                            onClick={() => setShowAll(!showAll)}\r\n                            sx={{\r\n                              textTransform: \"none\",\r\n                              fontSize: \"14px\",\r\n                              ml: \"auto\",\r\n                              p: 0,\r\n                              color: color.firstColor,\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {showAll ? \"Show Less\" : \"... Show All\"}\r\n                          </Button>\r\n                          {showAll ? <ExpandLess /> : <ExpandMore />}\r\n                        </>\r\n                      )}\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getRatingText = (rating: number) => {\r\n  if (rating >= 4.5) return \"Excellent\";\r\n  if (rating >= 3.5) return \"Good\";\r\n  if (rating >= 2.5) return \"Average\";\r\n  if (rating >= 1.5) return \"Poor\";\r\n  return \"Very Poor\";\r\n};\r\n\r\nexport const getRatingColor = (rating: number) => {\r\n  if (rating >= 4.5) return \"#46b648\";\r\n  if (rating >= 3.5) return \"#b4d137\"; \r\n  if (rating >= 2.5) return \"#fed018\"; \r\n  if (rating >= 1.5) return \"#f7921e\"; \r\n  return \"#e91d26\"; \r\n};"],"names":["_ref","booking","hotelId","console","log","availability","setAvailability","useState","useEffect","getHotel","then","res","_res$data","_res$data$data","data","roomAvailable","_jsx","children","_jsxs","Box","sx","padding","background","color","thirdColor","boxShadow","borderRadius","display","justifyContent","alignItems","mb","Typography","variant","fontWeight","FormControl","width","firstColor","Button","onClick","toggleAvailability","newStatus","editHotel","catch","err","error","TableContainer","component","Paper","marginTop","Table","style","TableHead","TableRow","map","header","TableCell","fontSize","whiteSpace","TableBody","border","id","gap","Avatar","src","avatar","alt","geustName","checkInDate","checkInTime","checkOutDate","checkOutTime","Chip","label","status","backgroundColor","statusColor","hotelData","propertyName","size","price","amenities","image","MyHotelDetails","_hotelData1$propertyD","_hotelData1$propertyD2","_hotelData1$propertyD3","_roomData$amenities","selectedRoom","setSelectedRoom","isMobile","useMediaQuery","theme","breakpoints","down","useParams","setBooking","today","Date","next10Days","setDate","getDate","getAllBookingsofMyHotel","filter","page","pageSize","order","filteredBookings","rows","expanded","setExpanded","maxLength","value","setValue","navigate","useNavigate","hotelData1","setHotelData1","roomData","setRoomData","getMyAllHotelswithBelongsTo","secondTable","_res$data2","_res$data3","_res$data3$data$","_res$data4","_res$data4$data$","rooms","length","px","position","xs","md","BoxStyle","py","top","right","CustomButton","customStyles","startIcon","Edit","state","fontFamily","paperColor","mt","address","pr","mx","ImageGrid","propertyImages","Star","maxWidth","propertyDesc","substring","textTransform","p","ml","minWidth","flexWrap","pt","slice","amenity","index","flexDirection","icon","React","amenityIcons","AddCircleOutline","bgcolor","Tabs","onChange","event","newValue","forthColor","height","Tab","TabPanel","Grid","container","spacing","Array","isArray","room","item","Card","borderColor","overflow","CheckCircle","CardMedia","roomCategory","pl","transition","List","pb","RoomAmenities","bottom","margin","Object","keys","slot","StyledToggleButton","lineHeight","BookingTable","styled","ToggleButton","_ref2","hidden","PoolIcon","Gym","FitnessCenterIcon","WifiIcon","BeachAccessIcon","Breakfast","FreeBreakfastIcon","Parking","LocalParkingIcon","Spa","SpaIcon","Restaurant","LocalDiningIcon","AirportShuttleIcon","BusinessCenterIcon","PetsIcon","Bar","LocalBarIcon","RoomServiceIcon","TV","TvIcon","AcUnitIcon","LocalLaundryServiceIcon","ChildCareIcon","KingBedIcon","Casino","CasinoIcon","DirectionsCarIcon","NightlifeIcon","SportsTennisIcon","OutdoorGrillIcon","FireExtinguisherIcon","amenitiesOptions","roomTypes","details","my","BpRadio","props","Radio","disableRipple","checkedIcon","BpCheckedIcon","BpIcon","backgroundImage","outline","outlineOffset","applyStyles","secondColor","content","StyledLabel","FormControlLabel","checked","paddingLeft","marginLeft","paddingRight","CustomRadio","CustomNextArrow","IconButton","transform","zIndex","ArrowForwardIos","CustomTextField","TextField","marginBottom","LoginTextField","useScreenSize","useTheme","isBelow400px","inputSx","boxSizing","borderBottom","_ref3","maxImages","Math","min","displayImages","hasMore","open","setOpen","gridTemplateColumns","gridTemplateRows","objectFit","gridColumn","gridRow","textAlign","cursor","Modal","onClose","left","overflowY","Close","img","_ref4","showAll","setShowAll","displayedAmenities","halfIndex","ceil","firstColumn","secondColumn","_Fragment","column","colIndex","disablePadding","isLastItem","ListItem","ListItemIcon","FiberManualRecord","ListItemText","primary","primaryTypographyProps","ExpandLess","ExpandMore","getRatingText","rating","getRatingColor"],"sourceRoot":""}