{"version":3,"file":"static/js/706.3399b9ad.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/StarRounded.js","../node_modules/@mui/material/DialogTitle/DialogTitle.js","components/Payments/RanderPayments.tsx","pages/BookingSummary.tsx","services/services.ts"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"m12 17.27 4.15 2.51c.76.46 1.69-.22 1.49-1.08l-1.1-4.72 3.67-3.18c.67-.58.31-1.68-.57-1.75l-4.83-.41-1.89-4.46c-.34-.81-1.5-.81-1.84 0L9.19 8.63l-4.83.41c-.88.07-1.24 1.17-.57 1.75l3.67 3.18-1.1 4.72c-.2.86.73 1.54 1.49 1.08z\"\n}), 'StarRounded');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography from \"../Typography/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getDialogTitleUtilityClass } from \"./dialogTitleClasses.js\";\nimport DialogContext from \"../Dialog/DialogContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n  const {\n    className,\n    id: idProp,\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, {\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: idProp ?? titleId,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;","import React, { useState } from \"react\";\r\nimport { verifyPayment } from \"../../services/services\";\r\nimport { R_KEY_ID, R_KEY_SECRET } from \"../../services/Secret\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n} from \"@mui/material\";\r\nimport color from \"../color\";\r\nimport { toast } from \"react-toastify\";\r\n\r\ninterface RenderRazorpayProps {\r\n    orderDetails: any;\r\n    amount: any;\r\n\r\n}\r\n\r\nconst RenderRazorpay: React.FC<RenderRazorpayProps> = ({\r\n    orderDetails,\r\n    amount,\r\n\r\n}) => {\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = useState(true);\r\n\r\n    const loadScript = (src: string): Promise<boolean> =>\r\n        new Promise((resolve) => {\r\n            const script = document.createElement(\"script\");\r\n            script.src = src;\r\n            script.onload = () => resolve(true);\r\n            script.onerror = () => resolve(false);\r\n            document.body.appendChild(script);\r\n        });\r\n\r\n    const displayRazorpay = async () => {\r\n        const isScriptLoaded = await loadScript(\r\n            \"https://checkout.razorpay.com/v1/checkout.js\"\r\n        );\r\n\r\n        if (!isScriptLoaded) {\r\n            alert(\r\n                \"Failed to load Razorpay SDK. Please check your internet connection.\"\r\n            );\r\n            return;\r\n        }\r\n\r\n        if (!(window as any).Razorpay) {\r\n            alert(\"Razorpay SDK is not available. Try reloading the page.\");\r\n            return;\r\n        }\r\n\r\n        console.log(orderDetails)\r\n        const options = {\r\n            key: R_KEY_ID || \"\",\r\n            amount: orderDetails.data.amount,\r\n            currency: orderDetails.data.currency,\r\n            order_id: orderDetails.data.id,\r\n            handler: async (response: any) => {\r\n                try {\r\n                    await verifyPayment({\r\n                        orderId: response.razorpay_order_id,\r\n                        paymentId: response.razorpay_payment_id,\r\n                        signature: response.razorpay_signature,\r\n                    });\r\n                    alert(\"Payment Successful\");\r\n                    // const payLoad = {\r\n                    //     transactionId: response.razorpay_payment_id,\r\n                    //     status: \"success\",\r\n                    //     amount: amount,\r\n                    //     courseId: courseId,\r\n                    //     userId: userId,\r\n                    // };\r\n                    // console.log(payLoad);\r\n                    // navigate(\"/my-courses\");\r\n                    // toast('payment Successful!')\r\n                    navigate('/');\r\n                } catch (error) {\r\n                    alert(\"Payment verification failed. Please try again.\");\r\n                }\r\n            },\r\n        };\r\n\r\n        const razorpay = new (window as any).Razorpay(options);\r\n        razorpay.open();\r\n    };\r\n\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                maxWidth=\"xs\"\r\n                fullWidth\r\n                sx={{\r\n                    \"& .MuiPaper-root\": {\r\n                        padding: \"8px\",\r\n                        borderRadius: \"16px\",\r\n                    },\r\n                }}\r\n            >\r\n                <DialogTitle>Complete Your Payment</DialogTitle>\r\n                <DialogContent>\r\n                    <p>Ensure your payment details are correct before proceeding.</p>\r\n                </DialogContent>\r\n                <DialogActions style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                    <Button\r\n                        style={{\r\n                            textTransform: \"none\",\r\n                            color: \"black\",\r\n                        }}\r\n                        onClick={handleClose}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={displayRazorpay}\r\n                        variant=\"contained\"\r\n                        style={{\r\n                            background: color.firstColor,\r\n                            fontSize: \"18px\",\r\n                            textTransform: \"none\",\r\n                            border: \"solid 1px white\",\r\n                        }}\r\n                        sx={{\r\n                            padding: \"2px 10px\",\r\n                            transition: \"all 0.4s ease\",\r\n                            \"&:hover\": {\r\n                                paddingRight: \"20px\",\r\n                            },\r\n                        }}\r\n                    >\r\n                        Proceed to Pay\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RenderRazorpay;\r\n","import { StarRounded } from \"@mui/icons-material\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Divider,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport CustomButton from \"../components/CustomButton\";\r\nimport color from \"../components/color\";\r\nimport { BoxStyle, CustomTextField } from \"../components/style\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { createOrder, getPortfolioDetails, Signup } from \"../services/services\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useEffect, useState } from \"react\";\r\nimport RenderRazorpay from \"../components/Payments/RanderPayments\";\r\n\r\nconst bookingData = {\r\n  hotelName: \"Best Western Ashoka\",\r\n  location: \"Lakdi ka pool\",\r\n  rating: 4.3,\r\n  reviews: 130,\r\n  checkInDate: \"27 Feb 25\",\r\n  checkInTime: \"2:00 PM\",\r\n  checkOutDate: \"27 Feb 25\",\r\n  checkOutTime: \"5:00 PM\",\r\n  duration: \"3 Hours\",\r\n  roomInfo: \"1 Room, 2 Guests\",\r\n  roomPrice: \"700.00\",\r\n  //   bookingType: \"Hourly Booking of 3 Hours\",\r\n  roomName: \"Superior Double Room\",\r\n  guest: {\r\n    name: \"\",\r\n    email: \"\",\r\n\r\n  },\r\n};\r\nconst validationSchema = Yup.object({\r\n  name: Yup.string().required(\"Name is required\"),\r\n  email: Yup.string().email(\"Invalid email\").optional(),\r\n});\r\n\r\nconst BookingSummary = () => {\r\n  const location = useLocation();\r\n  const phoneNumber = location.state?.phoneNumber;\r\n\r\n  const [user, setUser] = useState<any>({});\r\n  console.log(user)\r\n\r\n\r\n  useEffect(() => {\r\n    getPortfolioDetails(phoneNumber.slice(2)).then((res) => {\r\n      setUser(res?.data?.data);\r\n    }).catch((err) => {\r\n      console.log(err);\r\n    })\r\n  }, [])\r\n  const [orderDetails, setOrderDetails] = useState(null);\r\n  // console.log(orderDetails)\r\n  const handlePayment = async () => {\r\n    try {\r\n      const roomPrice = parseFloat(bookingData.roomPrice) || 0;\r\n      const serviceCharges = 200;\r\n      const totalAmount = roomPrice + serviceCharges;\r\n\r\n      console.log(\"Total Amount before payment:\", totalAmount);\r\n\r\n      if (totalAmount === 0) {\r\n        alert(\"Booking amount cannot be zero.\");\r\n        return;\r\n      }\r\n\r\n      const payLoad = {\r\n        amount: totalAmount,\r\n        currency: \"INR\",\r\n      };\r\n\r\n      console.log(\"Payload sent to createOrder:\", payLoad);\r\n      const response = await createOrder(payLoad);\r\n\r\n      console.log(\"Payment Response:\", response);\r\n\r\n      if (response?.data) {\r\n        // alert(\"Payment successful!\");\r\n        setOrderDetails(response.data);\r\n      } else {\r\n        alert(\"Payment failed. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during payment:\", error);\r\n      alert(\"Payment failed. Please try again.\");\r\n    }\r\n  };\r\n\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: user?.userName || \"\",\r\n      email: user?.email || \"\",\r\n    },\r\n    validationSchema,\r\n    enableReinitialize: true,\r\n    onSubmit: (values) => {\r\n      // console.log(\"Form submitted with values:\", values);\r\n      const payLoad = {\r\n        userName: values.name,\r\n        email: values.email,\r\n        phoneNumber: phoneNumber.slice(2),\r\n        isVerified: true\r\n      }\r\n      if (user?.data === null) {\r\n        Signup(payLoad).then((res) => {\r\n          console.log(res)\r\n        }).catch((err) => {\r\n          toast(err);\r\n        })\r\n        handlePayment();\r\n      } else {\r\n        handlePayment();\r\n      }\r\n\r\n    },\r\n\r\n  });\r\n  return (\r\n    <Box\r\n      sx={{\r\n        ...BoxStyle,\r\n        background: \"#f6f6f6\",\r\n        mt: 0,\r\n        py: 4,\r\n        px: { xs: 1, md: 3 },\r\n        display: \"flex\",\r\n        flexDirection: { xs: \"column\", md: \"row\" },\r\n\r\n        // alignItems:'center',\r\n        justifyContent: \"center\",\r\n        gap: \"20px\",\r\n      }}\r\n    >\r\n      <Card\r\n        sx={{\r\n          p: 1,\r\n          background: \"white\",\r\n          maxWidth: \"700px\",\r\n          border: \"none\",\r\n          boxShadow: 0,\r\n          borderRadius: \"12px\",\r\n        }}\r\n      >\r\n        <CardContent>\r\n          <Typography\r\n            variant=\"h6\"\r\n            gutterBottom\r\n            sx={{ color: color.firstColor, fontWeight: \"bold\" }}\r\n          >\r\n            Your Booking Summary\r\n          </Typography>\r\n          {/* <Divider sx={{ mb: 2 }} /> */}\r\n\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: { xs: \"column\", md: \"row\" },\r\n              gap: { xs: 0, md: 2 },\r\n              position: \"relative\",\r\n              mt: 2,\r\n            }}\r\n          >\r\n            <CardMedia\r\n              component=\"img\"\r\n              sx={{\r\n                width: { xs: \"100%\", md: \"250px\" },\r\n                borderRadius: \"12px\",\r\n              }}\r\n              image=\"https://s3.ap-south-1.amazonaws.com/huts4u.shop/room-image+1.jpg\"\r\n            />\r\n            <div>\r\n              <Typography\r\n                sx={{\r\n                  fontSize: \"20px\",\r\n                  fontWeight: 600,\r\n                  color: color.firstColor,\r\n                  mt: { xs: 1.5, md: 1 },\r\n                  display: \"-webkit-box\",\r\n                  overflow: \"hidden\",\r\n                  textOverflow: \"ellipsis\",\r\n                  WebkitLineClamp: 1,\r\n                  WebkitBoxOrient: \"vertical\",\r\n                }}\r\n              >\r\n                {bookingData.hotelName}\r\n              </Typography>\r\n              <Typography\r\n                sx={{\r\n                  fontFamily: \"CustomFontSB\",\r\n                  fontSize: { xs: \"12px\", md: \"14px\" },\r\n                  display: \"-webkit-box\",\r\n                  overflow: \"hidden\",\r\n                  textOverflow: \"ellipsis\",\r\n                  WebkitLineClamp: 1,\r\n                  WebkitBoxOrient: \"vertical\",\r\n                }}\r\n              >\r\n                {bookingData.location}\r\n              </Typography>\r\n\r\n              <Box\r\n                sx={{\r\n                  position: \"absolute\",\r\n                  top: 4,\r\n                  right: 6,\r\n                  //   display: { xs: \"none\", md: \"flex\" },\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  gap: \"6px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  fontWeight={600}\r\n                  color={color.thirdColor}\r\n                  sx={{\r\n                    background: color.background,\r\n                    px: 1,\r\n                    borderRadius: \"4px\",\r\n                    fontSize: \"18px\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  {bookingData.rating} <StarRounded></StarRounded>\r\n                </Typography>\r\n\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  fontWeight={600}\r\n                  color={color.firstColor}\r\n                  lineHeight={1}\r\n                  sx={{\r\n                    fontSize: \"10px\",\r\n                    background: \"white\",\r\n                    mt: 0.5,\r\n                    p: 0.5,\r\n                    borderRadius: \"4px\",\r\n                  }}\r\n                >\r\n                  ({bookingData.reviews} reviews)\r\n                </Typography>\r\n              </Box>\r\n              <div\r\n                style={{\r\n                  marginTop: \"10px\",\r\n                  display: \"flex\",\r\n                  flexWrap: \"wrap\",\r\n                  flexDirection: \"column\",\r\n                  gap: \"4px\",\r\n                }}\r\n              >\r\n                <Typography sx={typoStyle}>\r\n                  <strong>Check-In:</strong> {bookingData.checkInDate},{\" \"}\r\n                  {bookingData.checkInTime}\r\n                </Typography>\r\n                <Typography sx={typoStyle}>\r\n                  <strong>Check-Out:</strong> {bookingData.checkOutDate},{\" \"}\r\n                  {bookingData.checkOutTime}\r\n                </Typography>\r\n                <Typography sx={typoStyle}>\r\n                  <strong>Duration: </strong>\r\n                  {bookingData.duration}\r\n                </Typography>\r\n                <Typography sx={typoStyle}>\r\n                  <strong>Room Type:</strong> {bookingData.roomName}\r\n                </Typography>\r\n                <Typography sx={typoStyle}>\r\n                  <strong>Room Info: </strong>\r\n                  {bookingData.roomInfo}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </Box>\r\n\r\n          {/* <Typography variant=\"subtitle1\" sx={{ mt: 2 }}>\r\n            {bookingData.bookingType}\r\n          </Typography> */}\r\n          {/* <Divider sx={{ my: 2 }} /> */}\r\n\r\n          {/* <Typography\r\n            variant=\"h6\"\r\n            mt={4}\r\n            sx={{ color: color.firstColor, fontWeight: \"bold\" }}\r\n          >\r\n            Guest Information\r\n          </Typography> */}\r\n          {/* <CustomTextField\r\n            label=\"Guest Name\"\r\n            value={bookingData.guest.name}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <CustomTextField\r\n            label=\"Email Address (Optional)\"\r\n            value={bookingData.guest.email}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          /> */}\r\n          {/* <CustomTextField\r\n            label=\"Mobile Number\"\r\n            value={bookingData.guest.phone}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          /> */}\r\n          {/* <CustomButton\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            fullWidth\r\n            sx={{ mt: 2 }}\r\n          >\r\n            Pay Now\r\n          </CustomButton> */}\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <Typography variant=\"h6\" mt={4} sx={{ color: color.firstColor, fontWeight: \"bold\" }}>\r\n              Guest Information\r\n            </Typography>\r\n\r\n            {/* Guest Name Field */}\r\n            <CustomTextField\r\n              label=\"Guest Name\"\r\n              name=\"name\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              value={formik.values.name}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.name && Boolean(formik.errors.name)}\r\n            // helperText={formik.touched.name && formik.errors.name}\r\n            />\r\n\r\n            {/* Email Field */}\r\n            <CustomTextField\r\n              label=\"Email Address (Optional)\"\r\n              name=\"email\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n            // helperText={formik.touched.email && formik.errors.email}\r\n            />\r\n\r\n            <CustomButton variant=\"contained\" color=\"primary\" fullWidth sx={{ mt: 2 }} type=\"submit\">\r\n              Pay Now\r\n            </CustomButton>\r\n            {orderDetails && (\r\n              <RenderRazorpay\r\n                orderDetails={orderDetails}\r\n                amount={bookingData.roomPrice}\r\n              // courseId={cartItems[0].id}\r\n              // userId={getUserId()}\r\n              />\r\n            )}\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card\r\n        sx={{\r\n          p: 1,\r\n          background: \"white\",\r\n          border: \"none\",\r\n          boxShadow: 0,\r\n          borderRadius: \"12px\",\r\n          height: \"fit-content\",\r\n        }}\r\n      >\r\n        <CardContent>\r\n          <Typography\r\n            variant=\"h6\"\r\n            gutterBottom\r\n            sx={{ color: color.firstColor, fontWeight: \"bold\" }}\r\n          >\r\n            Your Bil Summary\r\n          </Typography>\r\n\r\n          <div\r\n            style={{\r\n              marginTop: \"10px\",\r\n              display: \"flex\",\r\n              flexWrap: \"wrap\",\r\n              flexDirection: \"column\",\r\n              gap: \"4px\",\r\n            }}\r\n          >\r\n            <Typography sx={typoStyle}>\r\n              <strong>Room price: </strong>₹{bookingData.roomPrice}\r\n            </Typography>\r\n            <Typography sx={typoStyle}>\r\n              <strong>Service Charges: </strong>₹200.00\r\n            </Typography>\r\n\r\n            <Divider sx={{ my: 2 }}></Divider>\r\n\r\n            <Typography\r\n              variant=\"h6\"\r\n              sx={{\r\n                color: color.firstColor,\r\n                fontWeight: \"bold\",\r\n                lineHeight: 1,\r\n              }}\r\n            >\r\n              Total price: ₹{Number(bookingData.roomPrice) + 200}.00 <br />\r\n              <span style={{ fontSize: \"12px\", fontWeight: \"normal\" }}>\r\n                incl. of all taxes\r\n              </span>\r\n            </Typography>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BookingSummary;\r\n\r\nconst typoStyle = {\r\n  borderRadius: \"52px\",\r\n  boxShadow: \"4px 4px 10px rgba(104, 39, 184, 0.17)\",\r\n  color: color.firstColor,\r\n  background: \"white\",\r\n  //   fontWeight: \"bold\",\r\n  fontSize: { xs: \"12px\", md: \"14px\" },\r\n  width: \"fit-content\",\r\n  p: 1,\r\n  px: 2,\r\n  mb: 1,\r\n};\r\n","import { client } from \"./axiosClient\";\r\n\r\n\r\nexport function sendOTP(payLoad:any){\r\n    return client.post('/auth/send-otp', payLoad);\r\n}\r\n\r\nexport function verifyOTP(payLoad:any){\r\n    return client.post('/auth/verify-otp', payLoad);\r\n}\r\n\r\nexport function Signup(payLoad:any){\r\n    return client.post('/auth/create', payLoad);\r\n}\r\nexport function getPortfolioDetails(phoneNumber: any) {\r\n    return client.get(`/User/search-one-record`, { params: { phoneNumber } });\r\n};\r\n\r\nexport function verifyPayment (payload:any) {\r\n    return client.post(`/razorpay/verify`, payload);\r\n};\r\nexport function createOrder (payload:any) {\r\n    return client.post(`/razorpay/orders`, payload);\r\n  };\r\n  "],"names":["createSvgIcon","_jsx","d","DialogTitleRoot","styled","Typography","name","slot","overridesResolver","props","styles","root","padding","flex","React","inProps","ref","useDefaultProps","className","id","idProp","other","ownerState","classes","composeClasses","getDialogTitleUtilityClass","useUtilityClasses","titleId","DialogContext","component","clsx","variant","_ref","orderDetails","amount","navigate","useNavigate","open","setOpen","useState","handleClose","children","_jsxs","Dialog","onClose","maxWidth","fullWidth","sx","borderRadius","DialogTitle","DialogContent","DialogActions","style","display","justifyContent","Button","textTransform","color","onClick","async","src","Promise","resolve","script","document","createElement","onload","onerror","body","appendChild","alert","window","Razorpay","console","log","options","key","R_KEY_ID","data","currency","order_id","handler","verifyPayment","orderId","response","razorpay_order_id","paymentId","razorpay_payment_id","signature","razorpay_signature","error","background","firstColor","fontSize","border","transition","paddingRight","bookingData","validationSchema","Yup","required","email","optional","BookingSummary","_location$state","phoneNumber","useLocation","state","user","setUser","useEffect","getPortfolioDetails","slice","then","res","_res$data","catch","err","setOrderDetails","handlePayment","roomPrice","parseFloat","totalAmount","payLoad","createOrder","formik","useFormik","initialValues","userName","enableReinitialize","onSubmit","values","isVerified","Signup","toast","Box","BoxStyle","mt","py","px","xs","md","flexDirection","gap","Card","p","boxShadow","CardContent","gutterBottom","fontWeight","position","CardMedia","width","image","overflow","textOverflow","WebkitLineClamp","WebkitBoxOrient","fontFamily","top","right","alignItems","thirdColor","StarRounded","lineHeight","marginTop","flexWrap","typoStyle","handleSubmit","CustomTextField","label","margin","value","onChange","handleChange","onBlur","handleBlur","touched","Boolean","errors","CustomButton","type","RenderRazorpay","height","Divider","my","Number","mb","sendOTP","client","post","verifyOTP","get","params","payload"],"sourceRoot":""}