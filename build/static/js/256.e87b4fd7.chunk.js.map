{"version":3,"file":"static/js/256.e87b4fd7.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/HeadsetMic.js","../node_modules/@mui/icons-material/esm/Language.js","pages/ContactUs.tsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 1c-4.97 0-9 4.03-9 9v7c0 1.66 1.34 3 3 3h3v-8H5v-2c0-3.87 3.13-7 7-7s7 3.13 7 7v2h-4v8h4v1h-7v2h6c1.66 0 3-1.34 3-3V10c0-4.97-4.03-9-9-9\"\n}), 'HeadsetMic');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2m6.93 6h-2.95c-.32-1.25-.78-2.45-1.38-3.56 1.84.63 3.37 1.91 4.33 3.56M12 4.04c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96M4.26 14C4.1 13.36 4 12.69 4 12s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2s.06 1.34.14 2zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56-1.84-.63-3.37-1.9-4.33-3.56m2.95-8H5.08c.96-1.66 2.49-2.93 4.33-3.56C8.81 5.55 8.35 6.75 8.03 8M12 19.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96M14.34 14H9.66c-.09-.66-.16-1.32-.16-2s.07-1.35.16-2h4.68c.09.65.16 1.32.16 2s-.07 1.34-.16 2m.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95c-.96 1.65-2.49 2.93-4.33 3.56M16.36 14c.08-.66.14-1.32.14-2s-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2z\"\n}), 'Language');","import EmailIcon from \"@mui/icons-material/Email\";\r\nimport HeadsetMicIcon from \"@mui/icons-material/HeadsetMic\";\r\nimport LanguageIcon from \"@mui/icons-material/Language\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport color from \"../components/color\";\r\nimport CustomButton from \"../components/CustomButton\";\r\nimport { CustomTextField } from \"../components/style\";\r\n\r\nconst modalStyle = {\r\n  bgcolor: \"background.paper\",\r\n  p: 4,\r\n  borderRadius: 2,\r\n  m: \"auto\",\r\n  my: 4,\r\n  boxShadow: \"4px 4px 10px rgba(104, 39, 184, 0.17)\",\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  name: Yup.string().required(\"Name is required\"),\r\n  email: Yup.string()\r\n    .email(\"Invalid email address\")\r\n    .required(\"Email is required\"),\r\n  subject: Yup.string().required(\"Subject is required\"),\r\n  message: Yup.string().required(\"Message is required\"),\r\n  phone: Yup.string()\r\n    .matches(/^[0-9]{10}$/, \"Phone number must be exactly 10 digits\")\r\n    .required(\"Phone number is required\"),\r\n});\r\n\r\nconst ContactUs = ({ open, handleClose }: any) => {\r\n  const initialValues = {\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\",\r\n    phone: \"\",\r\n  };\r\n\r\n  const handleSubmit = (values: any, { setSubmitting }: any) => {\r\n    console.log(values);\r\n    setSubmitting(false);\r\n    handleClose();\r\n  };\r\n\r\n  const contactDetails = [\r\n    {\r\n      icon: <LanguageIcon style={{ fontSize: 40 }} />,\r\n      title: \"Hotel Address\",\r\n      info: \"25 North Street, Dubai\",\r\n    },\r\n    {\r\n      icon: <EmailIcon style={{ fontSize: 40 }} />,\r\n      title: \"Official Mail\",\r\n      info: \"info@huts4u.com\",\r\n    },\r\n    {\r\n      icon: <HeadsetMicIcon style={{ fontSize: 40 }} />,\r\n      title: \"Official Phone\",\r\n      info: \"+91 256-987-239\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box>\r\n      {/* <div style={{ position: \"relative\" }}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          sx={{\r\n            height: \"400px\",\r\n            width: \"100%\",\r\n            objectFit: \"cover\",\r\n            objectPosition: \"center\",\r\n          }}\r\n          image=\"/assets/bg.jpg\"\r\n        />\r\n      </div> */}\r\n\r\n      <Container\r\n        style={{\r\n          maxWidth: 1200,\r\n          marginTop: \"30px\",\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"h4\"\r\n          fontWeight=\"bold\"\r\n          color={\"white\"}\r\n          fontFamily={\"CustomFontB\"}\r\n          textAlign={\"center\"}\r\n          sx={{\r\n            background: color.firstColor,\r\n            width: \"fit-content\",\r\n            px: 2,\r\n            borderRadius: \"4px\",\r\n            margin: \"auto\",\r\n            mb: 4,\r\n            // position: \"absolute\",\r\n            // top: \"50%\",\r\n            // left: \"50%\",\r\n            // transform: \"translate(-50%,-50%)\",\r\n          }}\r\n        >\r\n          Contact Us\r\n        </Typography>\r\n\r\n        <Grid container spacing={3} justifyContent=\"center\">\r\n          {contactDetails.map((item, index) => (\r\n            <Grid item key={index} xs={12} sm={6} md={4}>\r\n              <Card\r\n                elevation={3}\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  padding: \"20px\",\r\n                  borderRadius: \"12px\",\r\n                  boxShadow: \"4px 4px 10px rgba(104, 39, 184, 0.17)\",\r\n                }}\r\n              >\r\n                <CardContent>\r\n                  <div\r\n                    style={{ marginBottom: \"10px\", color: color.firstColor }}\r\n                  >\r\n                    {item.icon}\r\n                  </div>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    {item.title}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" fontWeight=\"bold\">\r\n                    {item.info}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n        <Box sx={modalStyle}>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            textAlign={\"center\"}\r\n          >\r\n            <Typography\r\n              variant=\"h4\"\r\n              fontWeight=\"bold\"\r\n              mb={1}\r\n              width={\"100%\"}\r\n              color={color.firstColor}\r\n              fontFamily={\"CustomFontB\"}\r\n            >\r\n              Send a Message\r\n            </Typography>\r\n          </Box>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            {({ isSubmitting, touched, errors }) => (\r\n              <Form\r\n                style={{\r\n                  marginTop: \"16px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  gap: \"16px\",\r\n                }}\r\n              >\r\n                <Box sx={{ display: \"flex\", gap: \"6px\" }}>\r\n                  <CustomTextField\r\n                    as={TextField}\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    fullWidth\r\n                    error={touched.name && Boolean(errors.name)}\r\n                    helperText={touched.name && errors.name}\r\n                  />\r\n                  <CustomTextField\r\n                    as={TextField}\r\n                    label=\"Phone Number\"\r\n                    name=\"phone\"\r\n                    fullWidth\r\n                    error={touched.phone && Boolean(errors.phone)}\r\n                    helperText={touched.phone && errors.phone}\r\n                  />\r\n                </Box>\r\n\r\n                <Box sx={{ display: \"flex\", gap: \"6px\" }}>\r\n                  <CustomTextField\r\n                    as={TextField}\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    fullWidth\r\n                    error={touched.email && Boolean(errors.email)}\r\n                    helperText={touched.email && errors.email}\r\n                  />\r\n                  <CustomTextField\r\n                    as={TextField}\r\n                    label=\"Subject\"\r\n                    name=\"subject\"\r\n                    fullWidth\r\n                    error={touched.subject && Boolean(errors.subject)}\r\n                    helperText={touched.subject && errors.subject}\r\n                  />\r\n                </Box>\r\n\r\n                <CustomTextField\r\n                  as={TextField}\r\n                  label=\"Message\"\r\n                  name=\"message\"\r\n                  multiline\r\n                  rows={4}\r\n                  fullWidth\r\n                  error={touched.message && Boolean(errors.message)}\r\n                  helperText={touched.message && errors.message}\r\n                />\r\n\r\n                <CustomButton variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                  Submit\r\n                </CustomButton>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ContactUs;\r\n"],"names":["createSvgIcon","_jsx","d","modalStyle","bgcolor","p","borderRadius","m","my","boxShadow","validationSchema","Yup","name","required","email","subject","message","phone","matches","_ref","open","handleClose","contactDetails","icon","LanguageIcon","style","fontSize","title","info","EmailIcon","HeadsetMicIcon","Box","children","_jsxs","Container","maxWidth","marginTop","Typography","variant","fontWeight","color","fontFamily","textAlign","sx","background","firstColor","width","px","margin","mb","Grid","container","spacing","justifyContent","map","item","index","xs","sm","md","Card","elevation","padding","CardContent","marginBottom","display","alignItems","Formik","initialValues","onSubmit","handleSubmit","values","_ref2","setSubmitting","console","log","_ref3","isSubmitting","touched","errors","Form","flexDirection","gap","CustomTextField","as","TextField","label","fullWidth","error","Boolean","helperText","multiline","rows","CustomButton","type"],"sourceRoot":""}