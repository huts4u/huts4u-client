{"version":3,"file":"static/js/18.008bae10.chunk.js","mappings":"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","sources":["components/Payments/RanderPayments.tsx","pages/BookingSummary.tsx","components/style.tsx","pages/Account/LoginOtpModal.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { postBooking, verifyPayment } from \"../../services/services\";\r\nimport { R_KEY_ID, R_KEY_SECRET } from \"../../services/Secret\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n} from \"@mui/material\";\r\nimport color from \"../color\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getUserId } from \"../../services/axiosClient\";\r\ninterface BookingDetails {\r\n    hotel: any;\r\n    room: any;\r\n    guestInfo: {\r\n        name: string;\r\n        email: string;\r\n        phoneNumber: string;\r\n    };\r\n    timing: {\r\n        checkInDate: string;\r\n        checkInTime: string;\r\n        checkOutDate: string;\r\n        checkOutTime: string;\r\n        duration: string;\r\n    };\r\n    pricingDetails: any;\r\n    bookingType: string | null;\r\n    rooms: string | null;\r\n    adults: string | null;\r\n    children: string | null;\r\n}\r\n\r\ninterface RenderRazorpayProps {\r\n    orderDetails: any;\r\n    amount: any;\r\n    bookingDetails: BookingDetails;\r\n\r\n}\r\n\r\n\r\nconst RenderRazorpay: React.FC<RenderRazorpayProps> = ({\r\n    orderDetails,\r\n    // amount,\r\n    bookingDetails\r\n\r\n}) => {\r\n    console.log(bookingDetails)\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = useState(true);\r\n\r\n    const loadScript = (src: string): Promise<boolean> =>\r\n        new Promise((resolve) => {\r\n            const script = document.createElement(\"script\");\r\n            script.src = src;\r\n            script.onload = () => resolve(true);\r\n            script.onerror = () => resolve(false);\r\n            document.body.appendChild(script);\r\n        });\r\n\r\n    const displayRazorpay = async () => {\r\n        const isScriptLoaded = await loadScript(\r\n            \"https://checkout.razorpay.com/v1/checkout.js\"\r\n        );\r\n\r\n        if (!isScriptLoaded) {\r\n            alert(\r\n                \"Failed to load Razorpay SDK. Please check your internet connection.\"\r\n            );\r\n            return;\r\n        }\r\n\r\n        if (!(window as any).Razorpay) {\r\n            alert(\"Razorpay SDK is not available. Try reloading the page.\");\r\n            return;\r\n        }\r\n\r\n        // console.log(orderDetails)\r\n        const options = {\r\n            key: R_KEY_ID || \"\",\r\n            amount: orderDetails.data.amount,\r\n            currency: orderDetails.data.currency,\r\n            order_id: orderDetails.data.id,\r\n            handler: async (response: any) => {\r\n                try {\r\n                    await verifyPayment({\r\n                        orderId: response.razorpay_order_id,\r\n                        paymentId: response.razorpay_payment_id,\r\n                        signature: response.razorpay_signature,\r\n                    });\r\n                    alert(\"Payment Successful\");\r\n                    const payLoad = {\r\n                        userId: getUserId(),\r\n                        hotelId: bookingDetails?.hotel?.id,\r\n                        geustName: bookingDetails?.guestInfo?.name,\r\n                        amountPaid: orderDetails.data.amount,\r\n                        checkInDate: bookingDetails?.timing?.checkInDate,\r\n                        checkInTime: bookingDetails?.timing?.checkInTime,\r\n                        checkOutDate: bookingDetails?.timing?.checkOutDate,\r\n                        checkOutTime: bookingDetails?.timing?.checkOutTime,\r\n                        bookingType: bookingDetails?.bookingType,\r\n                        geustDetails: bookingDetails?.guestInfo,\r\n                        adults: bookingDetails?.adults,\r\n                        children: bookingDetails?.children,\r\n                        hotelName: bookingDetails?.hotel?.propertyName,\r\n                        status: 'pending'\r\n                    }\r\n\r\n                    postBooking(payLoad).then((res) => {\r\n\r\n                        toast(res?.data?.msg)\r\n                    }).catch((err) => {\r\n                        console.log(err);\r\n                    })\r\n                    navigate('/my-bookings');\r\n\r\n                } catch (error) {\r\n                    alert(\"Payment verification failed. Please try again.\");\r\n                }\r\n            },\r\n        };\r\n\r\n        const razorpay = new (window as any).Razorpay(options);\r\n        razorpay.open();\r\n    };\r\n\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                maxWidth=\"xs\"\r\n                fullWidth\r\n                sx={{\r\n                    \"& .MuiPaper-root\": {\r\n                        padding: \"8px\",\r\n                        borderRadius: \"16px\",\r\n                    },\r\n                }}\r\n            >\r\n                <DialogTitle>Complete Your Payment</DialogTitle>\r\n                <DialogContent>\r\n                    <p>Ensure your payment details are correct before proceeding.</p>\r\n                </DialogContent>\r\n                <DialogActions style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                    <Button\r\n                        style={{\r\n                            textTransform: \"none\",\r\n                            color: \"black\",\r\n                        }}\r\n                        onClick={handleClose}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={displayRazorpay}\r\n                        variant=\"contained\"\r\n                        style={{\r\n                            background: color.firstColor,\r\n                            fontSize: \"18px\",\r\n                            textTransform: \"none\",\r\n                            border: \"solid 1px white\",\r\n                        }}\r\n                        sx={{\r\n                            padding: \"2px 10px\",\r\n                            transition: \"all 0.4s ease\",\r\n                            \"&:hover\": {\r\n                                paddingRight: \"20px\",\r\n                            },\r\n                        }}\r\n                    >\r\n                        Proceed to Pay\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RenderRazorpay;\r\n","import {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Divider,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport dayjs from \"dayjs\";\r\nimport { useFormik } from \"formik\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as Yup from \"yup\";\r\nimport CustomButton from \"../components/CustomButton\";\r\nimport RenderRazorpay from \"../components/Payments/RanderPayments\";\r\nimport color from \"../components/color\";\r\nimport { BoxStyle, CustomTextField } from \"../components/style\";\r\nimport { isLoggedIn } from \"../services/axiosClient\";\r\nimport { createOrder, getProfile, sendOTP } from \"../services/services\";\r\nimport LoginOtpModal from \"./Account/LoginOtpModal\";\r\n\r\nconst bookingData = {\r\n  hotelName: \"Best Western Ashoka\",\r\n  location: \"Lakdi ka pool\",\r\n  rating: 4.3,\r\n  reviews: 130,\r\n  checkInDate: \"27 Feb 25\",\r\n  checkInTime: \"2:00 PM\",\r\n  checkOutDate: \"27 Feb 25\",\r\n  checkOutTime: \"5:00 PM\",\r\n  duration: \"3 Hours\",\r\n  roomInfo: \"1 Room, 2 Guests\",\r\n  roomPrice: \"700.00\",\r\n  //   bookingType: \"Hourly Booking of 3 Hours\",\r\n  roomName: \"Superior Double Room\",\r\n  guest: {\r\n    name: \"\",\r\n    email: \"\",\r\n  },\r\n};\r\nconst validationSchema = Yup.object({\r\n  name: Yup.string().required(\"Name is required\"),\r\n  email: Yup.string().email(\"Invalid email\").optional(),\r\n});\r\n\r\nconst BookingSummary = () => {\r\n  const location = useLocation();\r\n  const hotel = location.state?.hotelData;\r\n  const room = location.state?.selectedRoom;\r\n  const selectedSlot = location.state?.selectedSlot;\r\n  const pricingDetails = location.state?.pricingDetails;\r\n  const queryParams = new URLSearchParams(location.search);\r\n\r\n  const bookingType = queryParams.get(\"bookingType\");\r\n  // const bookingHours = queryParams.get(\"bookingHours\");\r\n  const checkinTime = queryParams.get(\"time\");\r\n  const checkinDate = queryParams.get(\"checkinDate\");\r\n  const checkOutDate = queryParams.get(\"checkOutDate\");\r\n  const rooms = queryParams.get(\"rooms\");\r\n  const adults = queryParams.get(\"adults\");\r\n  const children = queryParams.get(\"children\");\r\n\r\n  const value = selectedSlot?.slot;\r\n  const number = value?.match(/\\d+/)?.[0];\r\n  const extractedNumber = number ? parseInt(number, 10) : null;\r\n  const [user, setUser] = useState<any>({});\r\n  useEffect(() => {\r\n    if (isLoggedIn()) {\r\n      getProfile()\r\n        .then((res) => {\r\n          setUser(res?.data?.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n\r\n  const [orderDetails, setOrderDetails] = useState(null);\r\n\r\n  const totalAmount = pricingDetails?.totalPrice;\r\n  const handlePayment = async () => {\r\n    try {\r\n      // console.log(\"Total Amount before payment:\", totalAmount);\r\n\r\n      if (totalAmount === 0) {\r\n        alert(\"Booking amount cannot be zero.\");\r\n        return;\r\n      }\r\n\r\n      const payLoad = {\r\n        amount: totalAmount,\r\n        currency: \"INR\",\r\n      };\r\n\r\n      // console.log(\"Payload sent to createOrder:\", payLoad);\r\n      const response = await createOrder(payLoad);\r\n\r\n      // console.log(\"Payment Response:\", response);\r\n\r\n      if (response?.data) {\r\n        // alert(\"Payment successful!\");\r\n        setOrderDetails(response.data);\r\n      } else {\r\n        alert(\"Payment failed. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during payment:\", error);\r\n      alert(\"Payment failed. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const openModal = (\r\n    phoneNumber: string,\r\n    name: string,\r\n    email: string,\r\n    token: string\r\n  ) => {\r\n    const searchParams = new URLSearchParams(location.search);\r\n\r\n    searchParams.set(\"login\", \"true\");\r\n    searchParams.set(\"phone\", phoneNumber);\r\n    searchParams.set(\"name\", name);\r\n    searchParams.set(\"email\", email);\r\n    searchParams.set(\"token\", token);\r\n\r\n    navigate(`${location.pathname}?${searchParams.toString()}`, {\r\n      replace: true,\r\n      state: { ...location.state },\r\n    });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: user.userName || \"\",\r\n      email: user.email || \"\",\r\n      phoneNumber: `91${user.phoneNumber}` || \"\",\r\n    },\r\n    validationSchema,\r\n    enableReinitialize: true,\r\n    onSubmit: (values) => {\r\n      // console.log(\"Form submitted with values:\", values);\r\n      if (isLoggedIn()) {\r\n        handlePayment();\r\n      } else {\r\n        const payLoad = {\r\n          name: values.name,\r\n          email: values.email,\r\n          phone: values.phoneNumber.slice(2),\r\n        };\r\n        // console.log(payLoad);\r\n        sendOTP(payLoad)\r\n          .then((res) => {\r\n            console.log(res);\r\n            toast(\"Otp send Succesfully please verify the OTP\");\r\n            openModal(\r\n              values.phoneNumber.slice(2),\r\n              values.name,\r\n              values.email,\r\n              res?.data?.data\r\n            );\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n    },\r\n  });\r\n\r\n  const textContainerRef = useRef<HTMLDivElement>(null);\r\n  const [imageHeight, setImageHeight] = useState(\"auto\");\r\n  const calculateCheckoutTime = () => {\r\n    if (bookingType === \"hourly\" && checkinTime && extractedNumber) {\r\n      // For hourly bookings, calculate checkout time by adding hours to check-in time\r\n      const checkInDateTime = dayjs(`${checkinDate} ${checkinTime}`);\r\n      const checkOutDateTime = checkInDateTime.add(extractedNumber, 'hour');\r\n\r\n      return {\r\n        checkInDate: checkInDateTime.format(\"DD MMM YYYY\"),\r\n        checkInTime: checkInDateTime.format(\"hh:mm A\"),\r\n        checkOutDate: checkOutDateTime.format(\"DD MMM YYYY\"),\r\n        checkOutTime: checkOutDateTime.format(\"hh:mm A\"),\r\n        duration: `${extractedNumber} hrs`\r\n      };\r\n    } else {\r\n      // For overnight bookings, use the provided dates\r\n      return {\r\n        checkInDate: dayjs(checkinDate).format(\"DD MMM YYYY\"),\r\n        checkInTime: \"12.00 PM\",\r\n        checkOutDate: dayjs(checkOutDate).format(\"DD MMM YYYY\"),\r\n        checkOutTime: \"11.00 AM\",\r\n        duration: dayjs(checkOutDate).diff(dayjs(checkinDate), 'day') + 1 + \" night(s)\"\r\n      };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (textContainerRef.current) {\r\n      setImageHeight(`${textContainerRef.current.clientHeight}px`);\r\n    }\r\n  }, [hotel]);\r\n  return (\r\n    <Box\r\n      sx={{\r\n        ...BoxStyle,\r\n        background: \"#f6f6f6\",\r\n        mt: 0,\r\n        py: 4,\r\n        px: { xs: 1, md: 3 },\r\n        display: \"flex\",\r\n        flexDirection: { xs: \"column\", md: \"row\" },\r\n        justifyContent: \"center\",\r\n        gap: \"20px\",\r\n      }}\r\n    >\r\n      <Card\r\n        sx={{\r\n          p: 1,\r\n          background: \"white\",\r\n          maxWidth: \"700px\",\r\n          border: \"none\",\r\n          boxShadow: 0,\r\n          borderRadius: \"12px\",\r\n        }}\r\n      >\r\n        <CardContent>\r\n          <Typography\r\n            variant=\"h6\"\r\n            gutterBottom\r\n            sx={{ color: color.firstColor, fontWeight: \"bold\" }}\r\n          >\r\n            Your Booking Summary\r\n          </Typography>\r\n          {/* <Divider sx={{ mb: 2 }} /> */}\r\n\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: { xs: \"column\", md: \"row\" },\r\n              gap: { xs: 0, md: 2 },\r\n              position: \"relative\",\r\n              mt: 2,\r\n              height: \"fit-content\",\r\n              alignItems: \"stretch\",\r\n            }}\r\n          >\r\n            <CardMedia\r\n              component=\"img\"\r\n              sx={{\r\n                width: { xs: \"100%\", md: \"250px\" },\r\n                borderRadius: \"12px\",\r\n                objectFit: \"cover\",\r\n                height: imageHeight,\r\n                transition: \"height 0.3s ease\",\r\n              }}\r\n              image={hotel?.propertyImages[0]}\r\n            />\r\n            <div style={{ height: \"fit-content\" }} ref={textContainerRef}>\r\n              <Typography\r\n                sx={{\r\n                  fontSize: \"20px\",\r\n                  fontWeight: 600,\r\n                  color: color.firstColor,\r\n                  mt: { xs: 1.5, md: 1 },\r\n                  display: \"-webkit-box\",\r\n                  overflow: \"hidden\",\r\n                  textOverflow: \"ellipsis\",\r\n                  WebkitLineClamp: 1,\r\n                  WebkitBoxOrient: \"vertical\",\r\n                }}\r\n              >\r\n                {hotel?.propertyName}\r\n              </Typography>\r\n              <Typography\r\n                sx={{\r\n                  fontFamily: \"CustomFontSB\",\r\n                  fontSize: { xs: \"12px\", md: \"14px\" },\r\n                  display: \"-webkit-box\",\r\n                  overflow: \"hidden\",\r\n                  textOverflow: \"ellipsis\",\r\n                  WebkitLineClamp: 1,\r\n                  WebkitBoxOrient: \"vertical\",\r\n                }}\r\n              >\r\n                {hotel?.address}\r\n              </Typography>\r\n\r\n              <div\r\n                style={{\r\n                  marginTop: \"10px\",\r\n                  display: \"flex\",\r\n                  flexWrap: \"wrap\",\r\n                  flexDirection: \"column\",\r\n                  gap: \"4px\",\r\n                }}\r\n              >\r\n                {bookingType === \"hourly\" ? (\r\n                  <>\r\n                    <Typography sx={typoStyle}>\r\n                      <strong>Check-In:</strong>{\" \"}\r\n                      {dayjs(checkinDate).format(\"DD MMM YYYY\")},{\" \"}\r\n                      {checkinTime\r\n                        ? dayjs(checkinTime, \"HH:mm\").format(\"hh:mm A\")\r\n                        : \"\"}\r\n                    </Typography>\r\n                    {/* <Typography sx={typoStyle}>\r\n                      <strong>Check-Out:</strong>{\" \"}\r\n                      {checkinTime\r\n                        ? dayjs(checkinTime, \"HH:mm\")\r\n                            .add(Number(bookingHours), \"hour\")\r\n                            .format(\"hh:mm A\")\r\n                        : \"\"}\r\n                    </Typography> */}\r\n                    <Typography sx={typoStyle}>\r\n                      <strong>Duration: </strong>\r\n                      {extractedNumber} hrs\r\n                    </Typography>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Typography sx={typoStyle}>\r\n                      <strong>Check-In:</strong>{\" \"}\r\n                      {dayjs(checkinDate).format(\"DD MMM YYYY\")}\r\n                    </Typography>\r\n                    <Typography sx={typoStyle}>\r\n                      <strong>Check-Out:</strong>{\" \"}\r\n                      {dayjs(checkOutDate).format(\"DD MMM YYYY\")}\r\n                    </Typography>\r\n                  </>\r\n                )}\r\n\r\n                <Typography sx={typoStyle}>\r\n                  <strong>Room Type:</strong> {room?.roomCategory}\r\n                </Typography>\r\n                <Typography sx={typoStyle}>\r\n                  <strong>Room Info: </strong>\r\n                  {rooms} Room, {adults} Adults, {children} Children\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </Box>\r\n\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <Typography\r\n              variant=\"h6\"\r\n              mt={4}\r\n              sx={{ color: color.firstColor, fontWeight: \"bold\" }}\r\n            >\r\n              Guest Information\r\n            </Typography>\r\n\r\n            {/* Guest Name Field */}\r\n            <CustomTextField\r\n              label=\"Guest Name\"\r\n              name=\"name\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              value={formik.values.name}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.name && Boolean(formik.errors.name)}\r\n            />\r\n\r\n            <Box mt={1}>\r\n              <PhoneInput\r\n                country={\"in\"}\r\n                value={formik.values.phoneNumber}\r\n                onChange={(value) => formik.setFieldValue(\"phoneNumber\", value)}\r\n                onBlur={() => formik.setFieldTouched(\"phoneNumber\", true)}\r\n                inputStyle={{\r\n                  width: \"100%\",\r\n                  height: \"56px\", // Same height as CustomTextField\r\n                  borderRadius: \"52px\",\r\n                  border: \"none\",\r\n                  boxShadow: \"4px 4px 10px rgba(104, 39, 184, 0.17)\",\r\n                  color: color.firstColor,\r\n                  paddingLeft: \"58px\", // Adjust for country code\r\n                  fontSize: \"16px\",\r\n                  backgroundColor: \"white\",\r\n                  transition: \"border-color 0.2s ease\",\r\n                }}\r\n                buttonStyle={{\r\n                  borderRadius: \"52px 0 0 52px\",\r\n                  margin: \"5px\", // Match left side border-radius\r\n                  backgroundColor: \"white\",\r\n                }}\r\n                containerStyle={{\r\n                  width: \"100%\",\r\n                }}\r\n              />\r\n              {formik.touched.phoneNumber && formik.errors.phoneNumber && (\r\n                <Typography\r\n                  sx={{\r\n                    color: \"red\",\r\n                    fontSize: \"12px\",\r\n                    mt: 0.5,\r\n                    ml: \"14px\",\r\n                  }}\r\n                >\r\n                  {formik.errors.phoneNumber}\r\n                </Typography>\r\n              )}\r\n            </Box>\r\n\r\n            <CustomTextField\r\n              label=\"Email Address (Optional)\"\r\n              name=\"email\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n            />\r\n\r\n            {isLoggedIn() ? (\r\n              <>\r\n                <CustomButton\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  sx={{ mt: 2 }}\r\n                  type=\"submit\"\r\n                >\r\n                  Pay Now\r\n                </CustomButton>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <CustomButton\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  sx={{ mt: 2 }}\r\n                  type=\"submit\"\r\n                >\r\n                  verify Phone & Pay\r\n                </CustomButton>\r\n              </>\r\n            )}\r\n\r\n            <LoginOtpModal></LoginOtpModal>\r\n\r\n            {/* Render Razorpay */}\r\n            {orderDetails && (\r\n              <RenderRazorpay\r\n                orderDetails={orderDetails}\r\n                amount={bookingData.roomPrice}\r\n                bookingDetails={{\r\n                  hotel,\r\n                  room,\r\n                  guestInfo: formik.values,\r\n                  timing: calculateCheckoutTime(),\r\n                  pricingDetails,\r\n                  bookingType,\r\n                  rooms,\r\n                  adults,\r\n                  children\r\n                }}\r\n              />\r\n            )}\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card\r\n        sx={{\r\n          p: 1,\r\n          background: \"white\",\r\n          border: \"none\",\r\n          boxShadow: 0,\r\n          borderRadius: \"12px\",\r\n          height: \"fit-content\",\r\n        }}\r\n      >\r\n        <CardContent>\r\n          <Typography\r\n            variant=\"h6\"\r\n            gutterBottom\r\n            sx={{ color: color.firstColor, fontWeight: \"bold\" }}\r\n          >\r\n            Your Bil Summary\r\n          </Typography>\r\n\r\n          <div\r\n            style={{\r\n              marginTop: \"10px\",\r\n              display: \"flex\",\r\n              flexWrap: \"wrap\",\r\n              flexDirection: \"column\",\r\n              gap: \"4px\",\r\n            }}\r\n          >\r\n            <Typography sx={typoStyle}>\r\n              <strong>Room price: </strong>₹{pricingDetails?.basePrice}\r\n            </Typography>\r\n            <Typography sx={typoStyle}>\r\n              <strong>Tax: </strong>₹{pricingDetails?.tax}\r\n            </Typography>\r\n            <Typography sx={typoStyle}>\r\n              <strong>Extra fees: </strong>₹{pricingDetails?.extraFees}\r\n            </Typography>\r\n\r\n            <Divider sx={{ my: 2 }}></Divider>\r\n\r\n            <Typography\r\n              variant=\"h6\"\r\n              sx={{\r\n                color: color.firstColor,\r\n                fontWeight: \"bold\",\r\n                lineHeight: 1,\r\n              }}\r\n            >\r\n              Total price: ₹{pricingDetails?.totalPrice}.00 <br />\r\n              <span style={{ fontSize: \"12px\", fontWeight: \"normal\" }}>\r\n                incl. of all taxes\r\n              </span>\r\n            </Typography>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BookingSummary;\r\n\r\nconst typoStyle = {\r\n  borderRadius: \"52px\",\r\n  boxShadow: \"4px 4px 10px rgba(104, 39, 184, 0.17)\",\r\n  color: color.firstColor,\r\n  background: \"white\",\r\n  //   fontWeight: \"bold\",\r\n  fontSize: { xs: \"12px\", md: \"14px\" },\r\n  width: \"fit-content\",\r\n  p: 1,\r\n  px: 2,\r\n  mb: 1,\r\n};\r\n","/* eslint-disable jsx-a11y/img-redundant-alt */\r\nimport { ArrowBackIos, ArrowForwardIos, Close, ExpandLess, ExpandMore, FiberManualRecord } from \"@mui/icons-material\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControlLabel,\r\n  Grid,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Modal,\r\n  Radio,\r\n  RadioProps,\r\n  styled,\r\n  TextField,\r\n  Typography,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport color from \"./color\";\r\nimport { useState } from \"react\";\r\n\r\nexport const BoxStyle = {\r\n  p: 2,\r\n  px: 4,\r\n  boxShadow: \"0px 0px 20px rgba(0, 0, 0, 0.18)\",\r\n  borderRadius: \"12px\",\r\n  my: 4,\r\n};\r\n\r\nexport function BpRadio(props: RadioProps) {\r\n  return (\r\n    <Radio\r\n      style={{ padding: \"6px\" }}\r\n      disableRipple\r\n      color=\"default\"\r\n      checkedIcon={<BpCheckedIcon />}\r\n      icon={<BpIcon />}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport const BpIcon = styled(\"span\")(({ theme }) => ({\r\n  borderRadius: \"50%\",\r\n  width: 18,\r\n  height: 18,\r\n  boxShadow:\r\n    \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\r\n  backgroundColor: \"#f5f8fa\",\r\n  backgroundImage:\r\n    \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\r\n  \".Mui-focusVisible &\": {\r\n    outline: \"2px auto rgba(41, 91, 122, 0.6)\",\r\n    outlineOffset: 2,\r\n  },\r\n  \"input:hover ~ &\": {\r\n    backgroundColor: \"#ebf1f5\",\r\n    ...theme.applyStyles(\"dark\", {\r\n      backgroundColor: \"#30404d\",\r\n    }),\r\n  },\r\n  \"input:disabled ~ &\": {\r\n    boxShadow: \"none\",\r\n    background: \"rgba(206,217,224,.5)\",\r\n    ...theme.applyStyles(\"dark\", {\r\n      background: \"rgba(57,75,89,.5)\",\r\n    }),\r\n  },\r\n  ...theme.applyStyles(\"dark\", {\r\n    boxShadow: \"0 0 0 1px rgb(16 22 26 / 40%)\",\r\n    backgroundColor: \"#394b59\",\r\n    backgroundImage:\r\n      \"linear-gradient(180deg,hsla(0,0%,100%,.05),hsla(0,0%,100%,0))\",\r\n  }),\r\n}));\r\n\r\nexport const BpCheckedIcon = styled(BpIcon)({\r\n  backgroundColor: color.secondColor,\r\n  backgroundImage:\r\n    \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\r\n  \"&::before\": {\r\n    display: \"block\",\r\n    width: 18,\r\n    height: 18,\r\n    backgroundImage: \"radial-gradient(#fff,#fff 28%,transparent 32%)\",\r\n    content: '\"\"',\r\n  },\r\n  \"input:hover ~ &\": {\r\n    backgroundColor: color.secondColor,\r\n  },\r\n});\r\n\r\nexport const StyledLabel = styled(FormControlLabel)(\r\n  ({ theme, checked }: { theme?: any; checked?: boolean }) => ({\r\n    color: checked ? color.thirdColor : color.firstColor,\r\n    background: checked\r\n      ? color.firstColor\r\n      : \"transparent\",\r\n    borderRadius: \" 2px 8px 8px 2px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    transition: \"0.3s\",\r\n    paddingLeft: checked ? \"30px\" : \"auto\",\r\n    marginLeft: checked ? \"-40px\" : \"-10px\",\r\n    paddingRight: \"10px\",\r\n    fontSize: checked ? \"1rem\" : \"0.95rem\",\r\n  })\r\n);\r\n\r\nexport const CustomRadio = styled(Radio)({\r\n  color: color.firstColor,\r\n  \"&.Mui-checked\": {\r\n    color: color.thirdColor,\r\n  },\r\n});\r\n\r\nexport const CustomPrevArrow = (props: any) => {\r\n  const { onClick } = props;\r\n  return (\r\n    <IconButton\r\n      onClick={onClick}\r\n      sx={{\r\n        position: \"absolute\",\r\n        left: \"0px\",\r\n        top: \"50%\",\r\n        transform: \"translateY(-50%)\",\r\n        background: color.background,\r\n        color: \"white\",\r\n        zIndex: 2,\r\n        \"&:hover\": { background: color.firstColor },\r\n      }}\r\n    >\r\n      <ArrowBackIos />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport const CustomNextArrow = (props: any) => {\r\n  const { onClick } = props;\r\n  return (\r\n    <IconButton\r\n      onClick={onClick}\r\n      sx={{\r\n        position: \"absolute\",\r\n        right: \"0px\",\r\n        top: \"50%\",\r\n        transform: \"translateY(-50%)\",\r\n        background: color.background,\r\n        color: \"white\",\r\n        zIndex: 2,\r\n        \"&:hover\": { background: color.firstColor },\r\n      }}\r\n    >\r\n      <ArrowForwardIos />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport const CustomTextField = styled(TextField)({\r\n  marginBottom: \"10px\",\r\n  \"& .MuiOutlinedInput-root\": {\r\n    \"& fieldset\": {\r\n      border: \"none\",\r\n      borderRadius: \"52px\",\r\n      boxShadow: \"4px 4px 10px rgba(104, 39, 184, 0.17)\",\r\n      color: color.firstColor,\r\n    },\r\n    \"&:hover fieldset\": {\r\n      border: \"solid 1px\",\r\n    },\r\n    \"&.Mui-focused fieldset\": {\r\n      border: \"solid 1px\",\r\n    },\r\n  },\r\n  \"& .MuiInputBase-input\": {\r\n    color: color.firstColor,\r\n  },\r\n  \"& .MuiInputLabel-root\": {\r\n    color: color.firstColor,\r\n  },\r\n  \"& .MuiInputLabel-root.Mui-focused\": {\r\n    color: color.firstColor,\r\n  },\r\n});\r\n\r\nexport const LoginTextField = styled(TextField)({\r\n  marginBottom: \"20px\",\r\n  \"& .MuiOutlinedInput-root\": {\r\n    \"& fieldset\": {\r\n      border: \"solid 1px white\",\r\n      boxShadow: \"-4px -4px 10px rgba(255, 255, 255, 0.36) inset\",\r\n      color: \"white\",\r\n      borderRadius: \"12px\",\r\n    },\r\n    \"&:hover fieldset\": {\r\n      border: \"solid 1px\",\r\n    },\r\n    \"&.Mui-focused fieldset\": {\r\n      border: \"solid 1px\",\r\n    },\r\n  },\r\n  \"& .MuiInputBase-input\": {\r\n    color: \"white\",\r\n  },\r\n  \"& .MuiInputLabel-root\": {\r\n    color: \"white\",\r\n  },\r\n  \"& .MuiInputLabel-root.Mui-focused\": {\r\n    color: \"white\",\r\n  },\r\n});\r\n\r\nexport const useScreenSize = () => {\r\n  const theme = useTheme();\r\n  const isBelow400px = useMediaQuery(theme.breakpoints.down(400));\r\n  return { isBelow400px };\r\n};\r\n\r\nexport const inputSx = {\r\n  border: \"none\",\r\n  borderRadius: \"52px\",\r\n  boxShadow: \"4px 4px 10px rgba(104, 39, 184, 0.17)\",\r\n  color: color.firstColor,\r\n  padding: \"0px\",\r\n  marginTop: \"0px\",\r\n  width: \"100%\",\r\n  boxSizing: \"border-box\",\r\n  \"& .MuiOutlinedInput-root\": {\r\n    padding: \"0px\",\r\n    borderBottom: \"4px solid\",\r\n    borderColor: color.firstColor,\r\n    \"& fieldset\": {\r\n      border: \"none\",\r\n    },\r\n    \"&:hover fieldset\": {\r\n      border: \"none\",\r\n    },\r\n    \"&.Mui-focused fieldset\": {\r\n      border: \"none\",\r\n    },\r\n    \"& .MuiInputLabel-root\": {\r\n      color: color.firstColor,\r\n    },\r\n  },\r\n};\r\n\r\n\r\ninterface ImageGridProps {\r\n  propertyImages: string[];\r\n}\r\n\r\nexport const ImageGrid: React.FC<ImageGridProps> = ({ propertyImages }) => {\r\n  const maxImages = Math.min(propertyImages.length, 7);\r\n  const displayImages = propertyImages.slice(0, maxImages);\r\n  const hasMore = propertyImages.length > 7;\r\n  const [open, setOpen] = useState(false);\r\n  const isMobile = useMediaQuery(\"(max-width: 900px)\");\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: { xs: \"block\", md: \"grid\" },\r\n        gap: { xs: 0, md: 1 },\r\n        width: \"100%\",\r\n        height: \"300px\",\r\n        gridTemplateColumns:\r\n          displayImages.length > 5 ? \"40% 20% 20% 20%\" : \"60% 20% 20%\",\r\n        gridTemplateRows: \"auto\",\r\n        \"& img\": {\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          objectFit: \"cover\",\r\n          borderRadius: \"8px\",\r\n        },\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <Box\r\n        onClick={() => setOpen(true)}\r\n        sx={{\r\n          gridColumn: { xs: \"auto\", md: \"span 1\" },\r\n          gridRow: { xs: \"auto\", md: \"span 2\" },\r\n          height: \"300px\",\r\n          width: { xs: \"100%\", md: \"auto\" },\r\n          display: { xs: \"block\", md: \"grid\" },\r\n        }}\r\n      >\r\n        <img style={{height:'300px'}} src={displayImages[0]} alt=\"Main\" />\r\n      </Box>\r\n\r\n      {!isMobile &&\r\n        displayImages.slice(1).map((src, index) => {\r\n          if (index % 2 === 0) {\r\n            return (\r\n              <Box\r\n                onClick={() => setOpen(true)}\r\n                key={index}\r\n                display=\"grid\"\r\n                sx={{\r\n                  gridTemplateRows: \"146px 146px\",\r\n                  height: \"300px\",\r\n                  gap: \"8px\",\r\n                }}\r\n              >\r\n                <img\r\n                  src={src}\r\n                  alt={`Image ${index + 2}`}\r\n                  style={{ height: \"100%\", width: \"100%\", objectFit: \"cover\" }}\r\n                />\r\n\r\n                {displayImages[index + 2] && (\r\n                  <img\r\n                    src={displayImages[index + 2]}\r\n                    alt={`Image ${index + 3}`}\r\n                    style={{\r\n                      height: \"100%\",\r\n                      width: \"100%\",\r\n                      objectFit: \"cover\",\r\n                    }}\r\n                  />\r\n                )}\r\n              </Box>\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n\r\n      {hasMore && (\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            bottom: 10,\r\n            right: 10,\r\n            background: color.background,\r\n            color: \"white\",\r\n            borderRadius: \"8px\",\r\n            p: 1,\r\n            textAlign: \"center\",\r\n            cursor: \"pointer\",\r\n            boxShadow:\r\n              \"-4px -4px 10px rgba(32, 32, 32, 0.28) inset, 0px 0px 10px rgba(32, 32, 32, 0.28)\",\r\n          }}\r\n        >\r\n          <Typography variant=\"body2\">\r\n            + {isMobile ? propertyImages.length - 1 : propertyImages.length - 7} More\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: \"80%\",\r\n            height: \"80%\",\r\n            bgcolor: \"white\",\r\n            boxShadow: 24,\r\n            p: 2,\r\n            overflowY: \"auto\",\r\n            borderRadius: \"8px\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" textAlign=\"center\" mb={2}>\r\n            All Images\r\n          </Typography>\r\n\r\n          <Close\r\n            onClick={() => setOpen(false)}\r\n            sx={{\r\n              position: \"absolute\",\r\n              top: 10,\r\n              right: 10,\r\n            }}\r\n          ></Close>\r\n          <Box\r\n            display=\"grid\"\r\n            gap={2}\r\n            sx={{\r\n              gridTemplateColumns: \"repeat(auto-fill, minmax(150px, 1fr))\",\r\n            }}\r\n          >\r\n            {propertyImages.map((img, index) => (\r\n              <img\r\n                key={index}\r\n                src={img}\r\n                alt={`Image ${index + 1}`}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"150px\",\r\n                  objectFit: \"cover\",\r\n                  borderRadius: \"8px\",\r\n                }}\r\n              />\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </Box>\r\n  );\r\n};\r\n\r\n\r\n\r\n  \r\nexport const RoomAmenities = ({\r\n  room,\r\n}: {\r\n  room: { propertyName: string; amenities: string[] };\r\n}) => {\r\n  const [showAll, setShowAll] = useState(false);\r\n  const displayedAmenities = showAll\r\n    ? room.amenities\r\n    : room.amenities.slice(0, 6);\r\n  const halfIndex = Math.ceil(displayedAmenities.length / 2);\r\n  const firstColumn = displayedAmenities.slice(0, halfIndex);\r\n  const secondColumn = displayedAmenities.slice(halfIndex);\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ mt: { xs: 1, md: 0 } }}>\r\n        <Grid container spacing={{ xs: 1, md: 0 }}>\r\n          {[firstColumn, secondColumn].map((column, colIndex) => (\r\n            <Grid item xs={6} md={12} key={colIndex}>\r\n              <List disablePadding>\r\n                {column.map((amenity, index) => {\r\n                  const isLastItem =\r\n                    colIndex === 1 &&\r\n                    index === column.length - 1 &&\r\n                    room.amenities.length > 6;\r\n\r\n                  return (\r\n                    <ListItem\r\n                      key={index}\r\n                      sx={{\r\n                        py: 0.2,\r\n                        px: { xs: 0, md: 2 },\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        flexWrap: \"wrap\",\r\n                      }}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"flex-start\",\r\n                        }}\r\n                      >\r\n                        <ListItemIcon sx={{ minWidth: \"20px\", mt: 0.5 }}>\r\n                          <FiberManualRecord sx={{ fontSize: \"8px\" }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                          style={{ margin: 0 }}\r\n                          primary={amenity}\r\n                          primaryTypographyProps={{\r\n                            style: { fontSize: \"12px\" },\r\n                          }}\r\n                        />\r\n                      </div>\r\n\r\n                      {isLastItem && (\r\n                        <>\r\n                          <Button\r\n                            onClick={() => setShowAll(!showAll)}\r\n                            sx={{\r\n                              textTransform: \"none\",\r\n                              fontSize: \"14px\",\r\n                              ml: \"auto\",\r\n                              p: 0,\r\n                              color: color.firstColor,\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {showAll ? \"Show Less\" : \"... Show All\"}\r\n                          </Button>\r\n                          {showAll ? <ExpandLess /> : <ExpandMore />}\r\n                        </>\r\n                      )}\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getRatingText = (rating: number) => {\r\n  if (rating >= 4.5) return \"Excellent\";\r\n  if (rating >= 3.5) return \"Good\";\r\n  if (rating >= 2.5) return \"Average\";\r\n  if (rating >= 1.5) return \"Poor\";\r\n  return \"Very Poor\";\r\n};\r\n\r\nexport const getRatingColor = (rating: number) => {\r\n  if (rating >= 4.5) return \"#46b648\";\r\n  if (rating >= 3.5) return \"#b4d137\"; \r\n  if (rating >= 2.5) return \"#fed018\"; \r\n  if (rating >= 1.5) return \"#f7921e\"; \r\n  return \"#e91d26\"; \r\n};","import { Edit } from \"@mui/icons-material\";\r\nimport { Box, Button, Grid, Modal, TextField, Typography } from \"@mui/material\";\r\nimport { useRef, useState } from \"react\";\r\nimport \"react-phone-input-2/lib/material.css\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport color from \"../../components/color\";\r\nimport { verifyOTP } from \"../../services/services\";\r\nimport \"./Login.css\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  setCurrentAccessToken,\r\n  setCurrentUser,\r\n} from \"../../services/axiosClient\";\r\n\r\nconst LoginOtpModal = () => {\r\n  const [step, setStep] = useState(1);\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [countryCode, setCountryCode] = useState(\"in\");\r\n  const [sessionId, setSessionId] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const location = useLocation();\r\n  const state = location.state;\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const phone = queryParams.get(\"phone\");\r\n  const name = queryParams.get(\"name\");\r\n  const session = queryParams.get(\"token\");\r\n  const email = queryParams.get(\"email\");\r\n\r\n  const [otp, setOtp] = useState(Array(4).fill(\"\"));\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const otpRefs = Array.from({ length: 4 }, () =>\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    useRef<HTMLInputElement>(null)\r\n  );\r\n\r\n  const isModalOpen =\r\n    new URLSearchParams(location.search).get(\"login\") === \"true\";\r\n\r\n  const handleClose = () => {\r\n    const searchParams = new URLSearchParams(location.search);\r\n\r\n    searchParams.delete(\"login\");\r\n    searchParams.delete(\"phone\");\r\n    searchParams.delete(\"name\");\r\n    searchParams.delete(\"email\");\r\n    searchParams.delete(\"token\");\r\n\r\n    navigate(`${location.pathname}?${searchParams.toString()}`, {\r\n      replace: true,\r\n      state: { ...location.state },\r\n    });\r\n  };\r\n\r\n  // const phoneFormik = useFormik({\r\n  //   initialValues: { phone: \"\" },\r\n  //   validationSchema: Yup.object({\r\n  //     phone: Yup.string()\r\n  //       .required(\"Phone number is required\")\r\n  //       .matches(/^\\d+$/, \"Only numbers allowed\"),\r\n  //   }),\r\n  //   onSubmit: (values) => {\r\n\r\n  //   },\r\n  // });\r\n\r\n  const handleOtpChange = (index: number, value: string) => {\r\n    if (!/^\\d*$/.test(value)) return;\r\n    const newOtp = [...otp];\r\n    newOtp[index] = value;\r\n    setOtp(newOtp);\r\n\r\n    if (value && index < 3) {\r\n      otpRefs[index + 1].current?.focus();\r\n    }\r\n  };\r\n\r\n  const handleOtpSubmit = () => {\r\n    if (otp.join(\"\").length === 4) {\r\n      const payLoad = {\r\n        otp: otp.join(\"\"),\r\n        sessionId: session,\r\n        phone: phone,\r\n        name: name,\r\n        email: email,\r\n      };\r\n      verifyOTP(payLoad)\r\n        .then((res) => {\r\n          setCurrentAccessToken(res?.data?.data?.token);\r\n          setCurrentUser(res?.data?.data?.user);\r\n          toast(res?.data?.msg);\r\n          handleClose();\r\n\r\n          // ✅ Trigger payment if the callback exists\r\n          if (location.state?.onPaymentSuccess) {\r\n            location.state.onPaymentSuccess(); // 🔥 Call handlePayment from the previous page\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          toast(err);\r\n        });\r\n    } else {\r\n      alert(\"Enter complete OTP\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal open={isModalOpen} onClose={handleClose}>\r\n      <Box sx={modalStyle}>\r\n        {/* {step === 1 ? (\r\n          <form\r\n            onSubmit={phoneFormik.handleSubmit}\r\n            style={{ height: \"100%\", borderRadius: \"12px\" }}\r\n          >\r\n            <div\r\n              className=\"subscribe\"\r\n              style={{\r\n                background: color.background,\r\n                color: \"white\",\r\n                position: \"relative\",\r\n                boxShadow: \"-4px -4px 10px rgba(255, 255, 255, 0.36) inset\",\r\n                borderRadius: \"12px\",\r\n                overflow: \"hidden\",\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  background: \"url('/assets/footer.webp')\",\r\n                  backgroundSize: { xs: \"70%\", md: \"70%\" },\r\n                  backgroundRepeat: \"no-repeat\",\r\n                  backgroundPosition: \"bottom left\",\r\n                  position: \"absolute\",\r\n                  top: 0,\r\n                  left: 0,\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                }}\r\n              ></Box>\r\n\r\n              <Typography variant=\"h6\">Enter Phone Number</Typography>\r\n              <Typography\r\n                mb={4}\r\n                variant=\"body2\"\r\n                sx={{ fontSize: \"12px\", textAlign: \"left\", maxWidth: \"80%\" }}\r\n              >\r\n                Login to create a booking!\r\n              </Typography>\r\n              <PhoneInput\r\n                country={\"in\"}\r\n                value={phoneFormik.values.phone}\r\n                onChange={(value, country) => {\r\n                  const countryData = country as CountryData;\r\n                  setCountryCode(countryData.countryCode);\r\n                  phoneFormik.setFieldValue(\r\n                    \"phone\",\r\n                    value.replace(/[^0-9]/g, \"\")\r\n                  );\r\n                }}\r\n                inputStyle={{\r\n                  width: \"100%\",\r\n                  fontFamily: \"CustomFontM\",\r\n                  color: \"black\",\r\n                  background: color.thirdColor,\r\n                }}\r\n                containerStyle={{ position: \"relative\" }}\r\n              />\r\n              {phoneFormik.touched.phone && phoneFormik.errors.phone && (\r\n                <Typography sx={{ color: \"white\", fontSize: \"14px\" }}>\r\n                  *{phoneFormik.errors.phone}\r\n                </Typography>\r\n              )}\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                sx={{\r\n                  background: color.thirdColor,\r\n\r\n                  color: color.firstColor,\r\n                  fontSize: \"14px\",\r\n                  fontWeight: \"bold\",\r\n                  textTransform: \"none\",\r\n                  m: \"auto\",\r\n                  mt: 4,\r\n                  width: \"100%\",\r\n                  display: \"block\",\r\n                  position: \"absolute\",\r\n                  bottom: 0,\r\n                  left: 0,\r\n                  borderRadius: 0,\r\n                  py: 2,\r\n                  boxShadow: \"0px -6px 50px rgba(7, 7, 7, 0.11)\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                Send OTP\r\n              </Button>\r\n\r\n              {/* <div className=\"submit-btn\">SUBMIT</div> */}\r\n        {/* </div> */}\r\n        {/* </form> */}\r\n        {/* ) : (  */}\r\n        <>\r\n          <div\r\n            className=\"subscribe\"\r\n            style={{\r\n              background: color.background,\r\n              color: \"white\",\r\n              position: \"relative\",\r\n              boxShadow: \"-4px -4px 10px rgba(255, 255, 255, 0.36) inset\",\r\n              borderRadius: \"12px\",\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                background: \"url('/assets/footer.webp')\",\r\n                backgroundSize: { xs: \"70%\", md: \"70%\" },\r\n                backgroundRepeat: \"no-repeat\",\r\n                backgroundPosition: \"bottom left\",\r\n                position: \"absolute\",\r\n                top: 0,\r\n                left: 0,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n              }}\r\n            ></Box>\r\n            <Typography variant=\"h6\">Enter OTP</Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              Sent to: +{phone}{\" \"}\r\n              <Button\r\n                size=\"small\"\r\n                onClick={() => handleClose()}\r\n                sx={{\r\n                  color: color.firstColor,\r\n                  background: color.thirdColor,\r\n                  p: 0,\r\n                  px: 1,\r\n                  minWidth: 0,\r\n                  ml: 1,\r\n                  textTransform: \"none\",\r\n                }}\r\n              >\r\n                <Edit sx={{ fontSize: \"14px\" }}></Edit> Edit\r\n              </Button>\r\n            </Typography>\r\n            <Grid container spacing={1} justifyContent=\"center\" mt={3}>\r\n              {otp.map((_, index) => (\r\n                <Grid item key={index}>\r\n                  <TextField\r\n                    inputRef={otpRefs[index]}\r\n                    value={otp[index]}\r\n                    onChange={(e) => handleOtpChange(index, e.target.value)}\r\n                    inputProps={{\r\n                      maxLength: 1,\r\n                      style: {\r\n                        textAlign: \"center\",\r\n                        fontSize: 18,\r\n                        borderColor: \"transparent\",\r\n                      },\r\n                    }}\r\n                    // sx={{ width: 40 }}\r\n\r\n                    sx={{\r\n                      width: 40,\r\n                      bgcolor: color.thirdColor,\r\n                      borderRadius: 2,\r\n                      // minWidth: \"200px\",\r\n                      border: \"none\",\r\n                      outline: \"none\",\r\n                      boxShadow: \"none\",\r\n                      \"& fieldset\": {\r\n                        border: \"none\",\r\n                      },\r\n                      \"&:hover\": {\r\n                        bgcolor: \"#f5f5f5\",\r\n                      },\r\n                      \"& .MuiInputBase-input\": {\r\n                        color: color.firstColor,\r\n                        fontFamily: \"CustomFontB\",\r\n                        fontSize: \"20px\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n            <Button\r\n              onClick={handleOtpSubmit}\r\n              type=\"submit\"\r\n              sx={{\r\n                background: color.thirdColor,\r\n                color: color.firstColor,\r\n                fontSize: \"14px\",\r\n                fontWeight: \"bold\",\r\n                textTransform: \"none\",\r\n                m: \"auto\",\r\n                mt: 4,\r\n                width: \"100%\",\r\n                display: \"block\",\r\n                position: \"absolute\",\r\n                bottom: 0,\r\n                left: 0,\r\n                borderRadius: 0,\r\n                py: 2,\r\n                boxShadow: \"0px -6px 50px rgba(7, 7, 7, 0.11)\",\r\n              }}\r\n            >\r\n              Verify OTP\r\n            </Button>\r\n          </div>\r\n        </>\r\n        {/* )} */}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  maxWidth: 400,\r\n  width: \"90%\",\r\n  height: 240,\r\n  background: color.thirdColor,\r\n  borderRadius: \"12px\",\r\n  //   p: 4,\r\n};\r\n\r\nexport default LoginOtpModal;\r\n"],"names":["_ref","orderDetails","bookingDetails","console","log","navigate","useNavigate","open","setOpen","useState","handleClose","_jsx","children","_jsxs","Dialog","onClose","maxWidth","fullWidth","sx","padding","borderRadius","DialogTitle","DialogContent","DialogActions","style","display","justifyContent","Button","textTransform","color","onClick","async","src","Promise","resolve","script","document","createElement","onload","onerror","body","appendChild","alert","window","Razorpay","options","key","R_KEY_ID","amount","data","currency","order_id","id","handler","_bookingDetails$hotel","_bookingDetails$guest","_bookingDetails$timin","_bookingDetails$timin2","_bookingDetails$timin3","_bookingDetails$timin4","_bookingDetails$hotel2","verifyPayment","orderId","response","razorpay_order_id","paymentId","razorpay_payment_id","signature","razorpay_signature","payLoad","userId","getUserId","hotelId","hotel","geustName","guestInfo","name","amountPaid","checkInDate","timing","checkInTime","checkOutDate","checkOutTime","bookingType","geustDetails","adults","hotelName","propertyName","status","postBooking","then","res","_res$data","toast","msg","catch","err","error","variant","background","firstColor","fontSize","border","transition","paddingRight","bookingData","validationSchema","Yup","required","email","optional","BookingSummary","_location$state","_location$state2","_location$state3","_location$state4","_value$match","location","useLocation","state","hotelData","room","selectedRoom","selectedSlot","pricingDetails","queryParams","URLSearchParams","search","get","checkinTime","checkinDate","rooms","value","slot","number","match","extractedNumber","parseInt","user","setUser","useEffect","isLoggedIn","getProfile","setOrderDetails","totalAmount","totalPrice","formik","useFormik","initialValues","userName","phoneNumber","enableReinitialize","onSubmit","values","createOrder","handlePayment","phone","slice","sendOTP","_res$data2","openModal","token","searchParams","set","pathname","toString","replace","textContainerRef","useRef","imageHeight","setImageHeight","current","clientHeight","Box","BoxStyle","mt","py","px","xs","md","flexDirection","gap","Card","p","boxShadow","CardContent","Typography","gutterBottom","fontWeight","position","height","alignItems","CardMedia","component","width","objectFit","image","propertyImages","ref","overflow","textOverflow","WebkitLineClamp","WebkitBoxOrient","fontFamily","address","marginTop","flexWrap","_Fragment","typoStyle","dayjs","format","roomCategory","handleSubmit","CustomTextField","label","margin","onChange","handleChange","onBlur","handleBlur","touched","Boolean","errors","PhoneInput","country","setFieldValue","setFieldTouched","inputStyle","paddingLeft","backgroundColor","buttonStyle","containerStyle","ml","CustomButton","type","LoginOtpModal","RenderRazorpay","calculateCheckoutTime","checkInDateTime","checkOutDateTime","add","duration","diff","basePrice","tax","extraFees","Divider","my","lineHeight","mb","BpRadio","props","Radio","disableRipple","checkedIcon","BpCheckedIcon","icon","BpIcon","styled","theme","backgroundImage","outline","outlineOffset","applyStyles","secondColor","content","StyledLabel","FormControlLabel","_ref2","checked","thirdColor","marginLeft","CustomRadio","CustomNextArrow","IconButton","right","top","transform","zIndex","ArrowForwardIos","TextField","marginBottom","LoginTextField","useScreenSize","useTheme","isBelow400px","useMediaQuery","breakpoints","down","inputSx","boxSizing","borderBottom","borderColor","ImageGrid","_ref3","maxImages","Math","min","length","displayImages","hasMore","isMobile","gridTemplateColumns","gridTemplateRows","gridColumn","gridRow","alt","map","index","bottom","textAlign","cursor","Modal","left","bgcolor","overflowY","Close","img","RoomAmenities","_ref4","showAll","setShowAll","displayedAmenities","amenities","halfIndex","ceil","firstColumn","secondColumn","Grid","container","spacing","column","colIndex","item","List","disablePadding","amenity","isLastItem","ListItem","ListItemIcon","minWidth","FiberManualRecord","ListItemText","primary","primaryTypographyProps","ExpandLess","ExpandMore","getRatingText","rating","getRatingColor","modalStyle","step","setStep","setPhoneNumber","countryCode","setCountryCode","sessionId","setSessionId","session","otp","setOtp","Array","fill","otpRefs","from","isModalOpen","delete","className","backgroundSize","backgroundRepeat","backgroundPosition","size","Edit","_","inputRef","e","handleOtpChange","test","newOtp","_otpRefs$current","focus","target","inputProps","maxLength","handleOtpSubmit","join","verifyOTP","_res$data$data","_res$data2$data","_res$data3","setCurrentAccessToken","setCurrentUser","onPaymentSuccess","m"],"sourceRoot":""}